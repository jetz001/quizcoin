{"id":"e884291a8f1e04e1f6f307d9dc7d9ba3","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"contracts/facets/MerkleFacet.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"../libraries/LibMerkleStorage.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\r\n\r\ncontract MerkleFacet {\r\n    event MerkleRootSubmitted(uint256 indexed quizId, bytes32 root);\r\n\r\n    /// @notice Submit Merkle root for a quiz\r\n    /// @param quizId The quiz ID\r\n    /// @param root The Merkle root\r\n    /// @param leaves The leaves for mapping leaf → quizId\r\n    function submitMerkleRoot(uint256 quizId, bytes32 root, bytes32[] calldata leaves) external {\r\n        LibMerkleStorage.MerkleStorage storage ms = LibMerkleStorage.merkleStorage();\r\n        ms.quizRoots[quizId] = root;\r\n\r\n        for (uint256 i = 0; i < leaves.length; i++) {\r\n            ms.leafToQuizId[leaves[i]] = quizId;\r\n        }\r\n\r\n        emit MerkleRootSubmitted(quizId, root);\r\n    }\r\n\r\n    /// @notice Verify leaf is valid under stored root\r\n    function verifyQuiz(bytes32 leaf, bytes32[] calldata proof) external view returns (bool) {\r\n        LibMerkleStorage.MerkleStorage storage ms = LibMerkleStorage.merkleStorage();\r\n        uint256 quizId = ms.leafToQuizId[leaf];\r\n        require(quizId != 0, \"MerkleFacet: Leaf not registered\");\r\n        return MerkleProof.verify(proof, ms.quizRoots[quizId], leaf);\r\n    }\r\n\r\n    /// @notice Get quizId from a leaf\r\n    function getQuizIdFromLeaf(bytes32 leaf) external view returns (uint256) {\r\n        return LibMerkleStorage.merkleStorage().leafToQuizId[leaf];\r\n    }\r\n}\r\n"},"contracts/facets/QuizGameModeFacet.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport { LibAppStorage } from '../libraries/LibAppStorage.sol';\r\nimport { AccessControlUpgradeable } from '@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol';\r\nimport { IPoolManager } from '../interfaces/IPoolManager.sol';\r\nimport { IQuizGameEvents } from '../interfaces/IQuizGameEvents.sol';\r\nimport { IQuizCoin } from '../interfaces/IQuizCoin.sol';\r\nimport { IQuizGameReward } from '../interfaces/IQuizGameReward.sol';\r\nimport { Question } from '../QuizTypes.sol';\r\nimport { IMerkleFacet } from \"../interfaces/IMerkleFacet.sol\";\r\n\r\ncontract QuizGameModeFacet is IQuizGameEvents {\r\n\r\n    function _appStorage() internal pure returns (LibAppStorage.AppStorage storage ds) {\r\n        ds = LibAppStorage.s();\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        LibAppStorage.AppStorage storage ds = _appStorage();\r\n        require(\r\n            AccessControlUpgradeable(address(this)).hasRole(ds.DEFAULT_ADMIN_ROLE, msg.sender),\r\n            \"AccessControl: Caller is not a game admin\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier onlyAdminOrDistributor() {\r\n        LibAppStorage.AppStorage storage ds = _appStorage();\r\n        require(\r\n            AccessControlUpgradeable(address(this)).hasRole(ds.DEFAULT_ADMIN_ROLE, msg.sender) ||\r\n            AccessControlUpgradeable(address(this)).hasRole(ds.REWARD_DISTRIBUTOR_ROLE, msg.sender),\r\n            \"AccessControl: Caller is not an admin or reward distributor\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    /// @notice สร้างคำถามใหม่และบันทึกข้อมูลบน Smart Contract\r\n    function createQuestion(\r\n        bytes32 _answerLeaf, // leaf ของคำตอบที่จะไปอยู่ใน Merkle Tree\r\n        bytes32 _hintHash,\r\n        uint256 _difficultyLevel,\r\n        LibAppStorage.QuestionMode _mode\r\n    ) public onlyAdmin {\r\n        LibAppStorage.AppStorage storage ds = _appStorage();\r\n\r\n        require(_answerLeaf != bytes32(0), \"Quiz: Answer leaf cannot be zero\");\r\n        require(_difficultyLevel >= 1 && _difficultyLevel <= 100, \"Quiz: Difficulty must be 1-100\");\r\n\r\n        uint256 questionId = ds.nextQuestionId;\r\n        ds.nextQuestionId++;\r\n\r\n        uint256 calculatedBaseReward;\r\n        if (_difficultyLevel == 100) {\r\n            calculatedBaseReward = ds.REWARD_FOR_LEVEL_100;\r\n        } else {\r\n            calculatedBaseReward = (ds.REWARD_FOR_LEVEL_1_99 * _difficultyLevel) / 99;\r\n        }\r\n\r\n        Question storage newQuestion = ds.questions[questionId];\r\n        newQuestion.correctAnswerHash = _answerLeaf; // เก็บ leaf ที่ backend สร้าง\r\n        newQuestion.hintHash = _hintHash;\r\n        newQuestion.questionCreator = msg.sender;\r\n        newQuestion.difficultyLevel = _difficultyLevel;\r\n        newQuestion.baseRewardAmount = calculatedBaseReward;\r\n        newQuestion.isClosed = false;\r\n        newQuestion.mode = _mode;\r\n        newQuestion.blockCreationTime = block.timestamp;\r\n        newQuestion.firstCorrectAnswerTime = 0;\r\n        newQuestion.firstSolverAddress = address(0);\r\n        newQuestion.poolCorrectSolvers = new address [](0);\r\n\r\n        emit QuestionCreated(questionId, msg.sender, _difficultyLevel, calculatedBaseReward);\r\n    }\r\n\r\n    /// @notice ผู้เล่นส่งคำตอบ + Merkle proof\r\n    function submitAnswer(\r\n        uint256 _questionId,\r\n        bytes32 _answerLeaf,\r\n        bytes32[] calldata _merkleProof\r\n    ) public {\r\n        LibAppStorage.AppStorage storage ds = _appStorage();\r\n        Question storage question = ds.questions[_questionId];\r\n\r\n        require(question.correctAnswerHash != bytes32(0), \"Quiz: Question does not exist.\");\r\n        require(!question.isClosed, \"Quiz: Question is closed.\");\r\n\r\n        if (question.difficultyLevel == 100) {\r\n            require(block.timestamp <= question.blockCreationTime + ds.LEVEL_100_QUESTION_VALIDITY_SECONDS,\r\n                \"Quiz: Level 100 expired.\");\r\n        }\r\n\r\n        // ✅ Verify with Merkle proof\r\n        bool isCorrect = IMerkleFacet(address(this)).verifyQuiz(_answerLeaf, _merkleProof);\r\n        require(isCorrect, \"Quiz: Wrong answer or invalid proof\");\r\n\r\n        uint256 currentDayId = block.timestamp / (24 * 60 * 60);\r\n        if (ds.lastPlayedDay[msg.sender] != currentDayId) {\r\n            ds.lastPlayedDay[msg.sender] = currentDayId;\r\n            ds.playerModeChoice[msg.sender] = question.mode;\r\n        } else {\r\n            require(ds.playerModeChoice[msg.sender] == question.mode,\r\n                \"Quiz: Already chosen different mode today.\");\r\n        }\r\n\r\n        require(question.lastAnswerDay[msg.sender] != currentDayId,\r\n            \"Quiz: Can only answer once per day.\");\r\n        question.lastAnswerDay[msg.sender] = currentDayId;\r\n\r\n        if (question.mode == LibAppStorage.QuestionMode.Solo) {\r\n            require(question.firstSolverAddress == address(0), \"Quiz: Solo already solved.\");\r\n\r\n            question.firstSolverAddress = msg.sender;\r\n            question.firstCorrectAnswerTime = block.timestamp;\r\n            question.isClosed = true;\r\n\r\n            uint256 totalReward = IQuizGameReward(address(this)).calculateCurrentReward(question.difficultyLevel);\r\n            uint256 treasuryFee = (totalReward * ds.TREASURY_FEE_PERCENTAGE) / 10000;\r\n            uint256 rewardForSoloSolver = totalReward - treasuryFee;\r\n\r\n            ds.poolManager.mintAndTransferToTreasury(treasuryFee);\r\n            ds.poolManager.withdrawForUser(msg.sender, rewardForSoloSolver);\r\n\r\n            emit RewardDistributed(_questionId, msg.sender, rewardForSoloSolver);\r\n            emit QuestionClosed(_questionId);\r\n\r\n        } else if (question.mode == LibAppStorage.QuestionMode.Pool) {\r\n            if (question.firstCorrectAnswerTime == 0) {\r\n                question.firstCorrectAnswerTime = block.timestamp;\r\n                emit QuestionRewardWindowStarted(_questionId, block.timestamp);\r\n            }\r\n\r\n            uint256 duration = (question.difficultyLevel == 100)\r\n                ? ds.LEVEL_100_QUESTION_VALIDITY_SECONDS\r\n                : ds.POOL_REWARD_WINDOW_DURATION_SECONDS;\r\n\r\n            require(block.timestamp <= question.firstCorrectAnswerTime + duration,\r\n                \"Quiz: Pool reward window closed.\");\r\n\r\n            question.poolCorrectSolvers.push(msg.sender);\r\n        }\r\n\r\n        emit AnswerSubmitted(_questionId, msg.sender, _answerLeaf, isCorrect);\r\n    }\r\n        function buyHint(uint256 _questionId) public {\r\n        LibAppStorage.AppStorage storage ds = LibAppStorage.s();\r\n        \r\n        Question storage question = ds.questions[_questionId];\r\n        require(question.correctAnswerHash != bytes32(0), \"Quiz: Question does not exist.\");\r\n        require(!question.isClosed, \"Quiz: Question is already closed.\");\r\n\r\n        if (question.difficultyLevel == 100) {\r\n            require(block.timestamp <= question.blockCreationTime + ds.LEVEL_100_QUESTION_VALIDITY_SECONDS, \"Quiz: Level 100 question has expired, cannot buy hint.\");\r\n        }\r\n\r\n        require(ds.quizCoin.transferFrom(msg.sender, address(this), ds.HINT_COST_AMOUNT), \"Quiz: QuizCoin transfer failed for hint.\");\r\n\r\n        emit HintPurchased(_questionId, msg.sender, ds.HINT_COST_AMOUNT);\r\n    }\r\n\r\n    // --- เพิ่มฟังก์ชันสำหรับ Question Bank ---\r\n    function activateQuestionFromBank(uint256 _questionId) public {\r\n        LibAppStorage.AppStorage storage ds = LibAppStorage.s();\r\n        require(\r\n            AccessControlUpgradeable(address(this)).hasRole(ds.DEFAULT_ADMIN_ROLE, msg.sender) ||\r\n            AccessControlUpgradeable(address(this)).hasRole(ds.CREATOR_ROLE, msg.sender),\r\n            \"AccessControl: Caller is not a game admin or creator\"\r\n        );\r\n\r\n        Question storage question = ds.questions[_questionId];\r\n        require(question.correctAnswerHash != bytes32(0), \"Quiz: Question does not exist in bank.\");\r\n        \r\n        // Reset สถานะคำถามเพื่อเปิดใช้งานใหม่\r\n        question.isClosed = false;\r\n        question.firstCorrectAnswerTime = 0;\r\n        question.firstSolverAddress = address(0);\r\n        // เคลียร์ Pool Solvers หากมี (สำหรับ Pool Mode)\r\n        question.poolCorrectSolvers = new address[](0);\r\n        // blockCreationTime และ mode ไม่ได้รีเซ็ต เพราะเป็นส่วนหนึ่งของคำถามที่ถูกสร้างขึ้นมาแล้ว\r\n        // lastAnswerDay (mapping) จะถูกรีเซ็ตโดยอัตโนมัติเมื่อผู้เล่นตอบในวันใหม่\r\n\r\n        emit QuestionActivatedFromBank(_questionId, msg.sender);\r\n    }\r\n    /// --- ฟังก์ชันอื่นคงเดิม (buyHint, distributePoolRewards, activateQuestionFromBank) ---\r\n    /// (ไม่แก้ไขเพิ่มเติม)\r\n}\r\n"},"contracts/facets/QuizParticipationFacet.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport { LibAppStorage } from '../libraries/LibAppStorage.sol';\r\nimport { AccessControlUpgradeable } from '@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol';\r\nimport { IQuizGameEvents } from '../interfaces/IQuizGameEvents.sol';\r\nimport { Question, Quiz } from '../QuizTypes.sol';\r\nimport { IMerkleFacet } from \"../interfaces/IMerkleFacet.sol\";\r\n\r\n/**\r\n * @title QuizParticipationFacet\r\n * @dev Facet ที่จัดการ Logic การเข้าร่วมเกมควิซ\r\n */\r\ncontract QuizParticipationFacet is IQuizGameEvents {\r\n\r\n    function _appStorage() internal pure returns (LibAppStorage.AppStorage storage ds) {\r\n        ds = LibAppStorage.s();\r\n    }\r\n\r\n    modifier onlyCreator(uint256 _quizId) {\r\n        LibAppStorage.AppStorage storage ds = _appStorage();\r\n        require(\r\n            ds.quizzes[_quizId].creator == msg.sender,\r\n            \"AccessControl: Caller is not the quiz creator\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    /// @notice ผู้เล่นเข้าร่วมเกมควิซ\r\n    function joinQuiz(uint256 _quizId) public {\r\n        LibAppStorage.AppStorage storage ds = _appStorage();\r\n        Quiz storage quiz = ds.quizzes[_quizId];\r\n\r\n        require(quiz.isActive, \"Quiz: Quiz is not active.\");\r\n        require(ds.quizParticipations[_quizId][msg.sender].hasJoined == false, \"Quiz: You have already joined this quiz.\");\r\n        require(ds.quizPlayers[_quizId].length < quiz.maxParticipants, \"Quiz: The quiz is full.\");\r\n\r\n        ds.quizParticipations[_quizId][msg.sender].hasJoined = true;\r\n        ds.quizPlayers[_quizId].push(msg.sender);\r\n\r\n        emit PlayerJoinedQuiz(msg.sender, _quizId);\r\n    }\r\n\r\n    /// @notice ผู้เล่นส่งคำตอบสำหรับคำถามในเกมควิซ\r\n    function submitQuizAnswer(\r\n        uint256 _quizId,\r\n        uint256 _questionIndex,\r\n        uint8 _submittedAnswerIndex,\r\n        bytes32 leaf,\r\n        bytes32[] calldata proof\r\n    ) public {\r\n        LibAppStorage.AppStorage storage ds = _appStorage();\r\n        LibAppStorage.PlayerParticipation storage player = ds.quizParticipations[_quizId][msg.sender];\r\n        Quiz storage quiz = ds.quizzes[_quizId];\r\n\r\n        require(player.hasJoined, \"Quiz: You must join the quiz first.\");\r\n        require(quiz.isActive, \"Quiz: Quiz is not active.\");\r\n        require(_questionIndex < quiz.totalQuestions, \"Quiz: Question index out of bounds.\");\r\n        require(player.lastAnsweredQuestionIndex < _questionIndex, \"Quiz: You have already answered a higher or equal index question.\");\r\n\r\n        // ✅ Verify ผ่าน MerkleFacet\r\n        bool verified = IMerkleFacet(address(this)).verifyQuiz(leaf, proof);\r\n        require(verified, \"Quiz: Invalid answer proof.\");\r\n\r\n        player.lastAnsweredQuestionIndex = _questionIndex;\r\n        player.playerAnswers[_questionIndex] = _submittedAnswerIndex;\r\n        player.hasAnswered[_questionIndex] = true;\r\n        player.score++;\r\n\r\n        emit QuizAnswerSubmitted(msg.sender, _quizId, _questionIndex, _submittedAnswerIndex, true);\r\n    }\r\n}\r\n"},"contracts/interfaces/IMerkleFacet.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\ninterface IMerkleFacet {\r\n    function submitMerkleRoot(uint256 quizId, bytes32 root, bytes32[] calldata leaves) external;\r\n    function verifyQuiz(bytes32 leaf, bytes32[] calldata proof) external view returns (bool);\r\n    function getQuizIdFromLeaf(bytes32 leaf) external view returns (uint256);\r\n}\r\n"},"contracts/interfaces/IPoolManager.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ninterface IPoolManager {\r\n    function withdrawForUser(address _user, uint256 _amount) external;\r\n    function mintAndTransferToTreasury(uint256 _amount) external; // เพิ่มบรรทัดนี้\r\n    function deposit(uint256 _amount) external; // เพิ่มบรรทัดนี้\r\n    function setQuizGameDiamondAddress(address _newQuizGameDiamondAddress) external;\r\n}"},"contracts/interfaces/IQuizCoin.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/IAccessControl.sol\"; // Import IAccessControl\r\n\r\ninterface IQuizCoin is IERC20, IAccessControl { // Inherit IAccessControl\r\n    // ฟังก์ชันสำหรับ minting (เฉพาะผู้ที่มี MINTER_ROLE)\r\n    function mint(address to, uint256 amount) external;\r\n\r\n    // ฟังก์ชันเพื่อให้ contract อื่นสามารถอ้างอิง MINTER_ROLE ได้\r\n    function MINTER_ROLE() external view returns (bytes32);\r\n}"},"contracts/interfaces/IQuizGameEvents.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport { LibAppStorage } from '../libraries/LibAppStorage.sol';\r\n\r\ninterface IQuizGameEvents {\r\n    event QuestionCreated(uint256 indexed questionId, address indexed creator, uint256 difficultyLevel, uint256 baseRewardAmount);\r\n    event AnswerSubmitted(uint256 indexed questionId, address indexed solver, bytes32 submittedAnswerHash, bool isCorrect);\r\n    event HintPurchased(uint256 indexed questionId, address indexed buyer, uint256 cost);\r\n    event RewardDistributed(uint256 indexed questionId, address indexed solver, uint256 rewardAmount);\r\n    event QuestionClosed(uint256 indexed questionId);\r\n    event QuestionRewardWindowStarted(uint256 indexed questionId, uint256 startTime);\r\n    event QuestionActivatedFromBank(uint256 indexed questionId, address indexed activator);\r\n    event PlayerJoinedQuiz(address indexed player, uint256 indexed quizId);\r\n    event QuizAnswerSubmitted(address indexed player, uint256 indexed quizId, uint256 indexed questionIndex, uint8 submittedAnswerIndex, bool isCorrect);\r\n    event QuizCreated(address indexed creator, uint256 indexed quizId, uint256 rewardAmount, uint256 totalQuestions);\r\n}\r\n"},"contracts/interfaces/IQuizGameReward.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport { LibAppStorage } from '../libraries/LibAppStorage.sol';\r\n\r\n// Interface สำหรับ QuizGameRewardFacet\r\ninterface IQuizGameReward {\r\n    function calculateCurrentReward(uint256 _difficultyLevel) external view returns (uint256);\r\n}\r\n"},"contracts/libraries/LibAppStorage.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport '../interfaces/IPoolManager.sol';\r\nimport '../interfaces/IQuizCoin.sol';\r\nimport '../QuizTypes.sol';\r\n\r\nlibrary LibAppStorage {\r\n    bytes32 constant APP_STORAGE_POSITION = keccak256(\"app.storage.quizgame\");\r\n\r\n    // เพิ่ม enum QuestionMode กลับเข้ามา\r\n    enum QuestionMode { Solo, Pool }\r\n\r\n    struct PlayerParticipation {\r\n        bool hasJoined;\r\n        uint256 score;\r\n        uint256 lastAnsweredQuestionIndex;\r\n        mapping(uint256 => uint8) playerAnswers;\r\n        mapping(uint256 => bool) hasAnswered;\r\n    }\r\n\r\n    struct AppStorage {\r\n        bytes32 DEFAULT_ADMIN_ROLE;\r\n        bytes32 REWARD_DISTRIBUTOR_ROLE;\r\n        bytes32 CREATOR_ROLE;\r\n        \r\n        uint256 HINT_COST_AMOUNT;\r\n        uint256 POOL_REWARD_WINDOW_DURATION_SECONDS;\r\n        uint256 LEVEL_100_QUESTION_VALIDITY_SECONDS;\r\n        uint256 REWARD_FOR_LEVEL_1_99;\r\n        uint256 REWARD_FOR_LEVEL_100;\r\n        uint256 HALVING_PERIOD_SECONDS;\r\n        uint256 MIN_REWARD_AFTER_HALVING;\r\n        uint256 TREASURY_FEE_PERCENTAGE;\r\n        uint256 GAME_START_TIMESTAMP;\r\n        uint256 nextQuestionId;\r\n\r\n        mapping(address => uint256) lastPlayedDay;\r\n        mapping(address => QuestionMode) playerModeChoice;\r\n        mapping(uint256 => Question) questions;\r\n\r\n        mapping(uint256 => Quiz) quizzes;\r\n        mapping(uint256 => mapping(address => PlayerParticipation)) quizParticipations;\r\n        mapping(uint256 => address[]) quizPlayers;\r\n        \r\n        IPoolManager poolManager;\r\n        IQuizCoin quizCoin;\r\n    }\r\n\r\n    function s() internal pure returns (AppStorage storage ds) {\r\n        bytes32 position = APP_STORAGE_POSITION;\r\n        assembly {\r\n            ds.slot := position\r\n        }\r\n    }\r\n}\r\n"},"contracts/libraries/LibMerkleStorage.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nlibrary LibMerkleStorage {\r\n    bytes32 constant MERKLE_STORAGE_POSITION = keccak256(\"quizcoin.diamond.merkle.storage\");\r\n\r\n    struct MerkleStorage {\r\n        // quizId => root\r\n        mapping(uint256 => bytes32) quizRoots;\r\n\r\n        // leaf => quizId (ทำให้ verify เร็ว ไม่ต้องวน loop)\r\n        mapping(bytes32 => uint256) leafToQuizId;\r\n    }\r\n\r\n    function merkleStorage() internal pure returns (MerkleStorage storage ms) {\r\n        bytes32 position = MERKLE_STORAGE_POSITION;\r\n        assembly {\r\n            ms.slot := position\r\n        }\r\n    }\r\n}\r\n"},"contracts/QuizTypes.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport { LibAppStorage } from './libraries/LibAppStorage.sol';\r\n\r\n// This file defines common structs used across multiple facets and libraries.\r\nstruct Question {\r\n    string questionText;\r\n    string[] options;\r\n    uint8 correctAnswerIndex;\r\n    bytes32 correctAnswerHash;\r\n    bytes32 hintHash;\r\n    address questionCreator;\r\n    uint256 difficultyLevel;\r\n    uint256 baseRewardAmount;\r\n    bool isClosed;\r\n    LibAppStorage.QuestionMode mode;\r\n    uint256 blockCreationTime;\r\n    uint256 firstCorrectAnswerTime;\r\n    address firstSolverAddress;\r\n    address[] poolCorrectSolvers;\r\n    mapping(address => uint256) lastAnswerDay;\r\n}\r\n\r\nstruct Quiz {\r\n    string name;\r\n    address creator;\r\n    uint256 rewardAmount;\r\n    uint256 totalQuestions;\r\n    uint256 maxParticipants;\r\n    bool isActive;\r\n    // แก้ไข: เพิ่ม mapping เพื่อเชื่อมโยง question index กับ question ID\r\n    mapping(uint256 => uint256) questionIds;\r\n}\r\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/Hashes.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library of standard hash functions.\n *\n * _Available since v5.1._\n */\nlibrary Hashes {\n    /**\n     * @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n     *\n     * NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n     */\n    function commutativeKeccak256(bytes32 a, bytes32 b) internal pure returns (bytes32) {\n        return a < b ? efficientKeccak256(a, b) : efficientKeccak256(b, a);\n    }\n\n    /**\n     * @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory.\n     */\n    function efficientKeccak256(bytes32 a, bytes32 b) internal pure returns (bytes32 value) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MerkleProof.sol)\n// This file was procedurally generated from scripts/generate/templates/MerkleProof.js.\n\npragma solidity ^0.8.20;\n\nimport {Hashes} from \"./Hashes.sol\";\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the Merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates Merkle trees that are safe\n * against this attack out of the box.\n *\n * IMPORTANT: Consider memory side-effects when using custom hashing functions\n * that access memory in an unsafe way.\n *\n * NOTE: This library supports proof verification for merkle trees built using\n * custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving\n * leaf inclusion in trees built using non-commutative hashing functions requires\n * additional logic that is not supported by this library.\n */\nlibrary MerkleProof {\n    /**\n     *@dev The multiproof provided is not valid.\n     */\n    error MerkleProofInvalidMultiproof();\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with the default hashing function.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with the default hashing function.\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with a custom hashing function.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processProof(proof, leaf, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with a custom hashing function.\n     */\n    function processProof(\n        bytes32[] memory proof,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = hasher(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with the default hashing function.\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with the default hashing function.\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with a custom hashing function.\n     */\n    function verifyCalldata(\n        bytes32[] calldata proof,\n        bytes32 root,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processProofCalldata(proof, leaf, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with a custom hashing function.\n     */\n    function processProofCalldata(\n        bytes32[] calldata proof,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = hasher(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in memory with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProof}.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in memory with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = Hashes.commutativeKeccak256(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in memory with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProof}.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in memory with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = hasher(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in calldata with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProofCalldata}.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in calldata with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = Hashes.commutativeKeccak256(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in calldata with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProofCalldata}.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in calldata with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = hasher(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[362],"ContextUpgradeable":[676],"ERC165Upgradeable":[716],"IAccessControl":[799],"Initializable":[630]},"id":363,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"@openzeppelin/contracts/access/IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":800,"src":"134:81:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":677,"src":"216:67:0","symbolAliases":[{"foreign":{"id":4,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"224:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":717,"src":"284:79:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"292:17:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":631,"src":"364:63:0","symbolAliases":[{"foreign":{"id":8,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"372:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":11,"name":"Initializable","nameLocations":["2136:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"2136:13:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"2136:13:0"},{"baseName":{"id":13,"name":"ContextUpgradeable","nameLocations":["2151:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":676,"src":"2151:18:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2151:18:0"},{"baseName":{"id":15,"name":"IAccessControl","nameLocations":["2171:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"2171:14:0"},"id":16,"nodeType":"InheritanceSpecifier","src":"2171:14:0"},{"baseName":{"id":17,"name":"ERC165Upgradeable","nameLocations":["2187:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":716,"src":"2187:17:0"},"id":18,"nodeType":"InheritanceSpecifier","src":"2187:17:0"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"429:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":362,"linearizedBaseContracts":[362,716,2002,799,676,630],"name":"AccessControlUpgradeable","nameLocation":"2108:24:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControlUpgradeable.RoleData","id":25,"members":[{"constant":false,"id":22,"mutability":"mutable","name":"hasRole","nameLocation":"2270:7:0","nodeType":"VariableDeclaration","scope":25,"src":"2237:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":21,"keyName":"account","keyNameLocation":"2253:7:0","keyType":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"2245:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2237:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":20,"name":"bool","nodeType":"ElementaryTypeName","src":"2264:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"adminRole","nameLocation":"2295:9:0","nodeType":"VariableDeclaration","scope":25,"src":"2287:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2287:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2218:8:0","nodeType":"StructDefinition","scope":362,"src":"2211:100:0","visibility":"public"},{"constant":true,"functionSelector":"a217fddf","id":28,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2341:18:0","nodeType":"VariableDeclaration","scope":362,"src":"2317:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":27,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2362:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"canonicalName":"AccessControlUpgradeable.AccessControlStorage","documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"2374:71:0","text":"@custom:storage-location erc7201:openzeppelin.storage.AccessControl"},"id":35,"members":[{"constant":false,"id":34,"mutability":"mutable","name":"_roles","nameLocation":"2522:6:0","nodeType":"VariableDeclaration","scope":35,"src":"2488:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":33,"keyName":"role","keyNameLocation":"2504:4:0","keyType":{"id":30,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2496:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2488:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":32,"nodeType":"UserDefinedTypeName","pathNode":{"id":31,"name":"RoleData","nameLocations":["2512:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":25,"src":"2512:8:0"},"referencedDeclaration":25,"src":"2512:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"internal"}],"name":"AccessControlStorage","nameLocation":"2457:20:0","nodeType":"StructDefinition","scope":362,"src":"2450:85:0","visibility":"public"},{"constant":true,"id":38,"mutability":"constant","name":"AccessControlStorageLocation","nameLocation":"2683:28:0","nodeType":"VariableDeclaration","scope":362,"src":"2658:122:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2658:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2714:66:0","typeDescriptions":{"typeIdentifier":"t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1","typeString":"int_const 1295...(68 digits omitted)...1824"},"value":"0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"},"visibility":"private"},{"body":{"id":45,"nodeType":"Block","src":"2877:87:0","statements":[{"AST":{"nativeSrc":"2896:62:0","nodeType":"YulBlock","src":"2896:62:0","statements":[{"nativeSrc":"2910:38:0","nodeType":"YulAssignment","src":"2910:38:0","value":{"name":"AccessControlStorageLocation","nativeSrc":"2920:28:0","nodeType":"YulIdentifier","src":"2920:28:0"},"variableNames":[{"name":"$.slot","nativeSrc":"2910:6:0","nodeType":"YulIdentifier","src":"2910:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":42,"isOffset":false,"isSlot":true,"src":"2910:6:0","suffix":"slot","valueSize":1},{"declaration":38,"isOffset":false,"isSlot":false,"src":"2920:28:0","valueSize":1}],"id":44,"nodeType":"InlineAssembly","src":"2887:71:0"}]},"id":46,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccessControlStorage","nameLocation":"2796:24:0","nodeType":"FunctionDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"2820:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"$","nameLocation":"2874:1:0","nodeType":"VariableDeclaration","scope":46,"src":"2845:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":41,"nodeType":"UserDefinedTypeName","pathNode":{"id":40,"name":"AccessControlStorage","nameLocations":["2845:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"2845:20:0"},"referencedDeclaration":35,"src":"2845:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"src":"2844:32:0"},"scope":362,"src":"2787:177:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":56,"nodeType":"Block","src":"3181:44:0","statements":[{"expression":{"arguments":[{"id":52,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3202:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":51,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":129,"src":"3191:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3191:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"3191:16:0"},{"id":55,"nodeType":"PlaceholderStatement","src":"3217:1:0"}]},"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"2970:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":57,"name":"onlyRole","nameLocation":"3158:8:0","nodeType":"ModifierDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"role","nameLocation":"3175:4:0","nodeType":"VariableDeclaration","scope":57,"src":"3167:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3167:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3166:14:0"},"src":"3149:76:0","virtual":false,"visibility":"internal"},{"body":{"id":62,"nodeType":"Block","src":"3289:7:0","statements":[]},"id":63,"implemented":true,"kind":"function","modifiers":[{"id":60,"kind":"modifierInvocation","modifierName":{"id":59,"name":"onlyInitializing","nameLocations":["3272:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3272:16:0"},"nodeType":"ModifierInvocation","src":"3272:16:0"}],"name":"__AccessControl_init","nameLocation":"3240:20:0","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"3260:2:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"3289:0:0"},"scope":362,"src":"3231:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":68,"nodeType":"Block","src":"3370:7:0","statements":[]},"id":69,"implemented":true,"kind":"function","modifiers":[{"id":66,"kind":"modifierInvocation","modifierName":{"id":65,"name":"onlyInitializing","nameLocations":["3353:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3353:16:0"},"nodeType":"ModifierInvocation","src":"3353:16:0"}],"name":"__AccessControl_init_unchained","nameLocation":"3311:30:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[],"src":"3341:2:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"3370:0:0"},"scope":362,"src":"3302:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[715],"body":{"id":90,"nodeType":"Block","src":"3534:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":78,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3551:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":80,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"3571:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$799_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$799_$","typeString":"type(contract IAccessControl)"}],"id":79,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3566:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$799","typeString":"type(contract IAccessControl)"}},"id":82,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3587:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"3566:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3551:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":86,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3626:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":84,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3602:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$362_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3608:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":715,"src":"3602:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3602:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3551:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":77,"id":89,"nodeType":"Return","src":"3544:94:0"}]},"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"3382:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":91,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3452:17:0","nodeType":"FunctionDefinition","overrides":{"id":74,"nodeType":"OverrideSpecifier","overrides":[],"src":"3510:8:0"},"parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"interfaceId","nameLocation":"3477:11:0","nodeType":"VariableDeclaration","scope":91,"src":"3470:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":71,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3470:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3469:20:0"},"returnParameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":91,"src":"3528:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":75,"name":"bool","nodeType":"ElementaryTypeName","src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3527:6:0"},"scope":362,"src":"3443:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[766],"body":{"id":115,"nodeType":"Block","src":"3815:124:0","statements":[{"assignments":[103],"declarations":[{"constant":false,"id":103,"mutability":"mutable","name":"$","nameLocation":"3854:1:0","nodeType":"VariableDeclaration","scope":115,"src":"3825:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":102,"nodeType":"UserDefinedTypeName","pathNode":{"id":101,"name":"AccessControlStorage","nameLocations":["3825:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"3825:20:0"},"referencedDeclaration":35,"src":"3825:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":106,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":104,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"3858:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3858:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3825:59:0"},{"expression":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":107,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3901:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3903:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"3901:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":110,"indexExpression":{"id":109,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"3910:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3916:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":113,"indexExpression":{"id":112,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3924:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":100,"id":114,"nodeType":"Return","src":"3894:38:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"3651:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":116,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3741:7:0","nodeType":"FunctionDefinition","parameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"role","nameLocation":"3757:4:0","nodeType":"VariableDeclaration","scope":116,"src":"3749:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":93,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3749:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"account","nameLocation":"3771:7:0","nodeType":"VariableDeclaration","scope":116,"src":"3763:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"3763:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3748:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":116,"src":"3809:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":98,"name":"bool","nodeType":"ElementaryTypeName","src":"3809:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3808:6:0"},"scope":362,"src":"3732:207:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":128,"nodeType":"Block","src":"4204:47:0","statements":[{"expression":{"arguments":[{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"4225:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":124,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"4231:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4231:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":122,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":150,"src":"4214:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"4214:30:0"}]},"documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"3945:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":129,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4157:10:0","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"role","nameLocation":"4176:4:0","nodeType":"VariableDeclaration","scope":129,"src":"4168:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[],"src":"4204:0:0"},"scope":362,"src":"4148:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":149,"nodeType":"Block","src":"4454:124:0","statements":[{"condition":{"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4468:23:0","subExpression":{"arguments":[{"id":138,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4477:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":139,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4483:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":137,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"4469:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4469:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":148,"nodeType":"IfStatement","src":"4464:108:0","trueBody":{"id":147,"nodeType":"Block","src":"4493:79:0","statements":[{"errorCall":{"arguments":[{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4547:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":144,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4556:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":142,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"4514:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$","typeString":"function (address,bytes32) pure returns (error)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4514:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":146,"nodeType":"RevertStatement","src":"4507:54:0"}]}}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"4257:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":150,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4390:10:0","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"role","nameLocation":"4409:4:0","nodeType":"VariableDeclaration","scope":150,"src":"4401:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4401:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"4423:7:0","nodeType":"VariableDeclaration","scope":150,"src":"4415:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4400:31:0"},"returnParameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"4454:0:0"},"scope":362,"src":"4381:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[774],"body":{"id":170,"nodeType":"Block","src":"4833:117:0","statements":[{"assignments":[160],"declarations":[{"constant":false,"id":160,"mutability":"mutable","name":"$","nameLocation":"4872:1:0","nodeType":"VariableDeclaration","scope":170,"src":"4843:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":159,"nodeType":"UserDefinedTypeName","pathNode":{"id":158,"name":"AccessControlStorage","nameLocations":["4843:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"4843:20:0"},"referencedDeclaration":35,"src":"4843:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":163,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":161,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"4876:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4876:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4843:59:0"},{"expression":{"expression":{"baseExpression":{"expression":{"id":164,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"4919:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4921:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"4919:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":167,"indexExpression":{"id":166,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4928:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4919:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4934:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"4919:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":157,"id":169,"nodeType":"Return","src":"4912:31:0"}]},"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"4584:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":171,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4768:12:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"role","nameLocation":"4789:4:0","nodeType":"VariableDeclaration","scope":171,"src":"4781:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4780:14:0"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":171,"src":"4824:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4824:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4823:9:0"},"scope":362,"src":"4759:191:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[782],"body":{"id":189,"nodeType":"Block","src":"5340:42:0","statements":[{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"5361:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"5367:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5350:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5350:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"5350:25:0"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"4956:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":190,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":180,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"5333:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":179,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5320:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":182,"kind":"modifierInvocation","modifierName":{"id":178,"name":"onlyRole","nameLocations":["5311:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5311:8:0"},"nodeType":"ModifierInvocation","src":"5311:28:0"}],"name":"grantRole","nameLocation":"5255:9:0","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"role","nameLocation":"5273:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5265:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5265:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"account","nameLocation":"5287:7:0","nodeType":"VariableDeclaration","scope":190,"src":"5279:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"5279:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5264:31:0"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"5340:0:0"},"scope":362,"src":"5246:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[790],"body":{"id":208,"nodeType":"Block","src":"5757:43:0","statements":[{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5779:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5785:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"5767:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":207,"nodeType":"ExpressionStatement","src":"5767:26:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5388:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":209,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":199,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5750:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":198,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5737:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5737:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":201,"kind":"modifierInvocation","modifierName":{"id":197,"name":"onlyRole","nameLocations":["5728:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5728:8:0"},"nodeType":"ModifierInvocation","src":"5728:28:0"}],"name":"revokeRole","nameLocation":"5671:10:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5690:4:0","nodeType":"VariableDeclaration","scope":209,"src":"5682:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5682:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"account","nameLocation":"5704:7:0","nodeType":"VariableDeclaration","scope":209,"src":"5696:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"5696:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5681:31:0"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"5757:0:0"},"scope":362,"src":"5662:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[798],"body":{"id":231,"nodeType":"Block","src":"6427:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":217,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6441:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":218,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"6463:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6463:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6441:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":225,"nodeType":"IfStatement","src":"6437:102:0","trueBody":{"id":224,"nodeType":"Block","src":"6477:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":221,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"6498:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":223,"nodeType":"RevertStatement","src":"6491:37:0"}]}},{"expression":{"arguments":[{"id":227,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"6561:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":228,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6567:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":226,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"6549:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6549:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":230,"nodeType":"ExpressionStatement","src":"6549:37:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"5806:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":232,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6357:12:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6378:4:0","nodeType":"VariableDeclaration","scope":232,"src":"6370:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6370:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"callerConfirmation","nameLocation":"6392:18:0","nodeType":"VariableDeclaration","scope":232,"src":"6384:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6384:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6369:42:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"6427:0:0"},"scope":362,"src":"6348:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":267,"nodeType":"Block","src":"6791:245:0","statements":[{"assignments":[242],"declarations":[{"constant":false,"id":242,"mutability":"mutable","name":"$","nameLocation":"6830:1:0","nodeType":"VariableDeclaration","scope":267,"src":"6801:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":241,"nodeType":"UserDefinedTypeName","pathNode":{"id":240,"name":"AccessControlStorage","nameLocations":["6801:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"6801:20:0"},"referencedDeclaration":35,"src":"6801:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":245,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":243,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"6834:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6834:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6801:59:0"},{"assignments":[247],"declarations":[{"constant":false,"id":247,"mutability":"mutable","name":"previousAdminRole","nameLocation":"6878:17:0","nodeType":"VariableDeclaration","scope":267,"src":"6870:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6870:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[{"id":249,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6911:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":248,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"6898:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6898:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6870:46:0"},{"expression":{"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":252,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"6926:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6928:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"6926:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":256,"indexExpression":{"id":254,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6935:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6926:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6941:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"6926:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":258,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6953:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6926:36:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":260,"nodeType":"ExpressionStatement","src":"6926:36:0"},{"eventCall":{"arguments":[{"id":262,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6994:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":263,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"7000:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":264,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"7019:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":261,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"6977:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6977:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":266,"nodeType":"EmitStatement","src":"6972:57:0"}]},"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"6599:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":268,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"6727:13:0","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"role","nameLocation":"6749:4:0","nodeType":"VariableDeclaration","scope":268,"src":"6741:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6741:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"adminRole","nameLocation":"6763:9:0","nodeType":"VariableDeclaration","scope":268,"src":"6755:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6755:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6740:33:0"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[],"src":"6791:0:0"},"scope":362,"src":"6718:318:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":314,"nodeType":"Block","src":"7353:304:0","statements":[{"assignments":[280],"declarations":[{"constant":false,"id":280,"mutability":"mutable","name":"$","nameLocation":"7392:1:0","nodeType":"VariableDeclaration","scope":314,"src":"7363:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":279,"nodeType":"UserDefinedTypeName","pathNode":{"id":278,"name":"AccessControlStorage","nameLocations":["7363:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"7363:20:0"},"referencedDeclaration":35,"src":"7363:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":283,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":281,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"7396:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7396:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7363:59:0"},{"condition":{"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7436:23:0","subExpression":{"arguments":[{"id":285,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7445:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":286,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7451:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":284,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"7437:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7437:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":312,"nodeType":"Block","src":"7614:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7635:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":277,"id":311,"nodeType":"Return","src":"7628:12:0"}]},"id":313,"nodeType":"IfStatement","src":"7432:219:0","trueBody":{"id":309,"nodeType":"Block","src":"7461:147:0","statements":[{"expression":{"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"7475:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7477:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"7475:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":293,"indexExpression":{"id":291,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7475:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7490:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"7475:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":296,"indexExpression":{"id":295,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7498:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7475:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7509:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7475:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":299,"nodeType":"ExpressionStatement","src":"7475:38:0"},{"eventCall":{"arguments":[{"id":301,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7544:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":302,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7550:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":303,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"7559:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7559:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":300,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"7532:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7532:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":306,"nodeType":"EmitStatement","src":"7527:45:0"},{"expression":{"hexValue":"74727565","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7593:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":277,"id":308,"nodeType":"Return","src":"7586:11:0"}]}}]},"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"7042:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":315,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7279:10:0","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"role","nameLocation":"7298:4:0","nodeType":"VariableDeclaration","scope":315,"src":"7290:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7290:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"account","nameLocation":"7312:7:0","nodeType":"VariableDeclaration","scope":315,"src":"7304:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"7304:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7289:31:0"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":315,"src":"7347:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":275,"name":"bool","nodeType":"ElementaryTypeName","src":"7347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7346:6:0"},"scope":362,"src":"7270:387:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":360,"nodeType":"Block","src":"7978:304:0","statements":[{"assignments":[327],"declarations":[{"constant":false,"id":327,"mutability":"mutable","name":"$","nameLocation":"8017:1:0","nodeType":"VariableDeclaration","scope":360,"src":"7988:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":326,"nodeType":"UserDefinedTypeName","pathNode":{"id":325,"name":"AccessControlStorage","nameLocations":["7988:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"7988:20:0"},"referencedDeclaration":35,"src":"7988:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":330,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":328,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"8021:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7988:59:0"},{"condition":{"arguments":[{"id":332,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8069:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":333,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8075:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":331,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"8061:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8061:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":358,"nodeType":"Block","src":"8239:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8260:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":324,"id":357,"nodeType":"Return","src":"8253:12:0"}]},"id":359,"nodeType":"IfStatement","src":"8057:219:0","trueBody":{"id":355,"nodeType":"Block","src":"8085:148:0","statements":[{"expression":{"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":335,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8099:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8101:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"8099:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":339,"indexExpression":{"id":337,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8108:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8099:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8114:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"8099:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":342,"indexExpression":{"id":341,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8122:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8099:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8133:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8099:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":345,"nodeType":"ExpressionStatement","src":"8099:39:0"},{"eventCall":{"arguments":[{"id":347,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8169:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":348,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8175:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"8184:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8184:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":346,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"8157:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8157:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":352,"nodeType":"EmitStatement","src":"8152:45:0"},{"expression":{"hexValue":"74727565","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8218:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":324,"id":354,"nodeType":"Return","src":"8211:11:0"}]}}]},"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"7663:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":361,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7903:11:0","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"role","nameLocation":"7923:4:0","nodeType":"VariableDeclaration","scope":361,"src":"7915:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":317,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7915:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"account","nameLocation":"7937:7:0","nodeType":"VariableDeclaration","scope":361,"src":"7929:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"7929:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7914:31:0"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":361,"src":"7972:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":322,"name":"bool","nodeType":"ElementaryTypeName","src":"7972:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7971:6:0"},"scope":362,"src":"7894:388:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":363,"src":"2090:6194:0","usedErrors":[379,382,726,729],"usedEvents":[387,738,747,756]}],"src":"108:8177:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[630]},"id":631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":364,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":630,"linearizedBaseContracts":[630],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":373,"members":[{"constant":false,"id":369,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":373,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":368,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":373,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":371,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":630,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":376,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":630,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":379,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":382,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":387,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":387,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":384,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":469,"nodeType":"Block","src":"4092:1079:1","statements":[{"assignments":[392],"declarations":[{"constant":false,"id":392,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":469,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":391,"nodeType":"UserDefinedTypeName","pathNode":{"id":390,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"4158:20:1"},"referencedDeclaration":373,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":395,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":393,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[397],"declarations":[{"constant":false,"id":397,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":469,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":396,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":401,"initialValue":{"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":398,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":469,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":402,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":406,"initialValue":{"expression":{"id":404,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[408],"declarations":[{"constant":false,"id":408,"mutability":"mutable","name":"initialSetup","nameLocation":"4709:12:1","nodeType":"VariableDeclaration","scope":469,"src":"4704:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":407,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":414,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4724:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4739:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4724:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":412,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4744:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4724:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4704:54:1"},{"assignments":[416],"declarations":[{"constant":false,"id":416,"mutability":"mutable","name":"construction","nameLocation":"4773:12:1","nodeType":"VariableDeclaration","scope":469,"src":"4768:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":415,"name":"bool","nodeType":"ElementaryTypeName","src":"4768:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":429,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":417,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4788:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4803:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4788:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":422,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4816:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$630","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$630","typeString":"contract Initializable"}],"id":421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4808:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"4808:7:1","typeDescriptions":{}}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:4:1","memberName":"code","nodeType":"MemberAccess","src":"4808:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4827:6:1","memberName":"length","nodeType":"MemberAccess","src":"4808:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4808:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4788:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4768:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4853:13:1","subExpression":{"id":430,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"4854:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:13:1","subExpression":{"id":432,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"4871:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4853:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":439,"nodeType":"IfStatement","src":"4849:91:1","trueBody":{"id":438,"nodeType":"Block","src":"4885:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":435,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"4906:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4906:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":437,"nodeType":"RevertStatement","src":"4899:30:1"}]}},{"expression":{"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":440,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4949:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4951:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"4949:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4949:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":445,"nodeType":"ExpressionStatement","src":"4949:18:1"},{"condition":{"id":446,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4981:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":454,"nodeType":"IfStatement","src":"4977:67:1","trueBody":{"id":453,"nodeType":"Block","src":"4997:47:1","statements":[{"expression":{"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":447,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5011:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5013:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"5011:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5029:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5011:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":452,"nodeType":"ExpressionStatement","src":"5011:22:1"}]}},{"id":455,"nodeType":"PlaceholderStatement","src":"5053:1:1"},{"condition":{"id":456,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"5068:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":468,"nodeType":"IfStatement","src":"5064:101:1","trueBody":{"id":467,"nodeType":"Block","src":"5084:81:1","statements":[{"expression":{"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":457,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5098:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5100:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"5098:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5116:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5098:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":462,"nodeType":"ExpressionStatement","src":"5098:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":463,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"5140:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"EmitStatement","src":"5135:19:1"}]}}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":470,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1102:1","virtual":false,"visibility":"internal"},{"body":{"id":516,"nodeType":"Block","src":"6289:392:1","statements":[{"assignments":[477],"declarations":[{"constant":false,"id":477,"mutability":"mutable","name":"$","nameLocation":"6384:1:1","nodeType":"VariableDeclaration","scope":516,"src":"6355:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":476,"nodeType":"UserDefinedTypeName","pathNode":{"id":475,"name":"InitializableStorage","nameLocations":["6355:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"6355:20:1"},"referencedDeclaration":373,"src":"6355:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":480,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":478,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"6388:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6388:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6355:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":481,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6429:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6431:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"6429:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":483,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6448:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6450:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"6448:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":485,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6466:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6448:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6429:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":492,"nodeType":"IfStatement","src":"6425:105:1","trueBody":{"id":491,"nodeType":"Block","src":"6475:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":488,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"6496:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6496:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":490,"nodeType":"RevertStatement","src":"6489:30:1"}]}},{"expression":{"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":493,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6539:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6541:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"6539:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":496,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6556:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6539:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":498,"nodeType":"ExpressionStatement","src":"6539:24:1"},{"expression":{"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":499,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6573:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6575:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"6573:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6591:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6573:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":504,"nodeType":"ExpressionStatement","src":"6573:22:1"},{"id":505,"nodeType":"PlaceholderStatement","src":"6605:1:1"},{"expression":{"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":506,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6616:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6618:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"6616:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6634:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6616:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":511,"nodeType":"ExpressionStatement","src":"6616:23:1"},{"eventCall":{"arguments":[{"id":513,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6666:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":512,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"6654:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":515,"nodeType":"EmitStatement","src":"6649:25:1"}]},"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"5177:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":517,"name":"reinitializer","nameLocation":"6259:13:1","nodeType":"ModifierDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"version","nameLocation":"6280:7:1","nodeType":"VariableDeclaration","scope":517,"src":"6273:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":472,"name":"uint64","nodeType":"ElementaryTypeName","src":"6273:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6272:16:1"},"src":"6250:431:1","virtual":false,"visibility":"internal"},{"body":{"id":524,"nodeType":"Block","src":"6919:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":520,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"6929:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"6929:20:1"},{"id":523,"nodeType":"PlaceholderStatement","src":"6959:1:1"}]},"documentation":{"id":518,"nodeType":"StructuredDocumentation","src":"6687:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":525,"name":"onlyInitializing","nameLocation":"6900:16:1","nodeType":"ModifierDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[],"src":"6916:2:1"},"src":"6891:76:1","virtual":false,"visibility":"internal"},{"body":{"id":537,"nodeType":"Block","src":"7134:89:1","statements":[{"condition":{"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7148:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":529,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7149:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7149:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":536,"nodeType":"IfStatement","src":"7144:73:1","trueBody":{"id":535,"nodeType":"Block","src":"7168:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":532,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"7189:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7189:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":534,"nodeType":"RevertStatement","src":"7182:24:1"}]}}]},"documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"6973:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":538,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7091:18:1","nodeType":"FunctionDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[],"src":"7109:2:1"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[],"src":"7134:0:1"},"scope":630,"src":"7082:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":583,"nodeType":"Block","src":"7758:373:1","statements":[{"assignments":[544],"declarations":[{"constant":false,"id":544,"mutability":"mutable","name":"$","nameLocation":"7853:1:1","nodeType":"VariableDeclaration","scope":583,"src":"7824:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":543,"nodeType":"UserDefinedTypeName","pathNode":{"id":542,"name":"InitializableStorage","nameLocations":["7824:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"7824:20:1"},"referencedDeclaration":373,"src":"7824:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":547,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":545,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"7857:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7857:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7824:59:1"},{"condition":{"expression":{"id":548,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"7898:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7900:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"7898:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":554,"nodeType":"IfStatement","src":"7894:76:1","trueBody":{"id":553,"nodeType":"Block","src":"7915:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":550,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"7936:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7936:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":552,"nodeType":"RevertStatement","src":"7929:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":555,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"7983:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7985:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"7983:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8006:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":558,"name":"uint64","nodeType":"ElementaryTypeName","src":"8006:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":557,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8001:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8014:3:1","memberName":"max","nodeType":"MemberAccess","src":"8001:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7983:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":582,"nodeType":"IfStatement","src":"7979:146:1","trueBody":{"id":581,"nodeType":"Block","src":"8019:106:1","statements":[{"expression":{"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":563,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"8033:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":565,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8035:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"8033:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8055:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":567,"name":"uint64","nodeType":"ElementaryTypeName","src":"8055:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":566,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8050:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8063:3:1","memberName":"max","nodeType":"MemberAccess","src":"8050:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8033:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":572,"nodeType":"ExpressionStatement","src":"8033:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8102:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":575,"name":"uint64","nodeType":"ElementaryTypeName","src":"8102:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":574,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8097:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8097:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8110:3:1","memberName":"max","nodeType":"MemberAccess","src":"8097:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":573,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8085:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":580,"nodeType":"EmitStatement","src":"8080:34:1"}]}}]},"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"7229:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":584,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7718:20:1","nodeType":"FunctionDefinition","parameters":{"id":540,"nodeType":"ParameterList","parameters":[],"src":"7738:2:1"},"returnParameters":{"id":541,"nodeType":"ParameterList","parameters":[],"src":"7758:0:1"},"scope":630,"src":"7709:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":594,"nodeType":"Block","src":"8306:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":590,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"8323:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8323:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"8323:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":589,"id":593,"nodeType":"Return","src":"8316:46:1"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"8137:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":595,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8250:22:1","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[],"src":"8272:2:1"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":595,"src":"8298:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":587,"name":"uint64","nodeType":"ElementaryTypeName","src":"8298:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8297:8:1"},"scope":630,"src":"8241:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"8541:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":601,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"8558:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8585:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"8558:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":600,"id":604,"nodeType":"Return","src":"8551:47:1"}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"8375:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8494:15:1","nodeType":"FunctionDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"8509:2:1"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":606,"src":"8535:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":598,"name":"bool","nodeType":"ElementaryTypeName","src":"8535:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8534:6:1"},"scope":630,"src":"8485:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":614,"nodeType":"Block","src":"8896:45:1","statements":[{"expression":{"id":612,"name":"INITIALIZABLE_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8913:21:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":611,"id":613,"nodeType":"Return","src":"8906:28:1"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"8611:203:1","text":" @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."},"id":615,"implemented":true,"kind":"function","modifiers":[],"name":"_initializableStorageSlot","nameLocation":"8828:25:1","nodeType":"FunctionDefinition","parameters":{"id":608,"nodeType":"ParameterList","parameters":[],"src":"8853:2:1"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":615,"src":"8887:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8887:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8886:9:1"},"scope":630,"src":"8819:122:1","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"9161:115:1","statements":[{"assignments":[623],"declarations":[{"constant":false,"id":623,"mutability":"mutable","name":"slot","nameLocation":"9179:4:1","nodeType":"VariableDeclaration","scope":628,"src":"9171:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9171:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":626,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":624,"name":"_initializableStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"9186:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9171:42:1"},{"AST":{"nativeSrc":"9232:38:1","nodeType":"YulBlock","src":"9232:38:1","statements":[{"nativeSrc":"9246:14:1","nodeType":"YulAssignment","src":"9246:14:1","value":{"name":"slot","nativeSrc":"9256:4:1","nodeType":"YulIdentifier","src":"9256:4:1"},"variableNames":[{"name":"$.slot","nativeSrc":"9246:6:1","nodeType":"YulIdentifier","src":"9246:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":620,"isOffset":false,"isSlot":true,"src":"9246:6:1","suffix":"slot","valueSize":1},{"declaration":623,"isOffset":false,"isSlot":false,"src":"9256:4:1","valueSize":1}],"id":627,"nodeType":"InlineAssembly","src":"9223:47:1"}]},"documentation":{"id":616,"nodeType":"StructuredDocumentation","src":"8947:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"9080:24:1","nodeType":"FunctionDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[],"src":"9104:2:1"},"returnParameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"$","nameLocation":"9158:1:1","nodeType":"VariableDeclaration","scope":629,"src":"9129:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":619,"nodeType":"UserDefinedTypeName","pathNode":{"id":618,"name":"InitializableStorage","nameLocations":["9129:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"9129:20:1"},"referencedDeclaration":373,"src":"9129:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"9128:32:1"},"scope":630,"src":"9071:205:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":631,"src":"2349:6929:1","usedErrors":[379,382],"usedEvents":[387]}],"src":"113:9166:1"},"id":1},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[676],"Initializable":[630]},"id":677,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":632,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":677,"sourceUnit":631,"src":"126:63:2","symbolAliases":[{"foreign":{"id":633,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"134:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":636,"name":"Initializable","nameLocations":["728:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"728:13:2"},"id":637,"nodeType":"InheritanceSpecifier","src":"728:13:2"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"191:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":676,"linearizedBaseContracts":[676,630],"name":"ContextUpgradeable","nameLocation":"706:18:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":642,"nodeType":"Block","src":"800:7:2","statements":[]},"id":643,"implemented":true,"kind":"function","modifiers":[{"id":640,"kind":"modifierInvocation","modifierName":{"id":639,"name":"onlyInitializing","nameLocations":["783:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"783:16:2"},"nodeType":"ModifierInvocation","src":"783:16:2"}],"name":"__Context_init","nameLocation":"757:14:2","nodeType":"FunctionDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"771:2:2"},"returnParameters":{"id":641,"nodeType":"ParameterList","parameters":[],"src":"800:0:2"},"scope":676,"src":"748:59:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":648,"nodeType":"Block","src":"875:7:2","statements":[]},"id":649,"implemented":true,"kind":"function","modifiers":[{"id":646,"kind":"modifierInvocation","modifierName":{"id":645,"name":"onlyInitializing","nameLocations":["858:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"858:16:2"},"nodeType":"ModifierInvocation","src":"858:16:2"}],"name":"__Context_init_unchained","nameLocation":"822:24:2","nodeType":"FunctionDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[],"src":"846:2:2"},"returnParameters":{"id":647,"nodeType":"ParameterList","parameters":[],"src":"875:0:2"},"scope":676,"src":"813:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":657,"nodeType":"Block","src":"949:34:2","statements":[{"expression":{"expression":{"id":654,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:2","memberName":"sender","nodeType":"MemberAccess","src":"966:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":653,"id":656,"nodeType":"Return","src":"959:17:2"}]},"id":658,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:2","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[],"src":"906:2:2"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":658,"src":"940:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:2"},"scope":676,"src":"887:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":666,"nodeType":"Block","src":"1056:32:2","statements":[{"expression":{"expression":{"id":663,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:2","memberName":"data","nodeType":"MemberAccess","src":"1073:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":662,"id":665,"nodeType":"Return","src":"1066:15:2"}]},"id":667,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:2","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[],"src":"1006:2:2"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":667,"src":"1040:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":660,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:2"},"scope":676,"src":"989:99:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"1166:25:2","statements":[{"expression":{"hexValue":"30","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":671,"id":673,"nodeType":"Return","src":"1176:8:2"}]},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:2","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[],"src":"1123:2:2"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"1157:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:2"},"scope":676,"src":"1094:97:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":677,"src":"688:505:2","usedErrors":[379,382],"usedEvents":[387]}],"src":"101:1093:2"},"id":2},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[716],"IERC165":[2002],"Initializable":[630]},"id":717,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":678,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":680,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":717,"sourceUnit":2003,"src":"140:80:3","symbolAliases":[{"foreign":{"id":679,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"148:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":682,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":717,"sourceUnit":631,"src":"221:66:3","symbolAliases":[{"foreign":{"id":681,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"229:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":684,"name":"Initializable","nameLocations":["808:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"808:13:3"},"id":685,"nodeType":"InheritanceSpecifier","src":"808:13:3"},{"baseName":{"id":686,"name":"IERC165","nameLocations":["823:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2002,"src":"823:7:3"},"id":687,"nodeType":"InheritanceSpecifier","src":"823:7:3"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"289:479:3","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":716,"linearizedBaseContracts":[716,2002,630],"name":"ERC165Upgradeable","nameLocation":"787:17:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":692,"nodeType":"Block","src":"888:7:3","statements":[]},"id":693,"implemented":true,"kind":"function","modifiers":[{"id":690,"kind":"modifierInvocation","modifierName":{"id":689,"name":"onlyInitializing","nameLocations":["871:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"871:16:3"},"nodeType":"ModifierInvocation","src":"871:16:3"}],"name":"__ERC165_init","nameLocation":"846:13:3","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[],"src":"859:2:3"},"returnParameters":{"id":691,"nodeType":"ParameterList","parameters":[],"src":"888:0:3"},"scope":716,"src":"837:58:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":698,"nodeType":"Block","src":"962:7:3","statements":[]},"id":699,"implemented":true,"kind":"function","modifiers":[{"id":696,"kind":"modifierInvocation","modifierName":{"id":695,"name":"onlyInitializing","nameLocations":["945:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"945:16:3"},"nodeType":"ModifierInvocation","src":"945:16:3"}],"name":"__ERC165_init_unchained","nameLocation":"910:23:3","nodeType":"FunctionDefinition","parameters":{"id":694,"nodeType":"ParameterList","parameters":[],"src":"933:2:3"},"returnParameters":{"id":697,"nodeType":"ParameterList","parameters":[],"src":"962:0:3"},"scope":716,"src":"901:68:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2001],"body":{"id":714,"nodeType":"Block","src":"1117:64:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":707,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"1134:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":709,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"1154:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2002_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2002_$","typeString":"type(contract IERC165)"}],"id":708,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1149:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2002","typeString":"type(contract IERC165)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1163:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1149:25:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1134:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":706,"id":713,"nodeType":"Return","src":"1127:47:3"}]},"documentation":{"id":700,"nodeType":"StructuredDocumentation","src":"974:56:3","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":715,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1044:17:3","nodeType":"FunctionDefinition","parameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":702,"mutability":"mutable","name":"interfaceId","nameLocation":"1069:11:3","nodeType":"VariableDeclaration","scope":715,"src":"1062:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":701,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1062:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1061:20:3"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":715,"src":"1111:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":704,"name":"bool","nodeType":"ElementaryTypeName","src":"1111:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1110:6:3"},"scope":716,"src":"1035:146:3","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":717,"src":"769:414:3","usedErrors":[379,382],"usedEvents":[387]}],"src":"114:1070:3"},"id":3},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[799]},"id":800,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":718,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":719,"nodeType":"StructuredDocumentation","src":"135:90:4","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":799,"linearizedBaseContracts":[799],"name":"IAccessControl","nameLocation":"236:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":720,"nodeType":"StructuredDocumentation","src":"257:56:4","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":726,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:4","nodeType":"ErrorDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"account","nameLocation":"365:7:4","nodeType":"VariableDeclaration","scope":726,"src":"357:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:4","nodeType":"VariableDeclaration","scope":726,"src":"374:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":723,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:4"},"src":"318:76:4"},{"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"400:148:4","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":729,"name":"AccessControlBadConfirmation","nameLocation":"559:28:4","nodeType":"ErrorDefinition","parameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"587:2:4"},"src":"553:37:4"},{"anonymous":false,"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"596:254:4","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":738,"name":"RoleAdminChanged","nameLocation":"861:16:4","nodeType":"EventDefinition","parameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:4","nodeType":"VariableDeclaration","scope":738,"src":"878:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":731,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":734,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:4","nodeType":"VariableDeclaration","scope":738,"src":"900:33:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":736,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:4","nodeType":"VariableDeclaration","scope":738,"src":"935:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:4"},"src":"855:110:4"},{"anonymous":false,"documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"971:295:4","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":747,"name":"RoleGranted","nameLocation":"1277:11:4","nodeType":"EventDefinition","parameters":{"id":746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:4","nodeType":"VariableDeclaration","scope":747,"src":"1289:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":743,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:4","nodeType":"VariableDeclaration","scope":747,"src":"1311:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":745,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:4","nodeType":"VariableDeclaration","scope":747,"src":"1336:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:4"},"src":"1271:89:4"},{"anonymous":false,"documentation":{"id":748,"nodeType":"StructuredDocumentation","src":"1366:275:4","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":756,"name":"RoleRevoked","nameLocation":"1652:11:4","nodeType":"EventDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:4","nodeType":"VariableDeclaration","scope":756,"src":"1664:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":752,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:4","nodeType":"VariableDeclaration","scope":756,"src":"1686:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":751,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":754,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:4","nodeType":"VariableDeclaration","scope":756,"src":"1711:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":753,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:4"},"src":"1646:89:4"},{"documentation":{"id":757,"nodeType":"StructuredDocumentation","src":"1741:76:4","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":766,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:4","nodeType":"FunctionDefinition","parameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":759,"mutability":"mutable","name":"role","nameLocation":"1847:4:4","nodeType":"VariableDeclaration","scope":766,"src":"1839:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":761,"mutability":"mutable","name":"account","nameLocation":"1861:7:4","nodeType":"VariableDeclaration","scope":766,"src":"1853:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:4"},"returnParameters":{"id":765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":766,"src":"1893:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":763,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:4"},"scope":799,"src":"1822:77:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"1905:184:4","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":774,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:4","nodeType":"FunctionDefinition","parameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"role","nameLocation":"2124:4:4","nodeType":"VariableDeclaration","scope":774,"src":"2116:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":768,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:4"},"returnParameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":774,"src":"2153:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:4"},"scope":799,"src":"2094:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":775,"nodeType":"StructuredDocumentation","src":"2168:239:4","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":782,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:4","nodeType":"FunctionDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"role","nameLocation":"2439:4:4","nodeType":"VariableDeclaration","scope":782,"src":"2431:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":779,"mutability":"mutable","name":"account","nameLocation":"2453:7:4","nodeType":"VariableDeclaration","scope":782,"src":"2445:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":778,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:4"},"returnParameters":{"id":781,"nodeType":"ParameterList","parameters":[],"src":"2470:0:4"},"scope":799,"src":"2412:59:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"2477:223:4","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":790,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:4","nodeType":"FunctionDefinition","parameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"role","nameLocation":"2733:4:4","nodeType":"VariableDeclaration","scope":790,"src":"2725:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"account","nameLocation":"2747:7:4","nodeType":"VariableDeclaration","scope":790,"src":"2739:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:4"},"returnParameters":{"id":789,"nodeType":"ParameterList","parameters":[],"src":"2764:0:4"},"scope":799,"src":"2705:60:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":791,"nodeType":"StructuredDocumentation","src":"2771:491:4","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":798,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:4","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"mutability":"mutable","name":"role","nameLocation":"3297:4:4","nodeType":"VariableDeclaration","scope":798,"src":"3289:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":795,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:4","nodeType":"VariableDeclaration","scope":798,"src":"3303:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:4"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"3339:0:4"},"scope":799,"src":"3267:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":800,"src":"226:3116:4","usedErrors":[726,729],"usedEvents":[738,747,756]}],"src":"109:3234:4"},"id":4},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[877]},"id":878,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":801,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"132:71:5","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":877,"linearizedBaseContracts":[877],"name":"IERC20","nameLocation":"214:6:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"227:158:5","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":811,"name":"Transfer","nameLocation":"396:8:5","nodeType":"EventDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:5","nodeType":"VariableDeclaration","scope":811,"src":"405:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":807,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:5","nodeType":"VariableDeclaration","scope":811,"src":"427:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":809,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:5","nodeType":"VariableDeclaration","scope":811,"src":"447:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:5"},"src":"390:72:5"},{"anonymous":false,"documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"468:148:5","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":820,"name":"Approval","nameLocation":"627:8:5","nodeType":"EventDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:5","nodeType":"VariableDeclaration","scope":820,"src":"636:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":816,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:5","nodeType":"VariableDeclaration","scope":820,"src":"659:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":818,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:5","nodeType":"VariableDeclaration","scope":820,"src":"684:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:5"},"src":"621:78:5"},{"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"705:65:5","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":826,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:5","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"795:2:5"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"821:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:5"},"scope":877,"src":"775:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"836:71:5","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":834,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:5","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"account","nameLocation":"939:7:5","nodeType":"VariableDeclaration","scope":834,"src":"931:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:5"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":834,"src":"971:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:5"},"scope":877,"src":"912:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"986:213:5","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":844,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:5","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"to","nameLocation":"1230:2:5","nodeType":"VariableDeclaration","scope":844,"src":"1222:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"value","nameLocation":"1242:5:5","nodeType":"VariableDeclaration","scope":844,"src":"1234:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:5"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":844,"src":"1267:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":841,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:5"},"scope":877,"src":"1204:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"1279:264:5","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":854,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:5","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"owner","nameLocation":"1575:5:5","nodeType":"VariableDeclaration","scope":854,"src":"1567:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"spender","nameLocation":"1590:7:5","nodeType":"VariableDeclaration","scope":854,"src":"1582:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:5"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"1622:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:5"},"scope":877,"src":"1548:83:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"1637:667:5","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":864,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:5","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"spender","nameLocation":"2334:7:5","nodeType":"VariableDeclaration","scope":864,"src":"2326:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"value","nameLocation":"2351:5:5","nodeType":"VariableDeclaration","scope":864,"src":"2343:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:5"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":864,"src":"2376:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":861,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:5"},"scope":877,"src":"2309:73:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"2388:297:5","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":876,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:5","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"from","nameLocation":"2720:4:5","nodeType":"VariableDeclaration","scope":876,"src":"2712:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"to","nameLocation":"2734:2:5","nodeType":"VariableDeclaration","scope":876,"src":"2726:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"value","nameLocation":"2746:5:5","nodeType":"VariableDeclaration","scope":876,"src":"2738:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:5"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"2771:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":873,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:5"},"scope":877,"src":"2690:87:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":878,"src":"204:2575:5","usedErrors":[],"usedEvents":[811,820]}],"src":"106:2674:5"},"id":5},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/Hashes.sol","exportedSymbols":{"Hashes":[917]},"id":918,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":879,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"Hashes","contractDependencies":[],"contractKind":"library","documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"139:81:6","text":" @dev Library of standard hash functions.\n _Available since v5.1._"},"fullyImplemented":true,"id":917,"linearizedBaseContracts":[917],"name":"Hashes","nameLocation":"229:6:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":903,"nodeType":"Block","src":"588:83:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":890,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"605:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":891,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"609:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"605:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":898,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"659:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":899,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"662:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":897,"name":"efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"640:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"640:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"605:59:6","trueExpression":{"arguments":[{"id":894,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"632:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":895,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"635:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":893,"name":"efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"613:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"613:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":889,"id":902,"nodeType":"Return","src":"598:66:6"}]},"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"242:257:6","text":" @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]."},"id":904,"implemented":true,"kind":"function","modifiers":[],"name":"commutativeKeccak256","nameLocation":"513:20:6","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":883,"mutability":"mutable","name":"a","nameLocation":"542:1:6","nodeType":"VariableDeclaration","scope":904,"src":"534:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":882,"name":"bytes32","nodeType":"ElementaryTypeName","src":"534:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":885,"mutability":"mutable","name":"b","nameLocation":"553:1:6","nodeType":"VariableDeclaration","scope":904,"src":"545:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":884,"name":"bytes32","nodeType":"ElementaryTypeName","src":"545:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"533:22:6"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":904,"src":"579:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"579:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"578:9:6"},"scope":917,"src":"504:167:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":915,"nodeType":"Block","src":"879:151:6","statements":[{"AST":{"nativeSrc":"914:110:6","nodeType":"YulBlock","src":"914:110:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"935:4:6","nodeType":"YulLiteral","src":"935:4:6","type":"","value":"0x00"},{"name":"a","nativeSrc":"941:1:6","nodeType":"YulIdentifier","src":"941:1:6"}],"functionName":{"name":"mstore","nativeSrc":"928:6:6","nodeType":"YulIdentifier","src":"928:6:6"},"nativeSrc":"928:15:6","nodeType":"YulFunctionCall","src":"928:15:6"},"nativeSrc":"928:15:6","nodeType":"YulExpressionStatement","src":"928:15:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"963:4:6","nodeType":"YulLiteral","src":"963:4:6","type":"","value":"0x20"},{"name":"b","nativeSrc":"969:1:6","nodeType":"YulIdentifier","src":"969:1:6"}],"functionName":{"name":"mstore","nativeSrc":"956:6:6","nodeType":"YulIdentifier","src":"956:6:6"},"nativeSrc":"956:15:6","nodeType":"YulFunctionCall","src":"956:15:6"},"nativeSrc":"956:15:6","nodeType":"YulExpressionStatement","src":"956:15:6"},{"nativeSrc":"984:30:6","nodeType":"YulAssignment","src":"984:30:6","value":{"arguments":[{"kind":"number","nativeSrc":"1003:4:6","nodeType":"YulLiteral","src":"1003:4:6","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1009:4:6","nodeType":"YulLiteral","src":"1009:4:6","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"993:9:6","nodeType":"YulIdentifier","src":"993:9:6"},"nativeSrc":"993:21:6","nodeType":"YulFunctionCall","src":"993:21:6"},"variableNames":[{"name":"value","nativeSrc":"984:5:6","nodeType":"YulIdentifier","src":"984:5:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":907,"isOffset":false,"isSlot":false,"src":"941:1:6","valueSize":1},{"declaration":909,"isOffset":false,"isSlot":false,"src":"969:1:6","valueSize":1},{"declaration":912,"isOffset":false,"isSlot":false,"src":"984:5:6","valueSize":1}],"flags":["memory-safe"],"id":914,"nodeType":"InlineAssembly","src":"889:135:6"}]},"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"677:109:6","text":" @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory."},"id":916,"implemented":true,"kind":"function","modifiers":[],"name":"efficientKeccak256","nameLocation":"800:18:6","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"a","nameLocation":"827:1:6","nodeType":"VariableDeclaration","scope":916,"src":"819:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"819:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"b","nameLocation":"838:1:6","nodeType":"VariableDeclaration","scope":916,"src":"830:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":908,"name":"bytes32","nodeType":"ElementaryTypeName","src":"830:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"818:22:6"},"returnParameters":{"id":913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"value","nameLocation":"872:5:6","nodeType":"VariableDeclaration","scope":916,"src":"864:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"864:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"863:15:6"},"scope":917,"src":"791:239:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":918,"src":"221:811:6","usedErrors":[],"usedEvents":[]}],"src":"113:920:6"},"id":6},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"Hashes":[917],"MerkleProof":[1990]},"id":1991,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":919,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"206:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/Hashes.sol","file":"./Hashes.sol","id":921,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1991,"sourceUnit":918,"src":"232:36:7","symbolAliases":[{"foreign":{"id":920,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"240:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":922,"nodeType":"StructuredDocumentation","src":"270:1082:7","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the Merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates Merkle trees that are safe\n against this attack out of the box.\n IMPORTANT: Consider memory side-effects when using custom hashing functions\n that access memory in an unsafe way.\n NOTE: This library supports proof verification for merkle trees built using\n custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving\n leaf inclusion in trees built using non-commutative hashing functions requires\n additional logic that is not supported by this library."},"fullyImplemented":true,"id":1990,"linearizedBaseContracts":[1990],"name":"MerkleProof","nameLocation":"1361:11:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":923,"nodeType":"StructuredDocumentation","src":"1379:60:7","text":"@dev The multiproof provided is not valid."},"errorSelector":"35140492","id":925,"name":"MerkleProofInvalidMultiproof","nameLocation":"1450:28:7","nodeType":"ErrorDefinition","parameters":{"id":924,"nodeType":"ParameterList","parameters":[],"src":"1478:2:7"},"src":"1444:37:7"},{"body":{"id":945,"nodeType":"Block","src":"1999:57:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":939,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"2029:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":940,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"2036:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":938,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[987,1069],"referencedDeclaration":987,"src":"2016:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2016:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":942,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"2045:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2016:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":937,"id":944,"nodeType":"Return","src":"2009:40:7"}]},"documentation":{"id":926,"nodeType":"StructuredDocumentation","src":"1487:410:7","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in memory with the default hashing function."},"id":946,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1911:6:7","nodeType":"FunctionDefinition","parameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"mutability":"mutable","name":"proof","nameLocation":"1935:5:7","nodeType":"VariableDeclaration","scope":946,"src":"1918:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":927,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1918:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":928,"nodeType":"ArrayTypeName","src":"1918:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":931,"mutability":"mutable","name":"root","nameLocation":"1950:4:7","nodeType":"VariableDeclaration","scope":946,"src":"1942:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1942:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":933,"mutability":"mutable","name":"leaf","nameLocation":"1964:4:7","nodeType":"VariableDeclaration","scope":946,"src":"1956:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1956:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1917:52:7"},"returnParameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":946,"src":"1993:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":935,"name":"bool","nodeType":"ElementaryTypeName","src":"1993:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1992:6:7"},"scope":1990,"src":"1902:154:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":986,"nodeType":"Block","src":"2549:216:7","statements":[{"assignments":[958],"declarations":[{"constant":false,"id":958,"mutability":"mutable","name":"computedHash","nameLocation":"2567:12:7","nodeType":"VariableDeclaration","scope":986,"src":"2559:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":957,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2559:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":960,"initialValue":{"id":959,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"2582:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2559:27:7"},{"body":{"id":982,"nodeType":"Block","src":"2639:91:7","statements":[{"expression":{"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":972,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"2653:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":975,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"2696:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":976,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"2710:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":978,"indexExpression":{"id":977,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"2716:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2710:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":973,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"2668:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$917_$","typeString":"type(library Hashes)"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2675:20:7","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":904,"src":"2668:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2653:66:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":981,"nodeType":"ExpressionStatement","src":"2653:66:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":965,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"2616:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":966,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"2620:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2626:6:7","memberName":"length","nodeType":"MemberAccess","src":"2620:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2616:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":983,"initializationExpression":{"assignments":[962],"declarations":[{"constant":false,"id":962,"mutability":"mutable","name":"i","nameLocation":"2609:1:7","nodeType":"VariableDeclaration","scope":983,"src":"2601:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"2601:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":964,"initialValue":{"hexValue":"30","id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2613:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2601:13:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2634:3:7","subExpression":{"id":969,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"2634:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":971,"nodeType":"ExpressionStatement","src":"2634:3:7"},"nodeType":"ForStatement","src":"2596:134:7"},{"expression":{"id":984,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"2746:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":956,"id":985,"nodeType":"Return","src":"2739:19:7"}]},"documentation":{"id":947,"nodeType":"StructuredDocumentation","src":"2062:390:7","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in memory with the default hashing function."},"id":987,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"2466:12:7","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"proof","nameLocation":"2496:5:7","nodeType":"VariableDeclaration","scope":987,"src":"2479:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2479:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":949,"nodeType":"ArrayTypeName","src":"2479:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":952,"mutability":"mutable","name":"leaf","nameLocation":"2511:4:7","nodeType":"VariableDeclaration","scope":987,"src":"2503:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":951,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2503:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2478:38:7"},"returnParameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":987,"src":"2540:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2540:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2539:9:7"},"scope":1990,"src":"2457:308:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1018,"nodeType":"Block","src":"3376:65:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1011,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"3406:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1012,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"3413:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1013,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"3419:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":1010,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[987,1069],"referencedDeclaration":1069,"src":"3393:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1015,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"3430:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3393:41:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1009,"id":1017,"nodeType":"Return","src":"3386:48:7"}]},"documentation":{"id":988,"nodeType":"StructuredDocumentation","src":"2771:407:7","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in memory with a custom hashing function."},"id":1019,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"3192:6:7","nodeType":"FunctionDefinition","parameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"proof","nameLocation":"3225:5:7","nodeType":"VariableDeclaration","scope":1019,"src":"3208:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3208:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":990,"nodeType":"ArrayTypeName","src":"3208:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"root","nameLocation":"3248:4:7","nodeType":"VariableDeclaration","scope":1019,"src":"3240:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3240:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":995,"mutability":"mutable","name":"leaf","nameLocation":"3270:4:7","nodeType":"VariableDeclaration","scope":1019,"src":"3262:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":994,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3262:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1005,"mutability":"mutable","name":"hasher","nameLocation":"3334:6:7","nodeType":"VariableDeclaration","scope":1019,"src":"3284:56:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1004,"nodeType":"FunctionTypeName","parameterTypes":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1004,"src":"3293:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":996,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3293:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1004,"src":"3302:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3302:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3292:18:7"},"returnParameterTypes":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1004,"src":"3325:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1001,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3325:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3324:9:7"},"src":"3284:56:7","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"3198:148:7"},"returnParameters":{"id":1009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1019,"src":"3370:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1007,"name":"bool","nodeType":"ElementaryTypeName","src":"3370:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3369:6:7"},"scope":1990,"src":"3183:258:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1068,"nodeType":"Block","src":"4019:195:7","statements":[{"assignments":[1041],"declarations":[{"constant":false,"id":1041,"mutability":"mutable","name":"computedHash","nameLocation":"4037:12:7","nodeType":"VariableDeclaration","scope":1068,"src":"4029:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1040,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4029:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1043,"initialValue":{"id":1042,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"4052:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4029:27:7"},{"body":{"id":1064,"nodeType":"Block","src":"4109:70:7","statements":[{"expression":{"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1055,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"4123:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1057,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"4145:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1058,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"4159:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1060,"indexExpression":{"id":1059,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"4165:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4159:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1056,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"4138:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4138:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4123:45:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1063,"nodeType":"ExpressionStatement","src":"4123:45:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1048,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"4086:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1049,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"4090:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:6:7","memberName":"length","nodeType":"MemberAccess","src":"4090:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4086:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1065,"initializationExpression":{"assignments":[1045],"declarations":[{"constant":false,"id":1045,"mutability":"mutable","name":"i","nameLocation":"4079:1:7","nodeType":"VariableDeclaration","scope":1065,"src":"4071:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1044,"name":"uint256","nodeType":"ElementaryTypeName","src":"4071:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1047,"initialValue":{"hexValue":"30","id":1046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4083:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4071:13:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4104:3:7","subExpression":{"id":1052,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"4104:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1054,"nodeType":"ExpressionStatement","src":"4104:3:7"},"nodeType":"ForStatement","src":"4066:113:7"},{"expression":{"id":1066,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"4195:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1039,"id":1067,"nodeType":"Return","src":"4188:19:7"}]},"documentation":{"id":1020,"nodeType":"StructuredDocumentation","src":"3447:387:7","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in memory with a custom hashing function."},"id":1069,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"3848:12:7","nodeType":"FunctionDefinition","parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1023,"mutability":"mutable","name":"proof","nameLocation":"3887:5:7","nodeType":"VariableDeclaration","scope":1069,"src":"3870:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3870:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1022,"nodeType":"ArrayTypeName","src":"3870:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"leaf","nameLocation":"3910:4:7","nodeType":"VariableDeclaration","scope":1069,"src":"3902:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1024,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3902:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"hasher","nameLocation":"3974:6:7","nodeType":"VariableDeclaration","scope":1069,"src":"3924:56:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1034,"nodeType":"FunctionTypeName","parameterTypes":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1034,"src":"3933:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3933:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1034,"src":"3942:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1028,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3942:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3932:18:7"},"returnParameterTypes":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1034,"src":"3965:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3965:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3964:9:7"},"src":"3924:56:7","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"3860:126:7"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1069,"src":"4010:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1037,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4010:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4009:9:7"},"scope":1990,"src":"3839:375:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1089,"nodeType":"Block","src":"4744:65:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1083,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"4782:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1084,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"4789:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1082,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[1131,1213],"referencedDeclaration":1131,"src":"4761:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4761:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1086,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"4798:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4761:41:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1081,"id":1088,"nodeType":"Return","src":"4754:48:7"}]},"documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"4220:412:7","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in calldata with the default hashing function."},"id":1090,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"4646:14:7","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"mutability":"mutable","name":"proof","nameLocation":"4680:5:7","nodeType":"VariableDeclaration","scope":1090,"src":"4661:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4661:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1072,"nodeType":"ArrayTypeName","src":"4661:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1075,"mutability":"mutable","name":"root","nameLocation":"4695:4:7","nodeType":"VariableDeclaration","scope":1090,"src":"4687:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4687:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"leaf","nameLocation":"4709:4:7","nodeType":"VariableDeclaration","scope":1090,"src":"4701:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4701:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4660:54:7"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1090,"src":"4738:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1079,"name":"bool","nodeType":"ElementaryTypeName","src":"4738:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4737:6:7"},"scope":1990,"src":"4637:172:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1130,"nodeType":"Block","src":"5314:216:7","statements":[{"assignments":[1102],"declarations":[{"constant":false,"id":1102,"mutability":"mutable","name":"computedHash","nameLocation":"5332:12:7","nodeType":"VariableDeclaration","scope":1130,"src":"5324:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5324:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1104,"initialValue":{"id":1103,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5347:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5324:27:7"},{"body":{"id":1126,"nodeType":"Block","src":"5404:91:7","statements":[{"expression":{"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1116,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"5418:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1119,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"5461:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1120,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"5475:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1122,"indexExpression":{"id":1121,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"5481:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5475:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1117,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"5433:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$917_$","typeString":"type(library Hashes)"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5440:20:7","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":904,"src":"5433:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5433:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5418:66:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1125,"nodeType":"ExpressionStatement","src":"5418:66:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1109,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"5381:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1110,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"5385:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5391:6:7","memberName":"length","nodeType":"MemberAccess","src":"5385:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5381:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1127,"initializationExpression":{"assignments":[1106],"declarations":[{"constant":false,"id":1106,"mutability":"mutable","name":"i","nameLocation":"5374:1:7","nodeType":"VariableDeclaration","scope":1127,"src":"5366:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"5366:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1108,"initialValue":{"hexValue":"30","id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5378:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5366:13:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5399:3:7","subExpression":{"id":1113,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"5399:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1115,"nodeType":"ExpressionStatement","src":"5399:3:7"},"nodeType":"ForStatement","src":"5361:134:7"},{"expression":{"id":1128,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"5511:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1100,"id":1129,"nodeType":"Return","src":"5504:19:7"}]},"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"4815:392:7","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in calldata with the default hashing function."},"id":1131,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"5221:20:7","nodeType":"FunctionDefinition","parameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"proof","nameLocation":"5261:5:7","nodeType":"VariableDeclaration","scope":1131,"src":"5242:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1092,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5242:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1093,"nodeType":"ArrayTypeName","src":"5242:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"leaf","nameLocation":"5276:4:7","nodeType":"VariableDeclaration","scope":1131,"src":"5268:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5268:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5241:40:7"},"returnParameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1131,"src":"5305:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1098,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5305:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5304:9:7"},"scope":1990,"src":"5212:318:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1162,"nodeType":"Block","src":"6153:73:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1155,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"6191:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1156,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"6198:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1157,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"6204:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":1154,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[1131,1213],"referencedDeclaration":1213,"src":"6170:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6170:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1159,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"6215:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6170:49:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1153,"id":1161,"nodeType":"Return","src":"6163:56:7"}]},"documentation":{"id":1132,"nodeType":"StructuredDocumentation","src":"5536:409:7","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in calldata with a custom hashing function."},"id":1163,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"5959:14:7","nodeType":"FunctionDefinition","parameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"proof","nameLocation":"6002:5:7","nodeType":"VariableDeclaration","scope":1163,"src":"5983:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5983:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1134,"nodeType":"ArrayTypeName","src":"5983:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"root","nameLocation":"6025:4:7","nodeType":"VariableDeclaration","scope":1163,"src":"6017:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6017:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"leaf","nameLocation":"6047:4:7","nodeType":"VariableDeclaration","scope":1163,"src":"6039:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6039:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"hasher","nameLocation":"6111:6:7","nodeType":"VariableDeclaration","scope":1163,"src":"6061:56:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1148,"nodeType":"FunctionTypeName","parameterTypes":{"id":1144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1148,"src":"6070:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1140,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6070:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1148,"src":"6079:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1142,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6079:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6069:18:7"},"returnParameterTypes":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1148,"src":"6102:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6102:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6101:9:7"},"src":"6061:56:7","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"5973:150:7"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1163,"src":"6147:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1151,"name":"bool","nodeType":"ElementaryTypeName","src":"6147:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6146:6:7"},"scope":1990,"src":"5950:276:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1212,"nodeType":"Block","src":"6816:195:7","statements":[{"assignments":[1185],"declarations":[{"constant":false,"id":1185,"mutability":"mutable","name":"computedHash","nameLocation":"6834:12:7","nodeType":"VariableDeclaration","scope":1212,"src":"6826:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6826:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1187,"initialValue":{"id":1186,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"6849:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6826:27:7"},{"body":{"id":1208,"nodeType":"Block","src":"6906:70:7","statements":[{"expression":{"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1199,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"6920:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1201,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"6942:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1202,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"6956:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1204,"indexExpression":{"id":1203,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"6962:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6956:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1200,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"6935:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6935:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6920:45:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1207,"nodeType":"ExpressionStatement","src":"6920:45:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1192,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"6883:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1193,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"6887:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6893:6:7","memberName":"length","nodeType":"MemberAccess","src":"6887:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6883:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1209,"initializationExpression":{"assignments":[1189],"declarations":[{"constant":false,"id":1189,"mutability":"mutable","name":"i","nameLocation":"6876:1:7","nodeType":"VariableDeclaration","scope":1209,"src":"6868:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"6868:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1191,"initialValue":{"hexValue":"30","id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6868:13:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6901:3:7","subExpression":{"id":1196,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"6901:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1198,"nodeType":"ExpressionStatement","src":"6901:3:7"},"nodeType":"ForStatement","src":"6863:113:7"},{"expression":{"id":1210,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"6992:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1183,"id":1211,"nodeType":"Return","src":"6985:19:7"}]},"documentation":{"id":1164,"nodeType":"StructuredDocumentation","src":"6232:389:7","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in calldata with a custom hashing function."},"id":1213,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"6635:20:7","nodeType":"FunctionDefinition","parameters":{"id":1180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"proof","nameLocation":"6684:5:7","nodeType":"VariableDeclaration","scope":1213,"src":"6665:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6665:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1166,"nodeType":"ArrayTypeName","src":"6665:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"leaf","nameLocation":"6707:4:7","nodeType":"VariableDeclaration","scope":1213,"src":"6699:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6699:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"hasher","nameLocation":"6771:6:7","nodeType":"VariableDeclaration","scope":1213,"src":"6721:56:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1178,"nodeType":"FunctionTypeName","parameterTypes":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1178,"src":"6730:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1170,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6730:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1178,"src":"6739:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6739:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6729:18:7"},"returnParameterTypes":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1178,"src":"6762:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6762:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6761:9:7"},"src":"6721:56:7","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"6655:128:7"},"returnParameters":{"id":1183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1213,"src":"6807:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6807:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6806:9:7"},"scope":1990,"src":"6626:385:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1238,"nodeType":"Block","src":"7797:76:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1231,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"7832:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1232,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"7839:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":1233,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"7851:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1230,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[1397,1601],"referencedDeclaration":1397,"src":"7814:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7814:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1235,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7862:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7814:52:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1229,"id":1237,"nodeType":"Return","src":"7807:59:7"}]},"documentation":{"id":1214,"nodeType":"StructuredDocumentation","src":"7017:593:7","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in memory with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProof}."},"id":1239,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"7624:16:7","nodeType":"FunctionDefinition","parameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1217,"mutability":"mutable","name":"proof","nameLocation":"7667:5:7","nodeType":"VariableDeclaration","scope":1239,"src":"7650:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7650:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1216,"nodeType":"ArrayTypeName","src":"7650:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"proofFlags","nameLocation":"7696:10:7","nodeType":"VariableDeclaration","scope":1239,"src":"7682:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1218,"name":"bool","nodeType":"ElementaryTypeName","src":"7682:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1219,"nodeType":"ArrayTypeName","src":"7682:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1222,"mutability":"mutable","name":"root","nameLocation":"7724:4:7","nodeType":"VariableDeclaration","scope":1239,"src":"7716:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7716:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"leaves","nameLocation":"7755:6:7","nodeType":"VariableDeclaration","scope":1239,"src":"7738:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7738:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1224,"nodeType":"ArrayTypeName","src":"7738:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7640:127:7"},"returnParameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1239,"src":"7791:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1227,"name":"bool","nodeType":"ElementaryTypeName","src":"7791:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7790:6:7"},"scope":1990,"src":"7615:258:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1396,"nodeType":"Block","src":"9159:2104:7","statements":[{"assignments":[1255],"declarations":[{"constant":false,"id":1255,"mutability":"mutable","name":"leavesLen","nameLocation":"9551:9:7","nodeType":"VariableDeclaration","scope":1396,"src":"9543:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"9543:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1258,"initialValue":{"expression":{"id":1256,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"9563:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9570:6:7","memberName":"length","nodeType":"MemberAccess","src":"9563:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9543:33:7"},{"assignments":[1260],"declarations":[{"constant":false,"id":1260,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"9594:13:7","nodeType":"VariableDeclaration","scope":1396,"src":"9586:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"9586:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1263,"initialValue":{"expression":{"id":1261,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"9610:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9621:6:7","memberName":"length","nodeType":"MemberAccess","src":"9610:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9586:41:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1264,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"9675:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1265,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"9687:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9693:6:7","memberName":"length","nodeType":"MemberAccess","src":"9687:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9675:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1268,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"9703:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9703:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9675:45:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1276,"nodeType":"IfStatement","src":"9671:113:7","trueBody":{"id":1275,"nodeType":"Block","src":"9722:62:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1272,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"9743:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9743:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1274,"nodeType":"RevertStatement","src":"9736:37:7"}]}},{"assignments":[1281],"declarations":[{"constant":false,"id":1281,"mutability":"mutable","name":"hashes","nameLocation":"10045:6:7","nodeType":"VariableDeclaration","scope":1396,"src":"10028:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10028:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1280,"nodeType":"ArrayTypeName","src":"10028:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1287,"initialValue":{"arguments":[{"id":1285,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"10068:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10054:13:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1282,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10058:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1283,"nodeType":"ArrayTypeName","src":"10058:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10054:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10028:54:7"},{"assignments":[1289],"declarations":[{"constant":false,"id":1289,"mutability":"mutable","name":"leafPos","nameLocation":"10100:7:7","nodeType":"VariableDeclaration","scope":1396,"src":"10092:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1288,"name":"uint256","nodeType":"ElementaryTypeName","src":"10092:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1291,"initialValue":{"hexValue":"30","id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10110:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10092:19:7"},{"assignments":[1293],"declarations":[{"constant":false,"id":1293,"mutability":"mutable","name":"hashPos","nameLocation":"10129:7:7","nodeType":"VariableDeclaration","scope":1396,"src":"10121:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1292,"name":"uint256","nodeType":"ElementaryTypeName","src":"10121:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1295,"initialValue":{"hexValue":"30","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10139:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10121:19:7"},{"assignments":[1297],"declarations":[{"constant":false,"id":1297,"mutability":"mutable","name":"proofPos","nameLocation":"10158:8:7","nodeType":"VariableDeclaration","scope":1396,"src":"10150:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1296,"name":"uint256","nodeType":"ElementaryTypeName","src":"10150:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1299,"initialValue":{"hexValue":"30","id":1298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10169:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10150:20:7"},{"body":{"id":1359,"nodeType":"Block","src":"10590:310:7","statements":[{"assignments":[1311],"declarations":[{"constant":false,"id":1311,"mutability":"mutable","name":"a","nameLocation":"10612:1:7","nodeType":"VariableDeclaration","scope":1359,"src":"10604:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10604:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1324,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1312,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"10616:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1313,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"10626:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10616:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1319,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"10658:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1322,"indexExpression":{"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10665:9:7","subExpression":{"id":1320,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"10665:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10658:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10616:59:7","trueExpression":{"baseExpression":{"id":1315,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"10638:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1318,"indexExpression":{"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10645:9:7","subExpression":{"id":1316,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"10645:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10638:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10604:71:7"},{"assignments":[1326],"declarations":[{"constant":false,"id":1326,"mutability":"mutable","name":"b","nameLocation":"10697:1:7","nodeType":"VariableDeclaration","scope":1359,"src":"10689:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1325,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10689:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1348,"initialValue":{"condition":{"baseExpression":{"id":1327,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"10701:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1329,"indexExpression":{"id":1328,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"10712:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10701:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1343,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"10813:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1346,"indexExpression":{"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10819:10:7","subExpression":{"id":1344,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"10819:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10813:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10701:129:7","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1330,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"10734:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1331,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"10744:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10734:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1337,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"10776:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1340,"indexExpression":{"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10783:9:7","subExpression":{"id":1338,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"10783:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10776:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10734:59:7","trueExpression":{"baseExpression":{"id":1333,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"10756:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1336,"indexExpression":{"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10763:9:7","subExpression":{"id":1334,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"10763:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10756:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10733:61:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10689:141:7"},{"expression":{"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1349,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"10844:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1351,"indexExpression":{"id":1350,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"10851:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10844:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1354,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"10884:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1355,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"10887:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1352,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"10856:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$917_$","typeString":"type(library Hashes)"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10863:20:7","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":904,"src":"10856:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10856:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10844:45:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1358,"nodeType":"ExpressionStatement","src":"10844:45:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1304,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"10566:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1305,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"10570:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10566:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1360,"initializationExpression":{"assignments":[1301],"declarations":[{"constant":false,"id":1301,"mutability":"mutable","name":"i","nameLocation":"10559:1:7","nodeType":"VariableDeclaration","scope":1360,"src":"10551:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1300,"name":"uint256","nodeType":"ElementaryTypeName","src":"10551:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1303,"initialValue":{"hexValue":"30","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10563:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10551:13:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10585:3:7","subExpression":{"id":1307,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"10585:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1309,"nodeType":"ExpressionStatement","src":"10585:3:7"},"nodeType":"ForStatement","src":"10546:354:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1361,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"10914:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10930:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10914:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1381,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"11155:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11167:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11155:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1393,"nodeType":"Block","src":"11217:40:7","statements":[{"expression":{"baseExpression":{"id":1389,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"11238:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1391,"indexExpression":{"hexValue":"30","id":1390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11244:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11238:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1253,"id":1392,"nodeType":"Return","src":"11231:15:7"}]},"id":1394,"nodeType":"IfStatement","src":"11151:106:7","trueBody":{"id":1388,"nodeType":"Block","src":"11170:41:7","statements":[{"expression":{"baseExpression":{"id":1384,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"11191:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1386,"indexExpression":{"hexValue":"30","id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11198:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11191:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1253,"id":1387,"nodeType":"Return","src":"11184:16:7"}]}},"id":1395,"nodeType":"IfStatement","src":"10910:347:7","trueBody":{"id":1380,"nodeType":"Block","src":"10933:212:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1364,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"10951:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1365,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"10963:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10969:6:7","memberName":"length","nodeType":"MemberAccess","src":"10963:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10951:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1372,"nodeType":"IfStatement","src":"10947:100:7","trueBody":{"id":1371,"nodeType":"Block","src":"10977:70:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1368,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"11002:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11002:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1370,"nodeType":"RevertStatement","src":"10995:37:7"}]}},{"id":1379,"nodeType":"UncheckedBlock","src":"11060:75:7","statements":[{"expression":{"baseExpression":{"id":1373,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"11095:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1377,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1374,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"11102:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11118:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11102:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11095:25:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1253,"id":1378,"nodeType":"Return","src":"11088:32:7"}]}]}}]},"documentation":{"id":1240,"nodeType":"StructuredDocumentation","src":"7879:1100:7","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in memory with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":1397,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"8993:17:7","nodeType":"FunctionDefinition","parameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"proof","nameLocation":"9037:5:7","nodeType":"VariableDeclaration","scope":1397,"src":"9020:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9020:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1242,"nodeType":"ArrayTypeName","src":"9020:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1246,"mutability":"mutable","name":"proofFlags","nameLocation":"9066:10:7","nodeType":"VariableDeclaration","scope":1397,"src":"9052:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1244,"name":"bool","nodeType":"ElementaryTypeName","src":"9052:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1245,"nodeType":"ArrayTypeName","src":"9052:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"leaves","nameLocation":"9103:6:7","nodeType":"VariableDeclaration","scope":1397,"src":"9086:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1247,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9086:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1248,"nodeType":"ArrayTypeName","src":"9086:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"9010:105:7"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"merkleRoot","nameLocation":"9147:10:7","nodeType":"VariableDeclaration","scope":1397,"src":"9139:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9139:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9138:20:7"},"scope":1990,"src":"8984:2279:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1433,"nodeType":"Block","src":"12112:84:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1425,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"12147:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1426,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"12154:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":1427,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"12166:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1428,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"12174:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":1424,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[1397,1601],"referencedDeclaration":1601,"src":"12129:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12129:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1430,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"12185:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"12129:60:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1423,"id":1432,"nodeType":"Return","src":"12122:67:7"}]},"documentation":{"id":1398,"nodeType":"StructuredDocumentation","src":"11269:590:7","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in memory with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProof}."},"id":1434,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"11873:16:7","nodeType":"FunctionDefinition","parameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"proof","nameLocation":"11916:5:7","nodeType":"VariableDeclaration","scope":1434,"src":"11899:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11899:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1400,"nodeType":"ArrayTypeName","src":"11899:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1404,"mutability":"mutable","name":"proofFlags","nameLocation":"11945:10:7","nodeType":"VariableDeclaration","scope":1434,"src":"11931:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1402,"name":"bool","nodeType":"ElementaryTypeName","src":"11931:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1403,"nodeType":"ArrayTypeName","src":"11931:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1406,"mutability":"mutable","name":"root","nameLocation":"11973:4:7","nodeType":"VariableDeclaration","scope":1434,"src":"11965:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11965:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1409,"mutability":"mutable","name":"leaves","nameLocation":"12004:6:7","nodeType":"VariableDeclaration","scope":1434,"src":"11987:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11987:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1408,"nodeType":"ArrayTypeName","src":"11987:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1419,"mutability":"mutable","name":"hasher","nameLocation":"12070:6:7","nodeType":"VariableDeclaration","scope":1434,"src":"12020:56:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1418,"nodeType":"FunctionTypeName","parameterTypes":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1418,"src":"12029:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12029:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1418,"src":"12038:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12038:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12028:18:7"},"returnParameterTypes":{"id":1417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1418,"src":"12061:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1415,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12061:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12060:9:7"},"src":"12020:56:7","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"11889:193:7"},"returnParameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1434,"src":"12106:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1421,"name":"bool","nodeType":"ElementaryTypeName","src":"12106:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12105:6:7"},"scope":1990,"src":"11864:332:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1600,"nodeType":"Block","src":"13545:2083:7","statements":[{"assignments":[1460],"declarations":[{"constant":false,"id":1460,"mutability":"mutable","name":"leavesLen","nameLocation":"13937:9:7","nodeType":"VariableDeclaration","scope":1600,"src":"13929:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1459,"name":"uint256","nodeType":"ElementaryTypeName","src":"13929:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1463,"initialValue":{"expression":{"id":1461,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"13949:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13956:6:7","memberName":"length","nodeType":"MemberAccess","src":"13949:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13929:33:7"},{"assignments":[1465],"declarations":[{"constant":false,"id":1465,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"13980:13:7","nodeType":"VariableDeclaration","scope":1600,"src":"13972:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"13972:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1468,"initialValue":{"expression":{"id":1466,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"13996:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14007:6:7","memberName":"length","nodeType":"MemberAccess","src":"13996:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13972:41:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1469,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"14061:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1470,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"14073:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14079:6:7","memberName":"length","nodeType":"MemberAccess","src":"14073:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14061:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1473,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"14089:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14105:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14089:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14061:45:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1481,"nodeType":"IfStatement","src":"14057:113:7","trueBody":{"id":1480,"nodeType":"Block","src":"14108:62:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1477,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"14129:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1479,"nodeType":"RevertStatement","src":"14122:37:7"}]}},{"assignments":[1486],"declarations":[{"constant":false,"id":1486,"mutability":"mutable","name":"hashes","nameLocation":"14431:6:7","nodeType":"VariableDeclaration","scope":1600,"src":"14414:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14414:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1485,"nodeType":"ArrayTypeName","src":"14414:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1492,"initialValue":{"arguments":[{"id":1490,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"14454:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14440:13:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1487,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14444:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1488,"nodeType":"ArrayTypeName","src":"14444:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14440:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14414:54:7"},{"assignments":[1494],"declarations":[{"constant":false,"id":1494,"mutability":"mutable","name":"leafPos","nameLocation":"14486:7:7","nodeType":"VariableDeclaration","scope":1600,"src":"14478:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1493,"name":"uint256","nodeType":"ElementaryTypeName","src":"14478:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1496,"initialValue":{"hexValue":"30","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14496:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14478:19:7"},{"assignments":[1498],"declarations":[{"constant":false,"id":1498,"mutability":"mutable","name":"hashPos","nameLocation":"14515:7:7","nodeType":"VariableDeclaration","scope":1600,"src":"14507:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1497,"name":"uint256","nodeType":"ElementaryTypeName","src":"14507:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1500,"initialValue":{"hexValue":"30","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14525:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14507:19:7"},{"assignments":[1502],"declarations":[{"constant":false,"id":1502,"mutability":"mutable","name":"proofPos","nameLocation":"14544:8:7","nodeType":"VariableDeclaration","scope":1600,"src":"14536:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1501,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1504,"initialValue":{"hexValue":"30","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14555:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14536:20:7"},{"body":{"id":1563,"nodeType":"Block","src":"14976:289:7","statements":[{"assignments":[1516],"declarations":[{"constant":false,"id":1516,"mutability":"mutable","name":"a","nameLocation":"14998:1:7","nodeType":"VariableDeclaration","scope":1563,"src":"14990:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1515,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14990:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1529,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1517,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"15002:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1518,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"15012:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15002:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1524,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"15044:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1527,"indexExpression":{"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15051:9:7","subExpression":{"id":1525,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"15051:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15044:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15002:59:7","trueExpression":{"baseExpression":{"id":1520,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"15024:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1523,"indexExpression":{"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15031:9:7","subExpression":{"id":1521,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"15031:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15024:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14990:71:7"},{"assignments":[1531],"declarations":[{"constant":false,"id":1531,"mutability":"mutable","name":"b","nameLocation":"15083:1:7","nodeType":"VariableDeclaration","scope":1563,"src":"15075:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15075:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1553,"initialValue":{"condition":{"baseExpression":{"id":1532,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"15087:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1534,"indexExpression":{"id":1533,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"15098:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15087:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1548,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"15199:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1551,"indexExpression":{"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15205:10:7","subExpression":{"id":1549,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"15205:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15199:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15087:129:7","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1535,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"15120:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1536,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"15130:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15120:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1542,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"15162:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1545,"indexExpression":{"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15169:9:7","subExpression":{"id":1543,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"15169:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15162:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15120:59:7","trueExpression":{"baseExpression":{"id":1538,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"15142:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1541,"indexExpression":{"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15149:9:7","subExpression":{"id":1539,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"15149:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15142:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15119:61:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15075:141:7"},{"expression":{"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1554,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"15230:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1556,"indexExpression":{"id":1555,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"15237:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15230:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1558,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"15249:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1559,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"15252:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1557,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"15242:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15242:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15230:24:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1562,"nodeType":"ExpressionStatement","src":"15230:24:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1509,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"14952:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1510,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"14956:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14952:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1564,"initializationExpression":{"assignments":[1506],"declarations":[{"constant":false,"id":1506,"mutability":"mutable","name":"i","nameLocation":"14945:1:7","nodeType":"VariableDeclaration","scope":1564,"src":"14937:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1505,"name":"uint256","nodeType":"ElementaryTypeName","src":"14937:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1508,"initialValue":{"hexValue":"30","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14949:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14937:13:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14971:3:7","subExpression":{"id":1512,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"14971:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1514,"nodeType":"ExpressionStatement","src":"14971:3:7"},"nodeType":"ForStatement","src":"14932:333:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1565,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"15279:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15295:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15279:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1585,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"15520:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15520:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1597,"nodeType":"Block","src":"15582:40:7","statements":[{"expression":{"baseExpression":{"id":1593,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"15603:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1595,"indexExpression":{"hexValue":"30","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15609:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15603:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1458,"id":1596,"nodeType":"Return","src":"15596:15:7"}]},"id":1598,"nodeType":"IfStatement","src":"15516:106:7","trueBody":{"id":1592,"nodeType":"Block","src":"15535:41:7","statements":[{"expression":{"baseExpression":{"id":1588,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"15556:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1590,"indexExpression":{"hexValue":"30","id":1589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15563:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15556:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1458,"id":1591,"nodeType":"Return","src":"15549:16:7"}]}},"id":1599,"nodeType":"IfStatement","src":"15275:347:7","trueBody":{"id":1584,"nodeType":"Block","src":"15298:212:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1568,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"15316:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1569,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"15328:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15334:6:7","memberName":"length","nodeType":"MemberAccess","src":"15328:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15316:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1576,"nodeType":"IfStatement","src":"15312:100:7","trueBody":{"id":1575,"nodeType":"Block","src":"15342:70:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1572,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"15367:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15367:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1574,"nodeType":"RevertStatement","src":"15360:37:7"}]}},{"id":1583,"nodeType":"UncheckedBlock","src":"15425:75:7","statements":[{"expression":{"baseExpression":{"id":1577,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"15460:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1581,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1578,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"15467:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15483:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15467:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15460:25:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1458,"id":1582,"nodeType":"Return","src":"15453:32:7"}]}]}}]},"documentation":{"id":1435,"nodeType":"StructuredDocumentation","src":"12202:1097:7","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in memory with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":1601,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"13313:17:7","nodeType":"FunctionDefinition","parameters":{"id":1455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"proof","nameLocation":"13357:5:7","nodeType":"VariableDeclaration","scope":1601,"src":"13340:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13340:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1437,"nodeType":"ArrayTypeName","src":"13340:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1441,"mutability":"mutable","name":"proofFlags","nameLocation":"13386:10:7","nodeType":"VariableDeclaration","scope":1601,"src":"13372:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1439,"name":"bool","nodeType":"ElementaryTypeName","src":"13372:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1440,"nodeType":"ArrayTypeName","src":"13372:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1444,"mutability":"mutable","name":"leaves","nameLocation":"13423:6:7","nodeType":"VariableDeclaration","scope":1601,"src":"13406:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1442,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13406:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1443,"nodeType":"ArrayTypeName","src":"13406:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1454,"mutability":"mutable","name":"hasher","nameLocation":"13489:6:7","nodeType":"VariableDeclaration","scope":1601,"src":"13439:56:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1453,"nodeType":"FunctionTypeName","parameterTypes":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1453,"src":"13448:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13448:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1453,"src":"13457:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13457:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13447:18:7"},"returnParameterTypes":{"id":1452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1453,"src":"13480:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1450,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13480:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13479:9:7"},"src":"13439:56:7","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"13330:171:7"},"returnParameters":{"id":1458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"merkleRoot","nameLocation":"13533:10:7","nodeType":"VariableDeclaration","scope":1601,"src":"13525:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13525:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13524:20:7"},"scope":1990,"src":"13304:2324:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1626,"nodeType":"Block","src":"16436:84:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1619,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"16479:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1620,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"16486:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":1621,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"16498:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1618,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[1785,1989],"referencedDeclaration":1785,"src":"16453:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16453:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1623,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"16509:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16453:60:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1617,"id":1625,"nodeType":"Return","src":"16446:67:7"}]},"documentation":{"id":1602,"nodeType":"StructuredDocumentation","src":"15634:603:7","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in calldata with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProofCalldata}."},"id":1627,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"16251:24:7","nodeType":"FunctionDefinition","parameters":{"id":1614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"proof","nameLocation":"16304:5:7","nodeType":"VariableDeclaration","scope":1627,"src":"16285:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1603,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16285:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1604,"nodeType":"ArrayTypeName","src":"16285:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1608,"mutability":"mutable","name":"proofFlags","nameLocation":"16335:10:7","nodeType":"VariableDeclaration","scope":1627,"src":"16319:26:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1606,"name":"bool","nodeType":"ElementaryTypeName","src":"16319:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1607,"nodeType":"ArrayTypeName","src":"16319:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1610,"mutability":"mutable","name":"root","nameLocation":"16363:4:7","nodeType":"VariableDeclaration","scope":1627,"src":"16355:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16355:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1613,"mutability":"mutable","name":"leaves","nameLocation":"16394:6:7","nodeType":"VariableDeclaration","scope":1627,"src":"16377:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16377:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1612,"nodeType":"ArrayTypeName","src":"16377:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"16275:131:7"},"returnParameters":{"id":1617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1627,"src":"16430:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1615,"name":"bool","nodeType":"ElementaryTypeName","src":"16430:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16429:6:7"},"scope":1990,"src":"16242:278:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1784,"nodeType":"Block","src":"17820:2104:7","statements":[{"assignments":[1643],"declarations":[{"constant":false,"id":1643,"mutability":"mutable","name":"leavesLen","nameLocation":"18212:9:7","nodeType":"VariableDeclaration","scope":1784,"src":"18204:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"18204:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1646,"initialValue":{"expression":{"id":1644,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"18224:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18231:6:7","memberName":"length","nodeType":"MemberAccess","src":"18224:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18204:33:7"},{"assignments":[1648],"declarations":[{"constant":false,"id":1648,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"18255:13:7","nodeType":"VariableDeclaration","scope":1784,"src":"18247:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"18247:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1651,"initialValue":{"expression":{"id":1649,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"18271:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18282:6:7","memberName":"length","nodeType":"MemberAccess","src":"18271:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18247:41:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1652,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"18336:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1653,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"18348:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18354:6:7","memberName":"length","nodeType":"MemberAccess","src":"18348:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18336:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1656,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"18364:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18380:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18364:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18336:45:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1664,"nodeType":"IfStatement","src":"18332:113:7","trueBody":{"id":1663,"nodeType":"Block","src":"18383:62:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1660,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"18404:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18404:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1662,"nodeType":"RevertStatement","src":"18397:37:7"}]}},{"assignments":[1669],"declarations":[{"constant":false,"id":1669,"mutability":"mutable","name":"hashes","nameLocation":"18706:6:7","nodeType":"VariableDeclaration","scope":1784,"src":"18689:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18689:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1668,"nodeType":"ArrayTypeName","src":"18689:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1675,"initialValue":{"arguments":[{"id":1673,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"18729:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18715:13:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1670,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18719:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1671,"nodeType":"ArrayTypeName","src":"18719:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18715:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18689:54:7"},{"assignments":[1677],"declarations":[{"constant":false,"id":1677,"mutability":"mutable","name":"leafPos","nameLocation":"18761:7:7","nodeType":"VariableDeclaration","scope":1784,"src":"18753:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1676,"name":"uint256","nodeType":"ElementaryTypeName","src":"18753:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1679,"initialValue":{"hexValue":"30","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18771:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18753:19:7"},{"assignments":[1681],"declarations":[{"constant":false,"id":1681,"mutability":"mutable","name":"hashPos","nameLocation":"18790:7:7","nodeType":"VariableDeclaration","scope":1784,"src":"18782:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"18782:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1683,"initialValue":{"hexValue":"30","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18800:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18782:19:7"},{"assignments":[1685],"declarations":[{"constant":false,"id":1685,"mutability":"mutable","name":"proofPos","nameLocation":"18819:8:7","nodeType":"VariableDeclaration","scope":1784,"src":"18811:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1684,"name":"uint256","nodeType":"ElementaryTypeName","src":"18811:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1687,"initialValue":{"hexValue":"30","id":1686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18830:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18811:20:7"},{"body":{"id":1747,"nodeType":"Block","src":"19251:310:7","statements":[{"assignments":[1699],"declarations":[{"constant":false,"id":1699,"mutability":"mutable","name":"a","nameLocation":"19273:1:7","nodeType":"VariableDeclaration","scope":1747,"src":"19265:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1698,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19265:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1712,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1700,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"19277:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1701,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"19287:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19277:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1707,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"19319:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1710,"indexExpression":{"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19326:9:7","subExpression":{"id":1708,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"19326:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19319:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19277:59:7","trueExpression":{"baseExpression":{"id":1703,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"19299:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1706,"indexExpression":{"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19306:9:7","subExpression":{"id":1704,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"19306:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19299:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19265:71:7"},{"assignments":[1714],"declarations":[{"constant":false,"id":1714,"mutability":"mutable","name":"b","nameLocation":"19358:1:7","nodeType":"VariableDeclaration","scope":1747,"src":"19350:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19350:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1736,"initialValue":{"condition":{"baseExpression":{"id":1715,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"19362:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1717,"indexExpression":{"id":1716,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"19373:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19362:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1731,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"19474:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1734,"indexExpression":{"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19480:10:7","subExpression":{"id":1732,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"19480:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19474:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19362:129:7","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1718,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"19395:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1719,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"19405:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19395:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1725,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"19437:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1728,"indexExpression":{"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19444:9:7","subExpression":{"id":1726,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"19444:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19437:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19395:59:7","trueExpression":{"baseExpression":{"id":1721,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"19417:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1724,"indexExpression":{"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19424:9:7","subExpression":{"id":1722,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"19424:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19417:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1730,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19394:61:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19350:141:7"},{"expression":{"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1737,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"19505:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1739,"indexExpression":{"id":1738,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"19512:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19505:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1742,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"19545:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1743,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"19548:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1740,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"19517:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$917_$","typeString":"type(library Hashes)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19524:20:7","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":904,"src":"19517:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19517:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"19505:45:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1746,"nodeType":"ExpressionStatement","src":"19505:45:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1692,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"19227:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1693,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"19231:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19227:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1748,"initializationExpression":{"assignments":[1689],"declarations":[{"constant":false,"id":1689,"mutability":"mutable","name":"i","nameLocation":"19220:1:7","nodeType":"VariableDeclaration","scope":1748,"src":"19212:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1688,"name":"uint256","nodeType":"ElementaryTypeName","src":"19212:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1691,"initialValue":{"hexValue":"30","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19224:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19212:13:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19246:3:7","subExpression":{"id":1695,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"19246:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1697,"nodeType":"ExpressionStatement","src":"19246:3:7"},"nodeType":"ForStatement","src":"19207:354:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1749,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"19575:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19591:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19575:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1769,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"19816:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19828:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19816:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1781,"nodeType":"Block","src":"19878:40:7","statements":[{"expression":{"baseExpression":{"id":1777,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"19899:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1779,"indexExpression":{"hexValue":"30","id":1778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19905:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19899:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1641,"id":1780,"nodeType":"Return","src":"19892:15:7"}]},"id":1782,"nodeType":"IfStatement","src":"19812:106:7","trueBody":{"id":1776,"nodeType":"Block","src":"19831:41:7","statements":[{"expression":{"baseExpression":{"id":1772,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"19852:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1774,"indexExpression":{"hexValue":"30","id":1773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19859:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19852:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1641,"id":1775,"nodeType":"Return","src":"19845:16:7"}]}},"id":1783,"nodeType":"IfStatement","src":"19571:347:7","trueBody":{"id":1768,"nodeType":"Block","src":"19594:212:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1752,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"19612:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1753,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"19624:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19630:6:7","memberName":"length","nodeType":"MemberAccess","src":"19624:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19612:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1760,"nodeType":"IfStatement","src":"19608:100:7","trueBody":{"id":1759,"nodeType":"Block","src":"19638:70:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1756,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"19663:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19663:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1758,"nodeType":"RevertStatement","src":"19656:37:7"}]}},{"id":1767,"nodeType":"UncheckedBlock","src":"19721:75:7","statements":[{"expression":{"baseExpression":{"id":1761,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"19756:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1765,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1762,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"19763:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19779:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19763:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19756:25:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1641,"id":1766,"nodeType":"Return","src":"19749:32:7"}]}]}}]},"documentation":{"id":1628,"nodeType":"StructuredDocumentation","src":"16526:1102:7","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in calldata with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":1785,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"17642:25:7","nodeType":"FunctionDefinition","parameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"proof","nameLocation":"17696:5:7","nodeType":"VariableDeclaration","scope":1785,"src":"17677:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1629,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17677:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1630,"nodeType":"ArrayTypeName","src":"17677:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1634,"mutability":"mutable","name":"proofFlags","nameLocation":"17727:10:7","nodeType":"VariableDeclaration","scope":1785,"src":"17711:26:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1632,"name":"bool","nodeType":"ElementaryTypeName","src":"17711:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1633,"nodeType":"ArrayTypeName","src":"17711:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1637,"mutability":"mutable","name":"leaves","nameLocation":"17764:6:7","nodeType":"VariableDeclaration","scope":1785,"src":"17747:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1635,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17747:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1636,"nodeType":"ArrayTypeName","src":"17747:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17667:109:7"},"returnParameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"merkleRoot","nameLocation":"17808:10:7","nodeType":"VariableDeclaration","scope":1785,"src":"17800:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17800:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17799:20:7"},"scope":1990,"src":"17633:2291:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1821,"nodeType":"Block","src":"20795:92:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1813,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"20838:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1814,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"20845:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":1815,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"20857:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1816,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"20865:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":1812,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[1785,1989],"referencedDeclaration":1989,"src":"20812:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20812:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1818,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"20876:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"20812:68:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1811,"id":1820,"nodeType":"Return","src":"20805:75:7"}]},"documentation":{"id":1786,"nodeType":"StructuredDocumentation","src":"19930:600:7","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in calldata with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProofCalldata}."},"id":1822,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"20544:24:7","nodeType":"FunctionDefinition","parameters":{"id":1808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1789,"mutability":"mutable","name":"proof","nameLocation":"20597:5:7","nodeType":"VariableDeclaration","scope":1822,"src":"20578:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1787,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20578:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1788,"nodeType":"ArrayTypeName","src":"20578:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1792,"mutability":"mutable","name":"proofFlags","nameLocation":"20628:10:7","nodeType":"VariableDeclaration","scope":1822,"src":"20612:26:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1790,"name":"bool","nodeType":"ElementaryTypeName","src":"20612:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1791,"nodeType":"ArrayTypeName","src":"20612:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1794,"mutability":"mutable","name":"root","nameLocation":"20656:4:7","nodeType":"VariableDeclaration","scope":1822,"src":"20648:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1793,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20648:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1797,"mutability":"mutable","name":"leaves","nameLocation":"20687:6:7","nodeType":"VariableDeclaration","scope":1822,"src":"20670:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20670:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1796,"nodeType":"ArrayTypeName","src":"20670:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1807,"mutability":"mutable","name":"hasher","nameLocation":"20753:6:7","nodeType":"VariableDeclaration","scope":1822,"src":"20703:56:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1806,"nodeType":"FunctionTypeName","parameterTypes":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1806,"src":"20712:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1798,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20712:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1806,"src":"20721:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20721:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20711:18:7"},"returnParameterTypes":{"id":1805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1806,"src":"20744:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20744:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20743:9:7"},"src":"20703:56:7","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"20568:197:7"},"returnParameters":{"id":1811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1822,"src":"20789:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1809,"name":"bool","nodeType":"ElementaryTypeName","src":"20789:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20788:6:7"},"scope":1990,"src":"20535:352:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1988,"nodeType":"Block","src":"22250:2083:7","statements":[{"assignments":[1848],"declarations":[{"constant":false,"id":1848,"mutability":"mutable","name":"leavesLen","nameLocation":"22642:9:7","nodeType":"VariableDeclaration","scope":1988,"src":"22634:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1847,"name":"uint256","nodeType":"ElementaryTypeName","src":"22634:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1851,"initialValue":{"expression":{"id":1849,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"22654:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22661:6:7","memberName":"length","nodeType":"MemberAccess","src":"22654:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22634:33:7"},{"assignments":[1853],"declarations":[{"constant":false,"id":1853,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"22685:13:7","nodeType":"VariableDeclaration","scope":1988,"src":"22677:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1852,"name":"uint256","nodeType":"ElementaryTypeName","src":"22677:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1856,"initialValue":{"expression":{"id":1854,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"22701:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22712:6:7","memberName":"length","nodeType":"MemberAccess","src":"22701:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22677:41:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1857,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"22766:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1858,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"22778:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22784:6:7","memberName":"length","nodeType":"MemberAccess","src":"22778:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22766:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1861,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"22794:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22810:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22794:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22766:45:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1869,"nodeType":"IfStatement","src":"22762:113:7","trueBody":{"id":1868,"nodeType":"Block","src":"22813:62:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1865,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"22834:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22834:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1867,"nodeType":"RevertStatement","src":"22827:37:7"}]}},{"assignments":[1874],"declarations":[{"constant":false,"id":1874,"mutability":"mutable","name":"hashes","nameLocation":"23136:6:7","nodeType":"VariableDeclaration","scope":1988,"src":"23119:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23119:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1873,"nodeType":"ArrayTypeName","src":"23119:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1880,"initialValue":{"arguments":[{"id":1878,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"23159:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23145:13:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23149:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1876,"nodeType":"ArrayTypeName","src":"23149:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23145:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"23119:54:7"},{"assignments":[1882],"declarations":[{"constant":false,"id":1882,"mutability":"mutable","name":"leafPos","nameLocation":"23191:7:7","nodeType":"VariableDeclaration","scope":1988,"src":"23183:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1881,"name":"uint256","nodeType":"ElementaryTypeName","src":"23183:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1884,"initialValue":{"hexValue":"30","id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23201:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23183:19:7"},{"assignments":[1886],"declarations":[{"constant":false,"id":1886,"mutability":"mutable","name":"hashPos","nameLocation":"23220:7:7","nodeType":"VariableDeclaration","scope":1988,"src":"23212:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1885,"name":"uint256","nodeType":"ElementaryTypeName","src":"23212:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1888,"initialValue":{"hexValue":"30","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23230:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23212:19:7"},{"assignments":[1890],"declarations":[{"constant":false,"id":1890,"mutability":"mutable","name":"proofPos","nameLocation":"23249:8:7","nodeType":"VariableDeclaration","scope":1988,"src":"23241:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1889,"name":"uint256","nodeType":"ElementaryTypeName","src":"23241:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1892,"initialValue":{"hexValue":"30","id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23260:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23241:20:7"},{"body":{"id":1951,"nodeType":"Block","src":"23681:289:7","statements":[{"assignments":[1904],"declarations":[{"constant":false,"id":1904,"mutability":"mutable","name":"a","nameLocation":"23703:1:7","nodeType":"VariableDeclaration","scope":1951,"src":"23695:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1903,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23695:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1917,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1905,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"23707:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1906,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"23717:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23707:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1912,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"23749:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1915,"indexExpression":{"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23756:9:7","subExpression":{"id":1913,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"23756:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23749:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23707:59:7","trueExpression":{"baseExpression":{"id":1908,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"23729:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1911,"indexExpression":{"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23736:9:7","subExpression":{"id":1909,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"23736:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23729:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23695:71:7"},{"assignments":[1919],"declarations":[{"constant":false,"id":1919,"mutability":"mutable","name":"b","nameLocation":"23788:1:7","nodeType":"VariableDeclaration","scope":1951,"src":"23780:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1918,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23780:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1941,"initialValue":{"condition":{"baseExpression":{"id":1920,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"23792:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1922,"indexExpression":{"id":1921,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"23803:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23792:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1936,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"23904:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1939,"indexExpression":{"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23910:10:7","subExpression":{"id":1937,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"23910:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23904:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23792:129:7","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1923,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"23825:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1924,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"23835:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23825:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1930,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"23867:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1933,"indexExpression":{"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23874:9:7","subExpression":{"id":1931,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"23874:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23867:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23825:59:7","trueExpression":{"baseExpression":{"id":1926,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"23847:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1929,"indexExpression":{"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23854:9:7","subExpression":{"id":1927,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"23854:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23847:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1935,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23824:61:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23780:141:7"},{"expression":{"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1942,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"23935:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1944,"indexExpression":{"id":1943,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"23942:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23935:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1946,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"23954:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1947,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"23957:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1945,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"23947:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23947:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"23935:24:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1950,"nodeType":"ExpressionStatement","src":"23935:24:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1897,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"23657:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1898,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"23661:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23657:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1952,"initializationExpression":{"assignments":[1894],"declarations":[{"constant":false,"id":1894,"mutability":"mutable","name":"i","nameLocation":"23650:1:7","nodeType":"VariableDeclaration","scope":1952,"src":"23642:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1893,"name":"uint256","nodeType":"ElementaryTypeName","src":"23642:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1896,"initialValue":{"hexValue":"30","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23654:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23642:13:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23676:3:7","subExpression":{"id":1900,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"23676:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1902,"nodeType":"ExpressionStatement","src":"23676:3:7"},"nodeType":"ForStatement","src":"23637:333:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1953,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"23984:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24000:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23984:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1973,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"24225:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24237:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24225:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1985,"nodeType":"Block","src":"24287:40:7","statements":[{"expression":{"baseExpression":{"id":1981,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"24308:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1983,"indexExpression":{"hexValue":"30","id":1982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24314:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24308:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1846,"id":1984,"nodeType":"Return","src":"24301:15:7"}]},"id":1986,"nodeType":"IfStatement","src":"24221:106:7","trueBody":{"id":1980,"nodeType":"Block","src":"24240:41:7","statements":[{"expression":{"baseExpression":{"id":1976,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"24261:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1978,"indexExpression":{"hexValue":"30","id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24268:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24261:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1846,"id":1979,"nodeType":"Return","src":"24254:16:7"}]}},"id":1987,"nodeType":"IfStatement","src":"23980:347:7","trueBody":{"id":1972,"nodeType":"Block","src":"24003:212:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1956,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"24021:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1957,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"24033:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24039:6:7","memberName":"length","nodeType":"MemberAccess","src":"24033:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24021:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1964,"nodeType":"IfStatement","src":"24017:100:7","trueBody":{"id":1963,"nodeType":"Block","src":"24047:70:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1960,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"24072:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24072:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1962,"nodeType":"RevertStatement","src":"24065:37:7"}]}},{"id":1971,"nodeType":"UncheckedBlock","src":"24130:75:7","statements":[{"expression":{"baseExpression":{"id":1965,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"24165:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1969,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1966,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"24172:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24188:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24172:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24165:25:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1846,"id":1970,"nodeType":"Return","src":"24158:32:7"}]}]}}]},"documentation":{"id":1823,"nodeType":"StructuredDocumentation","src":"20893:1099:7","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in calldata with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":1989,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"22006:25:7","nodeType":"FunctionDefinition","parameters":{"id":1843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"proof","nameLocation":"22060:5:7","nodeType":"VariableDeclaration","scope":1989,"src":"22041:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22041:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1825,"nodeType":"ArrayTypeName","src":"22041:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1829,"mutability":"mutable","name":"proofFlags","nameLocation":"22091:10:7","nodeType":"VariableDeclaration","scope":1989,"src":"22075:26:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1827,"name":"bool","nodeType":"ElementaryTypeName","src":"22075:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1828,"nodeType":"ArrayTypeName","src":"22075:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"leaves","nameLocation":"22128:6:7","nodeType":"VariableDeclaration","scope":1989,"src":"22111:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1830,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22111:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1831,"nodeType":"ArrayTypeName","src":"22111:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1842,"mutability":"mutable","name":"hasher","nameLocation":"22194:6:7","nodeType":"VariableDeclaration","scope":1989,"src":"22144:56:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1841,"nodeType":"FunctionTypeName","parameterTypes":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1841,"src":"22153:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1833,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22153:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1841,"src":"22162:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22162:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22152:18:7"},"returnParameterTypes":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1841,"src":"22185:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1838,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22185:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22184:9:7"},"src":"22144:56:7","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"22031:175:7"},"returnParameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1845,"mutability":"mutable","name":"merkleRoot","nameLocation":"22238:10:7","nodeType":"VariableDeclaration","scope":1989,"src":"22230:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22230:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22229:20:7"},"scope":1990,"src":"21997:2336:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1991,"src":"1353:22982:7","usedErrors":[925],"usedEvents":[]}],"src":"206:24130:7"},"id":7},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2002]},"id":2003,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1992,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1993,"nodeType":"StructuredDocumentation","src":"141:280:8","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2002,"linearizedBaseContracts":[2002],"name":"IERC165","nameLocation":"432:7:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1994,"nodeType":"StructuredDocumentation","src":"446:340:8","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2001,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:8","nodeType":"FunctionDefinition","parameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:8","nodeType":"VariableDeclaration","scope":2001,"src":"818:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1995,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:8"},"returnParameters":{"id":2000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2001,"src":"861:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1998,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:8"},"scope":2002,"src":"791:76:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2003,"src":"422:447:8","usedErrors":[],"usedEvents":[]}],"src":"115:755:8"},"id":8},"contracts/QuizTypes.sol":{"ast":{"absolutePath":"contracts/QuizTypes.sol","exportedSymbols":{"LibAppStorage":[3508],"Question":[2042],"Quiz":[2059]},"id":2060,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2004,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:9"},{"absolutePath":"contracts/libraries/LibAppStorage.sol","file":"./libraries/LibAppStorage.sol","id":2006,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2060,"sourceUnit":3509,"src":"61:62:9","symbolAliases":[{"foreign":{"id":2005,"name":"LibAppStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"70:13:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"Question","id":2042,"members":[{"constant":false,"id":2008,"mutability":"mutable","name":"questionText","nameLocation":"237:12:9","nodeType":"VariableDeclaration","scope":2042,"src":"230:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2007,"name":"string","nodeType":"ElementaryTypeName","src":"230:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2011,"mutability":"mutable","name":"options","nameLocation":"265:7:9","nodeType":"VariableDeclaration","scope":2042,"src":"256:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2009,"name":"string","nodeType":"ElementaryTypeName","src":"256:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2010,"nodeType":"ArrayTypeName","src":"256:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2013,"mutability":"mutable","name":"correctAnswerIndex","nameLocation":"285:18:9","nodeType":"VariableDeclaration","scope":2042,"src":"279:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2012,"name":"uint8","nodeType":"ElementaryTypeName","src":"279:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2015,"mutability":"mutable","name":"correctAnswerHash","nameLocation":"318:17:9","nodeType":"VariableDeclaration","scope":2042,"src":"310:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2014,"name":"bytes32","nodeType":"ElementaryTypeName","src":"310:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2017,"mutability":"mutable","name":"hintHash","nameLocation":"350:8:9","nodeType":"VariableDeclaration","scope":2042,"src":"342:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2016,"name":"bytes32","nodeType":"ElementaryTypeName","src":"342:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2019,"mutability":"mutable","name":"questionCreator","nameLocation":"373:15:9","nodeType":"VariableDeclaration","scope":2042,"src":"365:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2018,"name":"address","nodeType":"ElementaryTypeName","src":"365:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2021,"mutability":"mutable","name":"difficultyLevel","nameLocation":"403:15:9","nodeType":"VariableDeclaration","scope":2042,"src":"395:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2020,"name":"uint256","nodeType":"ElementaryTypeName","src":"395:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2023,"mutability":"mutable","name":"baseRewardAmount","nameLocation":"433:16:9","nodeType":"VariableDeclaration","scope":2042,"src":"425:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2022,"name":"uint256","nodeType":"ElementaryTypeName","src":"425:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2025,"mutability":"mutable","name":"isClosed","nameLocation":"461:8:9","nodeType":"VariableDeclaration","scope":2042,"src":"456:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2024,"name":"bool","nodeType":"ElementaryTypeName","src":"456:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2028,"mutability":"mutable","name":"mode","nameLocation":"503:4:9","nodeType":"VariableDeclaration","scope":2042,"src":"476:31:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_QuestionMode_$3416","typeString":"enum LibAppStorage.QuestionMode"},"typeName":{"id":2027,"nodeType":"UserDefinedTypeName","pathNode":{"id":2026,"name":"LibAppStorage.QuestionMode","nameLocations":["476:13:9","490:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":3416,"src":"476:26:9"},"referencedDeclaration":3416,"src":"476:26:9","typeDescriptions":{"typeIdentifier":"t_enum$_QuestionMode_$3416","typeString":"enum LibAppStorage.QuestionMode"}},"visibility":"internal"},{"constant":false,"id":2030,"mutability":"mutable","name":"blockCreationTime","nameLocation":"522:17:9","nodeType":"VariableDeclaration","scope":2042,"src":"514:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2029,"name":"uint256","nodeType":"ElementaryTypeName","src":"514:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2032,"mutability":"mutable","name":"firstCorrectAnswerTime","nameLocation":"554:22:9","nodeType":"VariableDeclaration","scope":2042,"src":"546:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"546:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2034,"mutability":"mutable","name":"firstSolverAddress","nameLocation":"591:18:9","nodeType":"VariableDeclaration","scope":2042,"src":"583:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2033,"name":"address","nodeType":"ElementaryTypeName","src":"583:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2037,"mutability":"mutable","name":"poolCorrectSolvers","nameLocation":"626:18:9","nodeType":"VariableDeclaration","scope":2042,"src":"616:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2035,"name":"address","nodeType":"ElementaryTypeName","src":"616:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2036,"nodeType":"ArrayTypeName","src":"616:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2041,"mutability":"mutable","name":"lastAnswerDay","nameLocation":"679:13:9","nodeType":"VariableDeclaration","scope":2042,"src":"651:41:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2040,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2038,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"651:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2039,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Question","nameLocation":"214:8:9","nodeType":"StructDefinition","scope":2060,"src":"207:489:9","visibility":"public"},{"canonicalName":"Quiz","id":2059,"members":[{"constant":false,"id":2044,"mutability":"mutable","name":"name","nameLocation":"726:4:9","nodeType":"VariableDeclaration","scope":2059,"src":"719:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2043,"name":"string","nodeType":"ElementaryTypeName","src":"719:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2046,"mutability":"mutable","name":"creator","nameLocation":"745:7:9","nodeType":"VariableDeclaration","scope":2059,"src":"737:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2045,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2048,"mutability":"mutable","name":"rewardAmount","nameLocation":"767:12:9","nodeType":"VariableDeclaration","scope":2059,"src":"759:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2047,"name":"uint256","nodeType":"ElementaryTypeName","src":"759:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2050,"mutability":"mutable","name":"totalQuestions","nameLocation":"794:14:9","nodeType":"VariableDeclaration","scope":2059,"src":"786:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2049,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2052,"mutability":"mutable","name":"maxParticipants","nameLocation":"823:15:9","nodeType":"VariableDeclaration","scope":2059,"src":"815:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2051,"name":"uint256","nodeType":"ElementaryTypeName","src":"815:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2054,"mutability":"mutable","name":"isActive","nameLocation":"850:8:9","nodeType":"VariableDeclaration","scope":2059,"src":"845:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2053,"name":"bool","nodeType":"ElementaryTypeName","src":"845:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2058,"mutability":"mutable","name":"questionIds","nameLocation":"1022:11:9","nodeType":"VariableDeclaration","scope":2059,"src":"994:39:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":2057,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2055,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"994:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2056,"name":"uint256","nodeType":"ElementaryTypeName","src":"1013:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Quiz","nameLocation":"707:4:9","nodeType":"StructDefinition","scope":2060,"src":"700:337:9","visibility":"public"}],"src":"33:1006:9"},"id":9},"contracts/facets/MerkleFacet.sol":{"ast":{"absolutePath":"contracts/facets/MerkleFacet.sol","exportedSymbols":{"Hashes":[917],"LibMerkleStorage":[3537],"MerkleFacet":[2188],"MerkleProof":[1990]},"id":2189,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2061,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:10"},{"absolutePath":"contracts/libraries/LibMerkleStorage.sol","file":"../libraries/LibMerkleStorage.sol","id":2062,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2189,"sourceUnit":3538,"src":"61:43:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":2063,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2189,"sourceUnit":1991,"src":"106:68:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleFacet","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2188,"linearizedBaseContracts":[2188],"name":"MerkleFacet","nameLocation":"187:11:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"b3a8f3e59050d3f97f1bf1b668c8216c654869aa24e3e03cd8891dc68b7db097","id":2069,"name":"MerkleRootSubmitted","nameLocation":"212:19:10","nodeType":"EventDefinition","parameters":{"id":2068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2065,"indexed":true,"mutability":"mutable","name":"quizId","nameLocation":"248:6:10","nodeType":"VariableDeclaration","scope":2069,"src":"232:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2064,"name":"uint256","nodeType":"ElementaryTypeName","src":"232:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2067,"indexed":false,"mutability":"mutable","name":"root","nameLocation":"264:4:10","nodeType":"VariableDeclaration","scope":2069,"src":"256:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"256:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"231:38:10"},"src":"206:64:10"},{"body":{"id":2125,"nodeType":"Block","src":"551:302:10","statements":[{"assignments":[2084],"declarations":[{"constant":false,"id":2084,"mutability":"mutable","name":"ms","nameLocation":"601:2:10","nodeType":"VariableDeclaration","scope":2125,"src":"562:41:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleStorage_$3524_storage_ptr","typeString":"struct LibMerkleStorage.MerkleStorage"},"typeName":{"id":2083,"nodeType":"UserDefinedTypeName","pathNode":{"id":2082,"name":"LibMerkleStorage.MerkleStorage","nameLocations":["562:16:10","579:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3524,"src":"562:30:10"},"referencedDeclaration":3524,"src":"562:30:10","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleStorage_$3524_storage_ptr","typeString":"struct LibMerkleStorage.MerkleStorage"}},"visibility":"internal"}],"id":2088,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2085,"name":"LibMerkleStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"606:16:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibMerkleStorage_$3537_$","typeString":"type(library LibMerkleStorage)"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"623:13:10","memberName":"merkleStorage","nodeType":"MemberAccess","referencedDeclaration":3536,"src":"606:30:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_MerkleStorage_$3524_storage_ptr_$","typeString":"function () pure returns (struct LibMerkleStorage.MerkleStorage storage pointer)"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"606:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MerkleStorage_$3524_storage_ptr","typeString":"struct LibMerkleStorage.MerkleStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"562:76:10"},{"expression":{"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2089,"name":"ms","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"649:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleStorage_$3524_storage_ptr","typeString":"struct LibMerkleStorage.MerkleStorage storage pointer"}},"id":2092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"652:9:10","memberName":"quizRoots","nodeType":"MemberAccess","referencedDeclaration":3519,"src":"649:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":2093,"indexExpression":{"id":2091,"name":"quizId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"662:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"649:20:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2094,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"672:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"649:27:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2096,"nodeType":"ExpressionStatement","src":"649:27:10"},{"body":{"id":2118,"nodeType":"Block","src":"733:62:10","statements":[{"expression":{"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2108,"name":"ms","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"748:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleStorage_$3524_storage_ptr","typeString":"struct LibMerkleStorage.MerkleStorage storage pointer"}},"id":2113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"751:12:10","memberName":"leafToQuizId","nodeType":"MemberAccess","referencedDeclaration":3523,"src":"748:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2114,"indexExpression":{"baseExpression":{"id":2110,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"764:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":2112,"indexExpression":{"id":2111,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"771:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"764:9:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"748:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2115,"name":"quizId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"777:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"748:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2117,"nodeType":"ExpressionStatement","src":"748:35:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2101,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"709:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2102,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"713:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"720:6:10","memberName":"length","nodeType":"MemberAccess","src":"713:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"709:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2119,"initializationExpression":{"assignments":[2098],"declarations":[{"constant":false,"id":2098,"mutability":"mutable","name":"i","nameLocation":"702:1:10","nodeType":"VariableDeclaration","scope":2119,"src":"694:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2097,"name":"uint256","nodeType":"ElementaryTypeName","src":"694:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2100,"initialValue":{"hexValue":"30","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"694:13:10"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"728:3:10","subExpression":{"id":2105,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"728:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2107,"nodeType":"ExpressionStatement","src":"728:3:10"},"nodeType":"ForStatement","src":"689:106:10"},{"eventCall":{"arguments":[{"id":2121,"name":"quizId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"832:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2122,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"840:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2120,"name":"MerkleRootSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"812:19:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,bytes32)"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"812:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2124,"nodeType":"EmitStatement","src":"807:38:10"}]},"documentation":{"id":2070,"nodeType":"StructuredDocumentation","src":"278:175:10","text":"@notice Submit Merkle root for a quiz\n @param quizId The quiz ID\n @param root The Merkle root\n @param leaves The leaves for mapping leaf → quizId"},"functionSelector":"ebe6d123","id":2126,"implemented":true,"kind":"function","modifiers":[],"name":"submitMerkleRoot","nameLocation":"468:16:10","nodeType":"FunctionDefinition","parameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2072,"mutability":"mutable","name":"quizId","nameLocation":"493:6:10","nodeType":"VariableDeclaration","scope":2126,"src":"485:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2071,"name":"uint256","nodeType":"ElementaryTypeName","src":"485:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2074,"mutability":"mutable","name":"root","nameLocation":"509:4:10","nodeType":"VariableDeclaration","scope":2126,"src":"501:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2073,"name":"bytes32","nodeType":"ElementaryTypeName","src":"501:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2077,"mutability":"mutable","name":"leaves","nameLocation":"534:6:10","nodeType":"VariableDeclaration","scope":2126,"src":"515:25:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"515:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2076,"nodeType":"ArrayTypeName","src":"515:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"484:57:10"},"returnParameters":{"id":2079,"nodeType":"ParameterList","parameters":[],"src":"551:0:10"},"scope":2188,"src":"459:394:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2170,"nodeType":"Block","src":"1006:282:10","statements":[{"assignments":[2141],"declarations":[{"constant":false,"id":2141,"mutability":"mutable","name":"ms","nameLocation":"1056:2:10","nodeType":"VariableDeclaration","scope":2170,"src":"1017:41:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleStorage_$3524_storage_ptr","typeString":"struct LibMerkleStorage.MerkleStorage"},"typeName":{"id":2140,"nodeType":"UserDefinedTypeName","pathNode":{"id":2139,"name":"LibMerkleStorage.MerkleStorage","nameLocations":["1017:16:10","1034:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3524,"src":"1017:30:10"},"referencedDeclaration":3524,"src":"1017:30:10","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleStorage_$3524_storage_ptr","typeString":"struct LibMerkleStorage.MerkleStorage"}},"visibility":"internal"}],"id":2145,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2142,"name":"LibMerkleStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"1061:16:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibMerkleStorage_$3537_$","typeString":"type(library LibMerkleStorage)"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1078:13:10","memberName":"merkleStorage","nodeType":"MemberAccess","referencedDeclaration":3536,"src":"1061:30:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_MerkleStorage_$3524_storage_ptr_$","typeString":"function () pure returns (struct LibMerkleStorage.MerkleStorage storage pointer)"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1061:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MerkleStorage_$3524_storage_ptr","typeString":"struct LibMerkleStorage.MerkleStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1017:76:10"},{"assignments":[2147],"declarations":[{"constant":false,"id":2147,"mutability":"mutable","name":"quizId","nameLocation":"1112:6:10","nodeType":"VariableDeclaration","scope":2170,"src":"1104:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2146,"name":"uint256","nodeType":"ElementaryTypeName","src":"1104:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2152,"initialValue":{"baseExpression":{"expression":{"id":2148,"name":"ms","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"1121:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleStorage_$3524_storage_ptr","typeString":"struct LibMerkleStorage.MerkleStorage storage pointer"}},"id":2149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1124:12:10","memberName":"leafToQuizId","nodeType":"MemberAccess","referencedDeclaration":3523,"src":"1121:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2151,"indexExpression":{"id":2150,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"1137:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1121:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1104:38:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2154,"name":"quizId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"1161:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1171:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1161:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6546616365743a204c656166206e6f742072656769737465726564","id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1174:34:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_4fba756e5e41d064be1c20338dda18ecf6d845e6e408c7ddd52b2150f746c90a","typeString":"literal_string \"MerkleFacet: Leaf not registered\""},"value":"MerkleFacet: Leaf not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4fba756e5e41d064be1c20338dda18ecf6d845e6e408c7ddd52b2150f746c90a","typeString":"literal_string \"MerkleFacet: Leaf not registered\""}],"id":2153,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1153:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1153:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2159,"nodeType":"ExpressionStatement","src":"1153:56:10"},{"expression":{"arguments":[{"id":2162,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"1246:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"baseExpression":{"expression":{"id":2163,"name":"ms","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"1253:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleStorage_$3524_storage_ptr","typeString":"struct LibMerkleStorage.MerkleStorage storage pointer"}},"id":2164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1256:9:10","memberName":"quizRoots","nodeType":"MemberAccess","referencedDeclaration":3519,"src":"1253:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":2166,"indexExpression":{"id":2165,"name":"quizId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"1266:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1253:20:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2167,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"1275:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2160,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"1227:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$1990_$","typeString":"type(library MerkleProof)"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1239:6:10","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":946,"src":"1227:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1227:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2136,"id":2169,"nodeType":"Return","src":"1220:60:10"}]},"documentation":{"id":2127,"nodeType":"StructuredDocumentation","src":"861:50:10","text":"@notice Verify leaf is valid under stored root"},"functionSelector":"8350d44f","id":2171,"implemented":true,"kind":"function","modifiers":[],"name":"verifyQuiz","nameLocation":"926:10:10","nodeType":"FunctionDefinition","parameters":{"id":2133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"leaf","nameLocation":"945:4:10","nodeType":"VariableDeclaration","scope":2171,"src":"937:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"937:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2132,"mutability":"mutable","name":"proof","nameLocation":"970:5:10","nodeType":"VariableDeclaration","scope":2171,"src":"951:24:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"951:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2131,"nodeType":"ArrayTypeName","src":"951:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"936:40:10"},"returnParameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2171,"src":"1000:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2134,"name":"bool","nodeType":"ElementaryTypeName","src":"1000:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"999:6:10"},"scope":2188,"src":"917:371:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2186,"nodeType":"Block","src":"1409:77:10","statements":[{"expression":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2179,"name":"LibMerkleStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"1427:16:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibMerkleStorage_$3537_$","typeString":"type(library LibMerkleStorage)"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1444:13:10","memberName":"merkleStorage","nodeType":"MemberAccess","referencedDeclaration":3536,"src":"1427:30:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_MerkleStorage_$3524_storage_ptr_$","typeString":"function () pure returns (struct LibMerkleStorage.MerkleStorage storage pointer)"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1427:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MerkleStorage_$3524_storage_ptr","typeString":"struct LibMerkleStorage.MerkleStorage storage pointer"}},"id":2182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1460:12:10","memberName":"leafToQuizId","nodeType":"MemberAccess","referencedDeclaration":3523,"src":"1427:45:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2184,"indexExpression":{"id":2183,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"1473:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1427:51:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2178,"id":2185,"nodeType":"Return","src":"1420:58:10"}]},"documentation":{"id":2172,"nodeType":"StructuredDocumentation","src":"1296:34:10","text":"@notice Get quizId from a leaf"},"functionSelector":"07d38f3f","id":2187,"implemented":true,"kind":"function","modifiers":[],"name":"getQuizIdFromLeaf","nameLocation":"1345:17:10","nodeType":"FunctionDefinition","parameters":{"id":2175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"mutability":"mutable","name":"leaf","nameLocation":"1371:4:10","nodeType":"VariableDeclaration","scope":2187,"src":"1363:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1363:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1362:14:10"},"returnParameters":{"id":2178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2187,"src":"1400:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2176,"name":"uint256","nodeType":"ElementaryTypeName","src":"1400:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:9:10"},"scope":2188,"src":"1336:150:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2189,"src":"178:1311:10","usedErrors":[],"usedEvents":[2069]}],"src":"33:1458:10"},"id":10},"contracts/facets/QuizGameModeFacet.sol":{"ast":{"absolutePath":"contracts/facets/QuizGameModeFacet.sol","exportedSymbols":{"AccessControlUpgradeable":[362],"IMerkleFacet":[3260],"IPoolManager":[3285],"IQuizCoin":[3306],"IQuizGameEvents":[3391],"IQuizGameReward":[3403],"LibAppStorage":[3508],"Question":[2042],"QuizGameModeFacet":[2964]},"id":2965,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2190,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:11"},{"absolutePath":"contracts/libraries/LibAppStorage.sol","file":"../libraries/LibAppStorage.sol","id":2192,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2965,"sourceUnit":3509,"src":"61:63:11","symbolAliases":[{"foreign":{"id":2191,"name":"LibAppStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"70:13:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","id":2194,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2965,"sourceUnit":363,"src":"126:115:11","symbolAliases":[{"foreign":{"id":2193,"name":"AccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"135:24:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPoolManager.sol","file":"../interfaces/IPoolManager.sol","id":2196,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2965,"sourceUnit":3286,"src":"243:62:11","symbolAliases":[{"foreign":{"id":2195,"name":"IPoolManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"252:12:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IQuizGameEvents.sol","file":"../interfaces/IQuizGameEvents.sol","id":2198,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2965,"sourceUnit":3392,"src":"307:68:11","symbolAliases":[{"foreign":{"id":2197,"name":"IQuizGameEvents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"316:15:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IQuizCoin.sol","file":"../interfaces/IQuizCoin.sol","id":2200,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2965,"sourceUnit":3307,"src":"377:56:11","symbolAliases":[{"foreign":{"id":2199,"name":"IQuizCoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"386:9:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IQuizGameReward.sol","file":"../interfaces/IQuizGameReward.sol","id":2202,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2965,"sourceUnit":3404,"src":"435:68:11","symbolAliases":[{"foreign":{"id":2201,"name":"IQuizGameReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"444:15:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/QuizTypes.sol","file":"../QuizTypes.sol","id":2204,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2965,"sourceUnit":2060,"src":"505:44:11","symbolAliases":[{"foreign":{"id":2203,"name":"Question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"514:8:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IMerkleFacet.sol","file":"../interfaces/IMerkleFacet.sol","id":2206,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2965,"sourceUnit":3261,"src":"551:62:11","symbolAliases":[{"foreign":{"id":2205,"name":"IMerkleFacet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"560:12:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2207,"name":"IQuizGameEvents","nameLocations":["647:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":3391,"src":"647:15:11"},"id":2208,"nodeType":"InheritanceSpecifier","src":"647:15:11"}],"canonicalName":"QuizGameModeFacet","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2964,"linearizedBaseContracts":[2964,3391],"name":"QuizGameModeFacet","nameLocation":"626:17:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2220,"nodeType":"Block","src":"755:41:11","statements":[{"expression":{"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2214,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"766:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2215,"name":"LibAppStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"771:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibAppStorage_$3508_$","typeString":"type(library LibAppStorage)"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"785:1:11","memberName":"s","nodeType":"MemberAccess","referencedDeclaration":3507,"src":"771:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AppStorage_$3495_storage_ptr_$","typeString":"function () pure returns (struct LibAppStorage.AppStorage storage pointer)"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"771:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"src":"766:22:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2219,"nodeType":"ExpressionStatement","src":"766:22:11"}]},"id":2221,"implemented":true,"kind":"function","modifiers":[],"name":"_appStorage","nameLocation":"681:11:11","nodeType":"FunctionDefinition","parameters":{"id":2209,"nodeType":"ParameterList","parameters":[],"src":"692:2:11"},"returnParameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"ds","nameLocation":"751:2:11","nodeType":"VariableDeclaration","scope":2221,"src":"718:35:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"},"typeName":{"id":2211,"nodeType":"UserDefinedTypeName","pathNode":{"id":2210,"name":"LibAppStorage.AppStorage","nameLocations":["718:13:11","732:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":3495,"src":"718:24:11"},"referencedDeclaration":3495,"src":"718:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"}},"visibility":"internal"}],"src":"717:37:11"},"scope":2964,"src":"672:124:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2248,"nodeType":"Block","src":"825:266:11","statements":[{"assignments":[2227],"declarations":[{"constant":false,"id":2227,"mutability":"mutable","name":"ds","nameLocation":"869:2:11","nodeType":"VariableDeclaration","scope":2248,"src":"836:35:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"},"typeName":{"id":2226,"nodeType":"UserDefinedTypeName","pathNode":{"id":2225,"name":"LibAppStorage.AppStorage","nameLocations":["836:13:11","850:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":3495,"src":"836:24:11"},"referencedDeclaration":3495,"src":"836:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"}},"visibility":"internal"}],"id":2230,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2228,"name":"_appStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"874:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AppStorage_$3495_storage_ptr_$","typeString":"function () pure returns (struct LibAppStorage.AppStorage storage pointer)"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"874:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"836:51:11"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2239,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"968:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"971:18:11","memberName":"DEFAULT_ADMIN_ROLE","nodeType":"MemberAccess","referencedDeclaration":3433,"src":"968:21:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2241,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"991:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"995:6:11","memberName":"sender","nodeType":"MemberAccess","src":"991:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"arguments":[{"id":2235,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"953:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_QuizGameModeFacet_$2964","typeString":"contract QuizGameModeFacet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_QuizGameModeFacet_$2964","typeString":"contract QuizGameModeFacet"}],"id":2234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"945:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2233,"name":"address","nodeType":"ElementaryTypeName","src":"945:7:11","typeDescriptions":{}}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"945:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2232,"name":"AccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"920:24:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AccessControlUpgradeable_$362_$","typeString":"type(contract AccessControlUpgradeable)"}},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"920:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AccessControlUpgradeable_$362","typeString":"contract AccessControlUpgradeable"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"960:7:11","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":116,"src":"920:47:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view external returns (bool)"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"920:82:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2043616c6c6572206973206e6f7420612067616d652061646d696e","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1017:43:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d213de9982ba26cb3a68009d89a042369045d8668bb4d8acdd2c7fbb25e8022d","typeString":"literal_string \"AccessControl: Caller is not a game admin\""},"value":"AccessControl: Caller is not a game admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d213de9982ba26cb3a68009d89a042369045d8668bb4d8acdd2c7fbb25e8022d","typeString":"literal_string \"AccessControl: Caller is not a game admin\""}],"id":2231,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"898:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"898:173:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2246,"nodeType":"ExpressionStatement","src":"898:173:11"},{"id":2247,"nodeType":"PlaceholderStatement","src":"1082:1:11"}]},"id":2249,"name":"onlyAdmin","nameLocation":"813:9:11","nodeType":"ModifierDefinition","parameters":{"id":2222,"nodeType":"ParameterList","parameters":[],"src":"822:2:11"},"src":"804:287:11","virtual":false,"visibility":"internal"},{"body":{"id":2289,"nodeType":"Block","src":"1133:388:11","statements":[{"assignments":[2255],"declarations":[{"constant":false,"id":2255,"mutability":"mutable","name":"ds","nameLocation":"1177:2:11","nodeType":"VariableDeclaration","scope":2289,"src":"1144:35:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"},"typeName":{"id":2254,"nodeType":"UserDefinedTypeName","pathNode":{"id":2253,"name":"LibAppStorage.AppStorage","nameLocations":["1144:13:11","1158:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":3495,"src":"1144:24:11"},"referencedDeclaration":3495,"src":"1144:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"}},"visibility":"internal"}],"id":2258,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2256,"name":"_appStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"1182:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AppStorage_$3495_storage_ptr_$","typeString":"function () pure returns (struct LibAppStorage.AppStorage storage pointer)"}},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1182:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1144:51:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2267,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"1276:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2268,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1279:18:11","memberName":"DEFAULT_ADMIN_ROLE","nodeType":"MemberAccess","referencedDeclaration":3433,"src":"1276:21:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2269,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1299:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1303:6:11","memberName":"sender","nodeType":"MemberAccess","src":"1299:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"arguments":[{"id":2263,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1261:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_QuizGameModeFacet_$2964","typeString":"contract QuizGameModeFacet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_QuizGameModeFacet_$2964","typeString":"contract QuizGameModeFacet"}],"id":2262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1253:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2261,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:11","typeDescriptions":{}}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1253:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2260,"name":"AccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"1228:24:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AccessControlUpgradeable_$362_$","typeString":"type(contract AccessControlUpgradeable)"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1228:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AccessControlUpgradeable_$362","typeString":"contract AccessControlUpgradeable"}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1268:7:11","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":116,"src":"1228:47:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view external returns (bool)"}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1228:82:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"expression":{"id":2279,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"1375:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2280,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1378:23:11","memberName":"REWARD_DISTRIBUTOR_ROLE","nodeType":"MemberAccess","referencedDeclaration":3435,"src":"1375:26:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2281,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1403:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1407:6:11","memberName":"sender","nodeType":"MemberAccess","src":"1403:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"arguments":[{"id":2275,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1360:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_QuizGameModeFacet_$2964","typeString":"contract QuizGameModeFacet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_QuizGameModeFacet_$2964","typeString":"contract QuizGameModeFacet"}],"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1352:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2273,"name":"address","nodeType":"ElementaryTypeName","src":"1352:7:11","typeDescriptions":{}}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1352:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2272,"name":"AccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"1327:24:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AccessControlUpgradeable_$362_$","typeString":"type(contract AccessControlUpgradeable)"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1327:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AccessControlUpgradeable_$362","typeString":"contract AccessControlUpgradeable"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1367:7:11","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":116,"src":"1327:47:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view external returns (bool)"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1327:87:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1228:186:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2043616c6c6572206973206e6f7420616e2061646d696e206f7220726577617264206469737472696275746f72","id":2285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1429:61:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_734f220ef9b2abcfd6b5e6ef7006afe2a89614bf320936724f60ab5f42748f33","typeString":"literal_string \"AccessControl: Caller is not an admin or reward distributor\""},"value":"AccessControl: Caller is not an admin or reward distributor"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_734f220ef9b2abcfd6b5e6ef7006afe2a89614bf320936724f60ab5f42748f33","typeString":"literal_string \"AccessControl: Caller is not an admin or reward distributor\""}],"id":2259,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1206:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1206:295:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2287,"nodeType":"ExpressionStatement","src":"1206:295:11"},{"id":2288,"nodeType":"PlaceholderStatement","src":"1512:1:11"}]},"id":2290,"name":"onlyAdminOrDistributor","nameLocation":"1108:22:11","nodeType":"ModifierDefinition","parameters":{"id":2250,"nodeType":"ParameterList","parameters":[],"src":"1130:2:11"},"src":"1099:422:11","virtual":false,"visibility":"internal"},{"body":{"id":2459,"nodeType":"Block","src":"1923:1378:11","statements":[{"assignments":[2309],"declarations":[{"constant":false,"id":2309,"mutability":"mutable","name":"ds","nameLocation":"1967:2:11","nodeType":"VariableDeclaration","scope":2459,"src":"1934:35:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"},"typeName":{"id":2308,"nodeType":"UserDefinedTypeName","pathNode":{"id":2307,"name":"LibAppStorage.AppStorage","nameLocations":["1934:13:11","1948:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":3495,"src":"1934:24:11"},"referencedDeclaration":3495,"src":"1934:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"}},"visibility":"internal"}],"id":2312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2310,"name":"_appStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"1972:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AppStorage_$3495_storage_ptr_$","typeString":"function () pure returns (struct LibAppStorage.AppStorage storage pointer)"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1972:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1934:51:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2314,"name":"_answerLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"2006:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2029:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2021:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2021:7:11","typeDescriptions":{}}},"id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2021:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2006:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a20416e73776572206c6561662063616e6e6f74206265207a65726f","id":2320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2033:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fbef0775c90dddb71782ca94fcf002e696e297284b0c031c4cab94ccbefbb5b","typeString":"literal_string \"Quiz: Answer leaf cannot be zero\""},"value":"Quiz: Answer leaf cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fbef0775c90dddb71782ca94fcf002e696e297284b0c031c4cab94ccbefbb5b","typeString":"literal_string \"Quiz: Answer leaf cannot be zero\""}],"id":2313,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1998:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1998:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2322,"nodeType":"ExpressionStatement","src":"1998:70:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2324,"name":"_difficultyLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"2087:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31","id":2325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2107:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2087:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2327,"name":"_difficultyLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"2112:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"313030","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2132:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2112:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2087:48:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a20446966666963756c7479206d75737420626520312d313030","id":2331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2137:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b97338bcf37d4ff2d2408ea4225fb598764e4d4752f83b70535941f098968b24","typeString":"literal_string \"Quiz: Difficulty must be 1-100\""},"value":"Quiz: Difficulty must be 1-100"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b97338bcf37d4ff2d2408ea4225fb598764e4d4752f83b70535941f098968b24","typeString":"literal_string \"Quiz: Difficulty must be 1-100\""}],"id":2323,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2079:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:91:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2333,"nodeType":"ExpressionStatement","src":"2079:91:11"},{"assignments":[2335],"declarations":[{"constant":false,"id":2335,"mutability":"mutable","name":"questionId","nameLocation":"2191:10:11","nodeType":"VariableDeclaration","scope":2459,"src":"2183:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2334,"name":"uint256","nodeType":"ElementaryTypeName","src":"2183:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2338,"initialValue":{"expression":{"id":2336,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"2204:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2337,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2207:14:11","memberName":"nextQuestionId","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"2204:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2183:38:11"},{"expression":{"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2232:19:11","subExpression":{"expression":{"id":2339,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"2232:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2235:14:11","memberName":"nextQuestionId","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"2232:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2343,"nodeType":"ExpressionStatement","src":"2232:19:11"},{"assignments":[2345],"declarations":[{"constant":false,"id":2345,"mutability":"mutable","name":"calculatedBaseReward","nameLocation":"2272:20:11","nodeType":"VariableDeclaration","scope":2459,"src":"2264:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2344,"name":"uint256","nodeType":"ElementaryTypeName","src":"2264:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2346,"nodeType":"VariableDeclarationStatement","src":"2264:28:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2347,"name":"_difficultyLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"2307:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"313030","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2327:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2307:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2366,"nodeType":"Block","src":"2411:100:11","statements":[{"expression":{"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2356,"name":"calculatedBaseReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"2426:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2357,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"2450:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2453:21:11","memberName":"REWARD_FOR_LEVEL_1_99","nodeType":"MemberAccess","referencedDeclaration":3445,"src":"2450:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2359,"name":"_difficultyLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"2477:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2450:43:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2361,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2449:45:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3939","id":2362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2497:2:11","typeDescriptions":{"typeIdentifier":"t_rational_99_by_1","typeString":"int_const 99"},"value":"99"},"src":"2449:50:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2426:73:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2365,"nodeType":"ExpressionStatement","src":"2426:73:11"}]},"id":2367,"nodeType":"IfStatement","src":"2303:208:11","trueBody":{"id":2355,"nodeType":"Block","src":"2332:73:11","statements":[{"expression":{"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2350,"name":"calculatedBaseReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"2347:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2351,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"2370:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2373:20:11","memberName":"REWARD_FOR_LEVEL_100","nodeType":"MemberAccess","referencedDeclaration":3447,"src":"2370:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2347:46:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2354,"nodeType":"ExpressionStatement","src":"2347:46:11"}]}},{"assignments":[2370],"declarations":[{"constant":false,"id":2370,"mutability":"mutable","name":"newQuestion","nameLocation":"2540:11:11","nodeType":"VariableDeclaration","scope":2459,"src":"2523:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question"},"typeName":{"id":2369,"nodeType":"UserDefinedTypeName","pathNode":{"id":2368,"name":"Question","nameLocations":["2523:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2042,"src":"2523:8:11"},"referencedDeclaration":2042,"src":"2523:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question"}},"visibility":"internal"}],"id":2375,"initialValue":{"baseExpression":{"expression":{"id":2371,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"2554:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2557:9:11","memberName":"questions","nodeType":"MemberAccess","referencedDeclaration":3471,"src":"2554:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Question_$2042_storage_$","typeString":"mapping(uint256 => struct Question storage ref)"}},"id":2374,"indexExpression":{"id":2373,"name":"questionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"2567:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2554:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage","typeString":"struct Question storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2523:55:11"},{"expression":{"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2376,"name":"newQuestion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"2589:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2601:17:11","memberName":"correctAnswerHash","nodeType":"MemberAccess","referencedDeclaration":2015,"src":"2589:29:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2379,"name":"_answerLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"2621:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2589:43:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2381,"nodeType":"ExpressionStatement","src":"2589:43:11"},{"expression":{"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2382,"name":"newQuestion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"2698:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2710:8:11","memberName":"hintHash","nodeType":"MemberAccess","referencedDeclaration":2017,"src":"2698:20:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2385,"name":"_hintHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"2721:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2698:32:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2387,"nodeType":"ExpressionStatement","src":"2698:32:11"},{"expression":{"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2388,"name":"newQuestion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"2741:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2753:15:11","memberName":"questionCreator","nodeType":"MemberAccess","referencedDeclaration":2019,"src":"2741:27:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2391,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2771:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2775:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2771:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2741:40:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2394,"nodeType":"ExpressionStatement","src":"2741:40:11"},{"expression":{"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2395,"name":"newQuestion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"2792:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2804:15:11","memberName":"difficultyLevel","nodeType":"MemberAccess","referencedDeclaration":2021,"src":"2792:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2398,"name":"_difficultyLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"2822:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2792:46:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2400,"nodeType":"ExpressionStatement","src":"2792:46:11"},{"expression":{"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2401,"name":"newQuestion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"2849:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2861:16:11","memberName":"baseRewardAmount","nodeType":"MemberAccess","referencedDeclaration":2023,"src":"2849:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2404,"name":"calculatedBaseReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"2880:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2849:51:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2406,"nodeType":"ExpressionStatement","src":"2849:51:11"},{"expression":{"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2407,"name":"newQuestion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"2911:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2923:8:11","memberName":"isClosed","nodeType":"MemberAccess","referencedDeclaration":2025,"src":"2911:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2934:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2911:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2412,"nodeType":"ExpressionStatement","src":"2911:28:11"},{"expression":{"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2413,"name":"newQuestion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"2950:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2962:4:11","memberName":"mode","nodeType":"MemberAccess","referencedDeclaration":2028,"src":"2950:16:11","typeDescriptions":{"typeIdentifier":"t_enum$_QuestionMode_$3416","typeString":"enum LibAppStorage.QuestionMode"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2416,"name":"_mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"2969:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_QuestionMode_$3416","typeString":"enum LibAppStorage.QuestionMode"}},"src":"2950:24:11","typeDescriptions":{"typeIdentifier":"t_enum$_QuestionMode_$3416","typeString":"enum LibAppStorage.QuestionMode"}},"id":2418,"nodeType":"ExpressionStatement","src":"2950:24:11"},{"expression":{"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2419,"name":"newQuestion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"2985:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2997:17:11","memberName":"blockCreationTime","nodeType":"MemberAccess","referencedDeclaration":2030,"src":"2985:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2422,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3017:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"3017:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2985:47:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2425,"nodeType":"ExpressionStatement","src":"2985:47:11"},{"expression":{"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2426,"name":"newQuestion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"3043:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3055:22:11","memberName":"firstCorrectAnswerTime","nodeType":"MemberAccess","referencedDeclaration":2032,"src":"3043:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3080:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3043:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2431,"nodeType":"ExpressionStatement","src":"3043:38:11"},{"expression":{"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2432,"name":"newQuestion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"3092:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3104:18:11","memberName":"firstSolverAddress","nodeType":"MemberAccess","referencedDeclaration":2034,"src":"3092:30:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3133:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3125:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2435,"name":"address","nodeType":"ElementaryTypeName","src":"3125:7:11","typeDescriptions":{}}},"id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3125:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3092:43:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2440,"nodeType":"ExpressionStatement","src":"3092:43:11"},{"expression":{"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2441,"name":"newQuestion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"3146:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3158:18:11","memberName":"poolCorrectSolvers","nodeType":"MemberAccess","referencedDeclaration":2037,"src":"3146:30:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3194:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3179:14:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2444,"name":"address","nodeType":"ElementaryTypeName","src":"3183:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2445,"nodeType":"ArrayTypeName","src":"3183:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3179:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"3146:50:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2450,"nodeType":"ExpressionStatement","src":"3146:50:11"},{"eventCall":{"arguments":[{"id":2452,"name":"questionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"3230:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2453,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3242:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3246:6:11","memberName":"sender","nodeType":"MemberAccess","src":"3242:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2455,"name":"_difficultyLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"3254:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2456,"name":"calculatedBaseReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"3272:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2451,"name":"QuestionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"3214:15:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3214:79:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2458,"nodeType":"EmitStatement","src":"3209:84:11"}]},"documentation":{"id":2291,"nodeType":"StructuredDocumentation","src":"1529:120:11","text":"@notice สร้างคำถามใหม่และบันทึกข้อมูลบน Smart Contract"},"functionSelector":"1e0fef78","id":2460,"implemented":true,"kind":"function","modifiers":[{"id":2303,"kind":"modifierInvocation","modifierName":{"id":2302,"name":"onlyAdmin","nameLocations":["1913:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":2249,"src":"1913:9:11"},"nodeType":"ModifierInvocation","src":"1913:9:11"}],"name":"createQuestion","nameLocation":"1664:14:11","nodeType":"FunctionDefinition","parameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2293,"mutability":"mutable","name":"_answerLeaf","nameLocation":"1697:11:11","nodeType":"VariableDeclaration","scope":2460,"src":"1689:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1689:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2295,"mutability":"mutable","name":"_hintHash","nameLocation":"1811:9:11","nodeType":"VariableDeclaration","scope":2460,"src":"1803:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1803:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2297,"mutability":"mutable","name":"_difficultyLevel","nameLocation":"1839:16:11","nodeType":"VariableDeclaration","scope":2460,"src":"1831:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2296,"name":"uint256","nodeType":"ElementaryTypeName","src":"1831:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2300,"mutability":"mutable","name":"_mode","nameLocation":"1893:5:11","nodeType":"VariableDeclaration","scope":2460,"src":"1866:32:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_QuestionMode_$3416","typeString":"enum LibAppStorage.QuestionMode"},"typeName":{"id":2299,"nodeType":"UserDefinedTypeName","pathNode":{"id":2298,"name":"LibAppStorage.QuestionMode","nameLocations":["1866:13:11","1880:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":3416,"src":"1866:26:11"},"referencedDeclaration":3416,"src":"1866:26:11","typeDescriptions":{"typeIdentifier":"t_enum$_QuestionMode_$3416","typeString":"enum LibAppStorage.QuestionMode"}},"visibility":"internal"}],"src":"1678:227:11"},"returnParameters":{"id":2304,"nodeType":"ParameterList","parameters":[],"src":"1923:0:11"},"scope":2964,"src":"1655:1646:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2779,"nodeType":"Block","src":"3525:2965:11","statements":[{"assignments":[2475],"declarations":[{"constant":false,"id":2475,"mutability":"mutable","name":"ds","nameLocation":"3569:2:11","nodeType":"VariableDeclaration","scope":2779,"src":"3536:35:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"},"typeName":{"id":2474,"nodeType":"UserDefinedTypeName","pathNode":{"id":2473,"name":"LibAppStorage.AppStorage","nameLocations":["3536:13:11","3550:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":3495,"src":"3536:24:11"},"referencedDeclaration":3495,"src":"3536:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"}},"visibility":"internal"}],"id":2478,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2476,"name":"_appStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"3574:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AppStorage_$3495_storage_ptr_$","typeString":"function () pure returns (struct LibAppStorage.AppStorage storage pointer)"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3574:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3536:51:11"},{"assignments":[2481],"declarations":[{"constant":false,"id":2481,"mutability":"mutable","name":"question","nameLocation":"3615:8:11","nodeType":"VariableDeclaration","scope":2779,"src":"3598:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question"},"typeName":{"id":2480,"nodeType":"UserDefinedTypeName","pathNode":{"id":2479,"name":"Question","nameLocations":["3598:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2042,"src":"3598:8:11"},"referencedDeclaration":2042,"src":"3598:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question"}},"visibility":"internal"}],"id":2486,"initialValue":{"baseExpression":{"expression":{"id":2482,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"3626:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3629:9:11","memberName":"questions","nodeType":"MemberAccess","referencedDeclaration":3471,"src":"3626:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Question_$2042_storage_$","typeString":"mapping(uint256 => struct Question storage ref)"}},"id":2485,"indexExpression":{"id":2484,"name":"_questionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"3639:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3626:25:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage","typeString":"struct Question storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3598:53:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2488,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"3672:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3681:17:11","memberName":"correctAnswerHash","nodeType":"MemberAccess","referencedDeclaration":2015,"src":"3672:26:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3710:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3702:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3702:7:11","typeDescriptions":{}}},"id":2493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3702:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3672:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a205175657374696f6e20646f6573206e6f742065786973742e","id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3714:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9ca6a2aee6a2b4b1c04fcabeb5d05916d8bbb873a86e4e6890b5833fb5f83f51","typeString":"literal_string \"Quiz: Question does not exist.\""},"value":"Quiz: Question does not exist."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9ca6a2aee6a2b4b1c04fcabeb5d05916d8bbb873a86e4e6890b5833fb5f83f51","typeString":"literal_string \"Quiz: Question does not exist.\""}],"id":2487,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3664:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3664:83:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2497,"nodeType":"ExpressionStatement","src":"3664:83:11"},{"expression":{"arguments":[{"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3766:18:11","subExpression":{"expression":{"id":2499,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"3767:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3776:8:11","memberName":"isClosed","nodeType":"MemberAccess","referencedDeclaration":2025,"src":"3767:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a205175657374696f6e20697320636c6f7365642e","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3786:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a795257bf4087cd33f605ed1ee14adc622e07f16b26a5566160cecbd8f46f09","typeString":"literal_string \"Quiz: Question is closed.\""},"value":"Quiz: Question is closed."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a795257bf4087cd33f605ed1ee14adc622e07f16b26a5566160cecbd8f46f09","typeString":"literal_string \"Quiz: Question is closed.\""}],"id":2498,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3758:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3758:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2504,"nodeType":"ExpressionStatement","src":"3758:56:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2505,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"3831:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3840:15:11","memberName":"difficultyLevel","nodeType":"MemberAccess","referencedDeclaration":2021,"src":"3831:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"313030","id":2507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3859:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"3831:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2522,"nodeType":"IfStatement","src":"3827:204:11","trueBody":{"id":2521,"nodeType":"Block","src":"3864:167:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2510,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3887:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3893:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"3887:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2512,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"3906:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3915:17:11","memberName":"blockCreationTime","nodeType":"MemberAccess","referencedDeclaration":2030,"src":"3906:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2514,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"3935:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2515,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3938:35:11","memberName":"LEVEL_100_QUESTION_VALIDITY_SECONDS","nodeType":"MemberAccess","referencedDeclaration":3443,"src":"3935:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3906:67:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3887:86:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a204c6576656c2031303020657870697265642e","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3992:26:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b1a11e9034e0f285d8cc9f63c9c79be0dccd9b75d706e26eecf0d260d310dfc3","typeString":"literal_string \"Quiz: Level 100 expired.\""},"value":"Quiz: Level 100 expired."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b1a11e9034e0f285d8cc9f63c9c79be0dccd9b75d706e26eecf0d260d310dfc3","typeString":"literal_string \"Quiz: Level 100 expired.\""}],"id":2509,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3879:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3879:140:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2520,"nodeType":"ExpressionStatement","src":"3879:140:11"}]}},{"assignments":[2524],"declarations":[{"constant":false,"id":2524,"mutability":"mutable","name":"isCorrect","nameLocation":"4089:9:11","nodeType":"VariableDeclaration","scope":2779,"src":"4084:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2523,"name":"bool","nodeType":"ElementaryTypeName","src":"4084:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2535,"initialValue":{"arguments":[{"id":2532,"name":"_answerLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"4140:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2533,"name":"_merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"4153:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}],"expression":{"arguments":[{"arguments":[{"id":2528,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4122:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_QuizGameModeFacet_$2964","typeString":"contract QuizGameModeFacet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_QuizGameModeFacet_$2964","typeString":"contract QuizGameModeFacet"}],"id":2527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4114:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2526,"name":"address","nodeType":"ElementaryTypeName","src":"4114:7:11","typeDescriptions":{}}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4114:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2525,"name":"IMerkleFacet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"4101:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMerkleFacet_$3260_$","typeString":"type(contract IMerkleFacet)"}},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4101:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMerkleFacet_$3260","typeString":"contract IMerkleFacet"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4129:10:11","memberName":"verifyQuiz","nodeType":"MemberAccess","referencedDeclaration":3252,"src":"4101:38:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes32,bytes32[] memory) view external returns (bool)"}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4101:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4084:82:11"},{"expression":{"arguments":[{"id":2537,"name":"isCorrect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"4185:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a2057726f6e6720616e73776572206f7220696e76616c69642070726f6f66","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4196:37:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_deb6dacf04b1825b0915cfb2f83bc4b6edabb3f129467e60d6ac2a60fe982d80","typeString":"literal_string \"Quiz: Wrong answer or invalid proof\""},"value":"Quiz: Wrong answer or invalid proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_deb6dacf04b1825b0915cfb2f83bc4b6edabb3f129467e60d6ac2a60fe982d80","typeString":"literal_string \"Quiz: Wrong answer or invalid proof\""}],"id":2536,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4177:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4177:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2540,"nodeType":"ExpressionStatement","src":"4177:57:11"},{"assignments":[2542],"declarations":[{"constant":false,"id":2542,"mutability":"mutable","name":"currentDayId","nameLocation":"4255:12:11","nodeType":"VariableDeclaration","scope":2779,"src":"4247:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2541,"name":"uint256","nodeType":"ElementaryTypeName","src":"4247:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2552,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2543,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4270:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4276:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"4270:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"id":2549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1440_by_1","typeString":"int_const 1440"},"id":2547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3234","id":2545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4289:2:11","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3630","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:2:11","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"4289:7:11","typeDescriptions":{"typeIdentifier":"t_rational_1440_by_1","typeString":"int_const 1440"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3630","id":2548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4299:2:11","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"4289:12:11","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"}}],"id":2550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4288:14:11","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"}},"src":"4270:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4247:55:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":2553,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"4317:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2554,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4320:13:11","memberName":"lastPlayedDay","nodeType":"MemberAccess","referencedDeclaration":3461,"src":"4317:16:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2557,"indexExpression":{"expression":{"id":2555,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4334:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4338:6:11","memberName":"sender","nodeType":"MemberAccess","src":"4334:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4317:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2558,"name":"currentDayId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"4349:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4317:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2592,"nodeType":"Block","src":"4501:147:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_QuestionMode_$3416","typeString":"enum LibAppStorage.QuestionMode"},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":2581,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"4524:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4527:16:11","memberName":"playerModeChoice","nodeType":"MemberAccess","referencedDeclaration":3466,"src":"4524:19:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_QuestionMode_$3416_$","typeString":"mapping(address => enum LibAppStorage.QuestionMode)"}},"id":2585,"indexExpression":{"expression":{"id":2583,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4544:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4548:6:11","memberName":"sender","nodeType":"MemberAccess","src":"4544:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4524:31:11","typeDescriptions":{"typeIdentifier":"t_enum$_QuestionMode_$3416","typeString":"enum LibAppStorage.QuestionMode"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2586,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"4559:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2587,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4568:4:11","memberName":"mode","nodeType":"MemberAccess","referencedDeclaration":2028,"src":"4559:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_QuestionMode_$3416","typeString":"enum LibAppStorage.QuestionMode"}},"src":"4524:48:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a20416c72656164792063686f73656e20646966666572656e74206d6f646520746f6461792e","id":2589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4591:44:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_66c22cc1b5cc5f5c4e220d0b29db8c981c7a593481b2112615eac437ddae5d13","typeString":"literal_string \"Quiz: Already chosen different mode today.\""},"value":"Quiz: Already chosen different mode today."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_66c22cc1b5cc5f5c4e220d0b29db8c981c7a593481b2112615eac437ddae5d13","typeString":"literal_string \"Quiz: Already chosen different mode today.\""}],"id":2580,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4516:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4516:120:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2591,"nodeType":"ExpressionStatement","src":"4516:120:11"}]},"id":2593,"nodeType":"IfStatement","src":"4313:335:11","trueBody":{"id":2579,"nodeType":"Block","src":"4363:132:11","statements":[{"expression":{"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2560,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"4378:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4381:13:11","memberName":"lastPlayedDay","nodeType":"MemberAccess","referencedDeclaration":3461,"src":"4378:16:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2565,"indexExpression":{"expression":{"id":2562,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4395:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4399:6:11","memberName":"sender","nodeType":"MemberAccess","src":"4395:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4378:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2566,"name":"currentDayId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"4409:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4378:43:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2568,"nodeType":"ExpressionStatement","src":"4378:43:11"},{"expression":{"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2569,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"4436:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4439:16:11","memberName":"playerModeChoice","nodeType":"MemberAccess","referencedDeclaration":3466,"src":"4436:19:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_QuestionMode_$3416_$","typeString":"mapping(address => enum LibAppStorage.QuestionMode)"}},"id":2574,"indexExpression":{"expression":{"id":2571,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4456:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4460:6:11","memberName":"sender","nodeType":"MemberAccess","src":"4456:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4436:31:11","typeDescriptions":{"typeIdentifier":"t_enum$_QuestionMode_$3416","typeString":"enum LibAppStorage.QuestionMode"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2575,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"4470:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2576,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4479:4:11","memberName":"mode","nodeType":"MemberAccess","referencedDeclaration":2028,"src":"4470:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_QuestionMode_$3416","typeString":"enum LibAppStorage.QuestionMode"}},"src":"4436:47:11","typeDescriptions":{"typeIdentifier":"t_enum$_QuestionMode_$3416","typeString":"enum LibAppStorage.QuestionMode"}},"id":2578,"nodeType":"ExpressionStatement","src":"4436:47:11"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":2595,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"4668:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2596,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4677:13:11","memberName":"lastAnswerDay","nodeType":"MemberAccess","referencedDeclaration":2041,"src":"4668:22:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2599,"indexExpression":{"expression":{"id":2597,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4691:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4695:6:11","memberName":"sender","nodeType":"MemberAccess","src":"4691:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4668:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2600,"name":"currentDayId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"4706:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4668:50:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a2043616e206f6e6c7920616e73776572206f6e636520706572206461792e","id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4733:37:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cd9f37ba2d9b1e0e9c76e4b477f753d6d4d9dafea59fcf4d4c6ec8b67a3400b4","typeString":"literal_string \"Quiz: Can only answer once per day.\""},"value":"Quiz: Can only answer once per day."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cd9f37ba2d9b1e0e9c76e4b477f753d6d4d9dafea59fcf4d4c6ec8b67a3400b4","typeString":"literal_string \"Quiz: Can only answer once per day.\""}],"id":2594,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4660:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4660:111:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2604,"nodeType":"ExpressionStatement","src":"4660:111:11"},{"expression":{"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2605,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"4782:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2609,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4791:13:11","memberName":"lastAnswerDay","nodeType":"MemberAccess","referencedDeclaration":2041,"src":"4782:22:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2610,"indexExpression":{"expression":{"id":2607,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4805:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4809:6:11","memberName":"sender","nodeType":"MemberAccess","src":"4805:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4782:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2611,"name":"currentDayId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"4819:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4782:49:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2613,"nodeType":"ExpressionStatement","src":"4782:49:11"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_QuestionMode_$3416","typeString":"enum LibAppStorage.QuestionMode"},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2614,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"4848:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4857:4:11","memberName":"mode","nodeType":"MemberAccess","referencedDeclaration":2028,"src":"4848:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_QuestionMode_$3416","typeString":"enum LibAppStorage.QuestionMode"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2616,"name":"LibAppStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"4865:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibAppStorage_$3508_$","typeString":"type(library LibAppStorage)"}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4879:12:11","memberName":"QuestionMode","nodeType":"MemberAccess","referencedDeclaration":3416,"src":"4865:26:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_QuestionMode_$3416_$","typeString":"type(enum LibAppStorage.QuestionMode)"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4892:4:11","memberName":"Solo","nodeType":"MemberAccess","referencedDeclaration":3414,"src":"4865:31:11","typeDescriptions":{"typeIdentifier":"t_enum$_QuestionMode_$3416","typeString":"enum LibAppStorage.QuestionMode"}},"src":"4848:48:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_QuestionMode_$3416","typeString":"enum LibAppStorage.QuestionMode"},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2710,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"5732:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2711,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5741:4:11","memberName":"mode","nodeType":"MemberAccess","referencedDeclaration":2028,"src":"5732:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_QuestionMode_$3416","typeString":"enum LibAppStorage.QuestionMode"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2712,"name":"LibAppStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"5749:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibAppStorage_$3508_$","typeString":"type(library LibAppStorage)"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5763:12:11","memberName":"QuestionMode","nodeType":"MemberAccess","referencedDeclaration":3416,"src":"5749:26:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_QuestionMode_$3416_$","typeString":"type(enum LibAppStorage.QuestionMode)"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5776:4:11","memberName":"Pool","nodeType":"MemberAccess","referencedDeclaration":3415,"src":"5749:31:11","typeDescriptions":{"typeIdentifier":"t_enum$_QuestionMode_$3416","typeString":"enum LibAppStorage.QuestionMode"}},"src":"5732:48:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2769,"nodeType":"IfStatement","src":"5728:673:11","trueBody":{"id":2768,"nodeType":"Block","src":"5782:619:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2716,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"5801:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2717,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5810:22:11","memberName":"firstCorrectAnswerTime","nodeType":"MemberAccess","referencedDeclaration":2032,"src":"5801:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5836:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5801:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2734,"nodeType":"IfStatement","src":"5797:207:11","trueBody":{"id":2733,"nodeType":"Block","src":"5839:165:11","statements":[{"expression":{"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2720,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"5858:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5867:22:11","memberName":"firstCorrectAnswerTime","nodeType":"MemberAccess","referencedDeclaration":2032,"src":"5858:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2723,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5892:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5898:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"5892:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5858:49:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2726,"nodeType":"ExpressionStatement","src":"5858:49:11"},{"eventCall":{"arguments":[{"id":2728,"name":"_questionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"5959:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2729,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5972:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5978:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"5972:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2727,"name":"QuestionRewardWindowStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"5931:27:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5931:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2732,"nodeType":"EmitStatement","src":"5926:62:11"}]}},{"assignments":[2736],"declarations":[{"constant":false,"id":2736,"mutability":"mutable","name":"duration","nameLocation":"6028:8:11","nodeType":"VariableDeclaration","scope":2768,"src":"6020:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"6020:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2747,"initialValue":{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2737,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"6040:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2738,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6049:15:11","memberName":"difficultyLevel","nodeType":"MemberAccess","referencedDeclaration":2021,"src":"6040:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"313030","id":2739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"6040:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6039:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":2744,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"6150:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6153:35:11","memberName":"POOL_REWARD_WINDOW_DURATION_SECONDS","nodeType":"MemberAccess","referencedDeclaration":3441,"src":"6150:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6039:149:11","trueExpression":{"expression":{"id":2742,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"6092:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2743,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6095:35:11","memberName":"LEVEL_100_QUESTION_VALIDITY_SECONDS","nodeType":"MemberAccess","referencedDeclaration":3443,"src":"6092:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6020:168:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2749,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6213:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6219:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"6213:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2751,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"6232:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6241:22:11","memberName":"firstCorrectAnswerTime","nodeType":"MemberAccess","referencedDeclaration":2032,"src":"6232:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2753,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"6266:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6232:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6213:61:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a20506f6f6c207265776172642077696e646f7720636c6f7365642e","id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6293:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b752ced2207ae464e124108225727e26059776425402c3b2c5b61d7bdc64db3e","typeString":"literal_string \"Quiz: Pool reward window closed.\""},"value":"Quiz: Pool reward window closed."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b752ced2207ae464e124108225727e26059776425402c3b2c5b61d7bdc64db3e","typeString":"literal_string \"Quiz: Pool reward window closed.\""}],"id":2748,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6205:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6205:123:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2758,"nodeType":"ExpressionStatement","src":"6205:123:11"},{"expression":{"arguments":[{"expression":{"id":2764,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6378:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6382:6:11","memberName":"sender","nodeType":"MemberAccess","src":"6378:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":2759,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"6345:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2762,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6354:18:11","memberName":"poolCorrectSolvers","nodeType":"MemberAccess","referencedDeclaration":2037,"src":"6345:27:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6373:4:11","memberName":"push","nodeType":"MemberAccess","src":"6345:32:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2767,"nodeType":"ExpressionStatement","src":"6345:44:11"}]}},"id":2770,"nodeType":"IfStatement","src":"4844:1557:11","trueBody":{"id":2709,"nodeType":"Block","src":"4898:824:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2621,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"4921:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2622,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4930:18:11","memberName":"firstSolverAddress","nodeType":"MemberAccess","referencedDeclaration":2034,"src":"4921:27:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4960:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4952:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2623,"name":"address","nodeType":"ElementaryTypeName","src":"4952:7:11","typeDescriptions":{}}},"id":2626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4952:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4921:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a20536f6c6f20616c726561647920736f6c7665642e","id":2628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4964:28:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_a582c186e7b69090f08587d5276930c40f00be57ca3893d1ae208f5716486827","typeString":"literal_string \"Quiz: Solo already solved.\""},"value":"Quiz: Solo already solved."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a582c186e7b69090f08587d5276930c40f00be57ca3893d1ae208f5716486827","typeString":"literal_string \"Quiz: Solo already solved.\""}],"id":2620,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4913:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4913:80:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2630,"nodeType":"ExpressionStatement","src":"4913:80:11"},{"expression":{"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2631,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"5010:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2633,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5019:18:11","memberName":"firstSolverAddress","nodeType":"MemberAccess","referencedDeclaration":2034,"src":"5010:27:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2634,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5040:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5044:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5040:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5010:40:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2637,"nodeType":"ExpressionStatement","src":"5010:40:11"},{"expression":{"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2638,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"5065:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5074:22:11","memberName":"firstCorrectAnswerTime","nodeType":"MemberAccess","referencedDeclaration":2032,"src":"5065:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2641,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5099:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5105:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"5099:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:49:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2644,"nodeType":"ExpressionStatement","src":"5065:49:11"},{"expression":{"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2645,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"5129:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2647,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5138:8:11","memberName":"isClosed","nodeType":"MemberAccess","referencedDeclaration":2025,"src":"5129:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5149:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5129:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2650,"nodeType":"ExpressionStatement","src":"5129:24:11"},{"assignments":[2652],"declarations":[{"constant":false,"id":2652,"mutability":"mutable","name":"totalReward","nameLocation":"5178:11:11","nodeType":"VariableDeclaration","scope":2709,"src":"5170:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2651,"name":"uint256","nodeType":"ElementaryTypeName","src":"5170:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2663,"initialValue":{"arguments":[{"expression":{"id":2660,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"5246:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2661,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5255:15:11","memberName":"difficultyLevel","nodeType":"MemberAccess","referencedDeclaration":2021,"src":"5246:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":2656,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5216:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_QuizGameModeFacet_$2964","typeString":"contract QuizGameModeFacet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_QuizGameModeFacet_$2964","typeString":"contract QuizGameModeFacet"}],"id":2655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5208:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2654,"name":"address","nodeType":"ElementaryTypeName","src":"5208:7:11","typeDescriptions":{}}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5208:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2653,"name":"IQuizGameReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"5192:15:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IQuizGameReward_$3403_$","typeString":"type(contract IQuizGameReward)"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5192:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IQuizGameReward_$3403","typeString":"contract IQuizGameReward"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5223:22:11","memberName":"calculateCurrentReward","nodeType":"MemberAccess","referencedDeclaration":3402,"src":"5192:53:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5192:79:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5170:101:11"},{"assignments":[2665],"declarations":[{"constant":false,"id":2665,"mutability":"mutable","name":"treasuryFee","nameLocation":"5294:11:11","nodeType":"VariableDeclaration","scope":2709,"src":"5286:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2664,"name":"uint256","nodeType":"ElementaryTypeName","src":"5286:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2673,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2666,"name":"totalReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"5309:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2667,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"5323:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2668,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5326:23:11","memberName":"TREASURY_FEE_PERCENTAGE","nodeType":"MemberAccess","referencedDeclaration":3453,"src":"5323:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5309:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2670,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5308:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:5:11","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"5308:50:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5286:72:11"},{"assignments":[2675],"declarations":[{"constant":false,"id":2675,"mutability":"mutable","name":"rewardForSoloSolver","nameLocation":"5381:19:11","nodeType":"VariableDeclaration","scope":2709,"src":"5373:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2674,"name":"uint256","nodeType":"ElementaryTypeName","src":"5373:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2679,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2676,"name":"totalReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"5403:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2677,"name":"treasuryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"5417:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5403:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5373:55:11"},{"expression":{"arguments":[{"id":2685,"name":"treasuryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"5486:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2680,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"5445:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5448:11:11","memberName":"poolManager","nodeType":"MemberAccess","referencedDeclaration":3491,"src":"5445:14:11","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolManager_$3285","typeString":"contract IPoolManager"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5460:25:11","memberName":"mintAndTransferToTreasury","nodeType":"MemberAccess","referencedDeclaration":3274,"src":"5445:40:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5445:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2687,"nodeType":"ExpressionStatement","src":"5445:53:11"},{"expression":{"arguments":[{"expression":{"id":2693,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5544:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5548:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5544:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2695,"name":"rewardForSoloSolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"5556:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2688,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"5513:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5516:11:11","memberName":"poolManager","nodeType":"MemberAccess","referencedDeclaration":3491,"src":"5513:14:11","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolManager_$3285","typeString":"contract IPoolManager"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5528:15:11","memberName":"withdrawForUser","nodeType":"MemberAccess","referencedDeclaration":3269,"src":"5513:30:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5513:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2697,"nodeType":"ExpressionStatement","src":"5513:63:11"},{"eventCall":{"arguments":[{"id":2699,"name":"_questionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"5616:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2700,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5629:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5633:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5629:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2702,"name":"rewardForSoloSolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"5641:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2698,"name":"RewardDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"5598:17:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5598:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2704,"nodeType":"EmitStatement","src":"5593:68:11"},{"eventCall":{"arguments":[{"id":2706,"name":"_questionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"5696:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2705,"name":"QuestionClosed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"5681:14:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5681:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2708,"nodeType":"EmitStatement","src":"5676:32:11"}]}},{"eventCall":{"arguments":[{"id":2772,"name":"_questionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"6434:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2773,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6447:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6451:6:11","memberName":"sender","nodeType":"MemberAccess","src":"6447:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2775,"name":"_answerLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"6459:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2776,"name":"isCorrect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"6472:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2771,"name":"AnswerSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"6418:15:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$_t_bool_$returns$__$","typeString":"function (uint256,address,bytes32,bool)"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6418:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2778,"nodeType":"EmitStatement","src":"6413:69:11"}]},"documentation":{"id":2461,"nodeType":"StructuredDocumentation","src":"3309:72:11","text":"@notice ผู้เล่นส่งคำตอบ + Merkle proof"},"functionSelector":"6efa82d2","id":2780,"implemented":true,"kind":"function","modifiers":[],"name":"submitAnswer","nameLocation":"3396:12:11","nodeType":"FunctionDefinition","parameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"_questionId","nameLocation":"3427:11:11","nodeType":"VariableDeclaration","scope":2780,"src":"3419:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"3419:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"_answerLeaf","nameLocation":"3457:11:11","nodeType":"VariableDeclaration","scope":2780,"src":"3449:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3449:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2468,"mutability":"mutable","name":"_merkleProof","nameLocation":"3498:12:11","nodeType":"VariableDeclaration","scope":2780,"src":"3479:31:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3479:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2467,"nodeType":"ArrayTypeName","src":"3479:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3408:109:11"},"returnParameters":{"id":2470,"nodeType":"ParameterList","parameters":[],"src":"3525:0:11"},"scope":2964,"src":"3387:3103:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2862,"nodeType":"Block","src":"6545:761:11","statements":[{"assignments":[2789],"declarations":[{"constant":false,"id":2789,"mutability":"mutable","name":"ds","nameLocation":"6589:2:11","nodeType":"VariableDeclaration","scope":2862,"src":"6556:35:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"},"typeName":{"id":2788,"nodeType":"UserDefinedTypeName","pathNode":{"id":2787,"name":"LibAppStorage.AppStorage","nameLocations":["6556:13:11","6570:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":3495,"src":"6556:24:11"},"referencedDeclaration":3495,"src":"6556:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"}},"visibility":"internal"}],"id":2793,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2790,"name":"LibAppStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"6594:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibAppStorage_$3508_$","typeString":"type(library LibAppStorage)"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6608:1:11","memberName":"s","nodeType":"MemberAccess","referencedDeclaration":3507,"src":"6594:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AppStorage_$3495_storage_ptr_$","typeString":"function () pure returns (struct LibAppStorage.AppStorage storage pointer)"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6594:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6556:55:11"},{"assignments":[2796],"declarations":[{"constant":false,"id":2796,"mutability":"mutable","name":"question","nameLocation":"6649:8:11","nodeType":"VariableDeclaration","scope":2862,"src":"6632:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question"},"typeName":{"id":2795,"nodeType":"UserDefinedTypeName","pathNode":{"id":2794,"name":"Question","nameLocations":["6632:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2042,"src":"6632:8:11"},"referencedDeclaration":2042,"src":"6632:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question"}},"visibility":"internal"}],"id":2801,"initialValue":{"baseExpression":{"expression":{"id":2797,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"6660:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6663:9:11","memberName":"questions","nodeType":"MemberAccess","referencedDeclaration":3471,"src":"6660:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Question_$2042_storage_$","typeString":"mapping(uint256 => struct Question storage ref)"}},"id":2800,"indexExpression":{"id":2799,"name":"_questionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"6673:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6660:25:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage","typeString":"struct Question storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6632:53:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2803,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"6704:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6713:17:11","memberName":"correctAnswerHash","nodeType":"MemberAccess","referencedDeclaration":2015,"src":"6704:26:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6742:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6734:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6734:7:11","typeDescriptions":{}}},"id":2808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6734:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6704:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a205175657374696f6e20646f6573206e6f742065786973742e","id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6746:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9ca6a2aee6a2b4b1c04fcabeb5d05916d8bbb873a86e4e6890b5833fb5f83f51","typeString":"literal_string \"Quiz: Question does not exist.\""},"value":"Quiz: Question does not exist."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9ca6a2aee6a2b4b1c04fcabeb5d05916d8bbb873a86e4e6890b5833fb5f83f51","typeString":"literal_string \"Quiz: Question does not exist.\""}],"id":2802,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6696:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6696:83:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2812,"nodeType":"ExpressionStatement","src":"6696:83:11"},{"expression":{"arguments":[{"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6798:18:11","subExpression":{"expression":{"id":2814,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"6799:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2815,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6808:8:11","memberName":"isClosed","nodeType":"MemberAccess","referencedDeclaration":2025,"src":"6799:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a205175657374696f6e20697320616c726561647920636c6f7365642e","id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6818:35:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ab5808731e2cdc1b0c0a71eafb2ef380de257de78b4ae5c86014ac915154f241","typeString":"literal_string \"Quiz: Question is already closed.\""},"value":"Quiz: Question is already closed."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ab5808731e2cdc1b0c0a71eafb2ef380de257de78b4ae5c86014ac915154f241","typeString":"literal_string \"Quiz: Question is already closed.\""}],"id":2813,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6790:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6790:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2819,"nodeType":"ExpressionStatement","src":"6790:64:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2820,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"6871:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6880:15:11","memberName":"difficultyLevel","nodeType":"MemberAccess","referencedDeclaration":2021,"src":"6871:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"313030","id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6899:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"6871:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2837,"nodeType":"IfStatement","src":"6867:217:11","trueBody":{"id":2836,"nodeType":"Block","src":"6904:180:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2825,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6927:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6933:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"6927:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2827,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"6946:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6955:17:11","memberName":"blockCreationTime","nodeType":"MemberAccess","referencedDeclaration":2030,"src":"6946:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2829,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"6975:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2830,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6978:35:11","memberName":"LEVEL_100_QUESTION_VALIDITY_SECONDS","nodeType":"MemberAccess","referencedDeclaration":3443,"src":"6975:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6946:67:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6927:86:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a204c6576656c20313030207175657374696f6e2068617320657870697265642c2063616e6e6f74206275792068696e742e","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7015:56:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6749988fb1f5bfa6fcfd6ccdb1cb3925b863f3e8bd155a927cfe28f4d8091434","typeString":"literal_string \"Quiz: Level 100 question has expired, cannot buy hint.\""},"value":"Quiz: Level 100 question has expired, cannot buy hint."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6749988fb1f5bfa6fcfd6ccdb1cb3925b863f3e8bd155a927cfe28f4d8091434","typeString":"literal_string \"Quiz: Level 100 question has expired, cannot buy hint.\""}],"id":2824,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6919:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6919:153:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2835,"nodeType":"ExpressionStatement","src":"6919:153:11"}]}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2842,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7129:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7133:6:11","memberName":"sender","nodeType":"MemberAccess","src":"7129:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2846,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7149:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_QuizGameModeFacet_$2964","typeString":"contract QuizGameModeFacet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_QuizGameModeFacet_$2964","typeString":"contract QuizGameModeFacet"}],"id":2845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7141:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2844,"name":"address","nodeType":"ElementaryTypeName","src":"7141:7:11","typeDescriptions":{}}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7141:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2848,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"7156:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2849,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7159:16:11","memberName":"HINT_COST_AMOUNT","nodeType":"MemberAccess","referencedDeclaration":3439,"src":"7156:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2839,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"7104:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7107:8:11","memberName":"quizCoin","nodeType":"MemberAccess","referencedDeclaration":3494,"src":"7104:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_IQuizCoin_$3306","typeString":"contract IQuizCoin"}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7116:12:11","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":876,"src":"7104:24:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7104:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a205175697a436f696e207472616e73666572206661696c656420666f722068696e742e","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7178:42:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_03847e327b159d5562f36577e3f77c0c31a34d326214167947d8f6957252fb4d","typeString":"literal_string \"Quiz: QuizCoin transfer failed for hint.\""},"value":"Quiz: QuizCoin transfer failed for hint."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_03847e327b159d5562f36577e3f77c0c31a34d326214167947d8f6957252fb4d","typeString":"literal_string \"Quiz: QuizCoin transfer failed for hint.\""}],"id":2838,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7096:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7096:125:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2853,"nodeType":"ExpressionStatement","src":"7096:125:11"},{"eventCall":{"arguments":[{"id":2855,"name":"_questionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"7253:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2856,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7266:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7270:6:11","memberName":"sender","nodeType":"MemberAccess","src":"7266:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2858,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"7278:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2859,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7281:16:11","memberName":"HINT_COST_AMOUNT","nodeType":"MemberAccess","referencedDeclaration":3439,"src":"7278:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2854,"name":"HintPurchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"7239:13:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7239:59:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2861,"nodeType":"EmitStatement","src":"7234:64:11"}]},"functionSelector":"42dd0724","id":2863,"implemented":true,"kind":"function","modifiers":[],"name":"buyHint","nameLocation":"6509:7:11","nodeType":"FunctionDefinition","parameters":{"id":2783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2782,"mutability":"mutable","name":"_questionId","nameLocation":"6525:11:11","nodeType":"VariableDeclaration","scope":2863,"src":"6517:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2781,"name":"uint256","nodeType":"ElementaryTypeName","src":"6517:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6516:21:11"},"returnParameters":{"id":2784,"nodeType":"ParameterList","parameters":[],"src":"6545:0:11"},"scope":2964,"src":"6500:806:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2962,"nodeType":"Block","src":"7464:1400:11","statements":[{"assignments":[2872],"declarations":[{"constant":false,"id":2872,"mutability":"mutable","name":"ds","nameLocation":"7508:2:11","nodeType":"VariableDeclaration","scope":2962,"src":"7475:35:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"},"typeName":{"id":2871,"nodeType":"UserDefinedTypeName","pathNode":{"id":2870,"name":"LibAppStorage.AppStorage","nameLocations":["7475:13:11","7489:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":3495,"src":"7475:24:11"},"referencedDeclaration":3495,"src":"7475:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"}},"visibility":"internal"}],"id":2876,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2873,"name":"LibAppStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"7513:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibAppStorage_$3508_$","typeString":"type(library LibAppStorage)"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7527:1:11","memberName":"s","nodeType":"MemberAccess","referencedDeclaration":3507,"src":"7513:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AppStorage_$3495_storage_ptr_$","typeString":"function () pure returns (struct LibAppStorage.AppStorage storage pointer)"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7513:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7475:55:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2885,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"7611:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2886,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7614:18:11","memberName":"DEFAULT_ADMIN_ROLE","nodeType":"MemberAccess","referencedDeclaration":3433,"src":"7611:21:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2887,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7634:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7638:6:11","memberName":"sender","nodeType":"MemberAccess","src":"7634:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"arguments":[{"id":2881,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7596:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_QuizGameModeFacet_$2964","typeString":"contract QuizGameModeFacet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_QuizGameModeFacet_$2964","typeString":"contract QuizGameModeFacet"}],"id":2880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7588:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2879,"name":"address","nodeType":"ElementaryTypeName","src":"7588:7:11","typeDescriptions":{}}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7588:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2878,"name":"AccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"7563:24:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AccessControlUpgradeable_$362_$","typeString":"type(contract AccessControlUpgradeable)"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7563:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AccessControlUpgradeable_$362","typeString":"contract AccessControlUpgradeable"}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7603:7:11","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":116,"src":"7563:47:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view external returns (bool)"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7563:82:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"expression":{"id":2897,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"7710:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2898,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7713:12:11","memberName":"CREATOR_ROLE","nodeType":"MemberAccess","referencedDeclaration":3437,"src":"7710:15:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2899,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7727:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7731:6:11","memberName":"sender","nodeType":"MemberAccess","src":"7727:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"arguments":[{"id":2893,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7695:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_QuizGameModeFacet_$2964","typeString":"contract QuizGameModeFacet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_QuizGameModeFacet_$2964","typeString":"contract QuizGameModeFacet"}],"id":2892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7687:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2891,"name":"address","nodeType":"ElementaryTypeName","src":"7687:7:11","typeDescriptions":{}}},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7687:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2890,"name":"AccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"7662:24:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AccessControlUpgradeable_$362_$","typeString":"type(contract AccessControlUpgradeable)"}},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AccessControlUpgradeable_$362","typeString":"contract AccessControlUpgradeable"}},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7702:7:11","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":116,"src":"7662:47:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view external returns (bool)"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7563:175:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2043616c6c6572206973206e6f7420612067616d652061646d696e206f722063726561746f72","id":2903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7753:54:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e88ff903b5da47caf8312515a904eec951bba98a332c7caf38d53df0a362d7a4","typeString":"literal_string \"AccessControl: Caller is not a game admin or creator\""},"value":"AccessControl: Caller is not a game admin or creator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e88ff903b5da47caf8312515a904eec951bba98a332c7caf38d53df0a362d7a4","typeString":"literal_string \"AccessControl: Caller is not a game admin or creator\""}],"id":2877,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7541:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7541:277:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2905,"nodeType":"ExpressionStatement","src":"7541:277:11"},{"assignments":[2908],"declarations":[{"constant":false,"id":2908,"mutability":"mutable","name":"question","nameLocation":"7848:8:11","nodeType":"VariableDeclaration","scope":2962,"src":"7831:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question"},"typeName":{"id":2907,"nodeType":"UserDefinedTypeName","pathNode":{"id":2906,"name":"Question","nameLocations":["7831:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2042,"src":"7831:8:11"},"referencedDeclaration":2042,"src":"7831:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question"}},"visibility":"internal"}],"id":2913,"initialValue":{"baseExpression":{"expression":{"id":2909,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"7859:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2910,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7862:9:11","memberName":"questions","nodeType":"MemberAccess","referencedDeclaration":3471,"src":"7859:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Question_$2042_storage_$","typeString":"mapping(uint256 => struct Question storage ref)"}},"id":2912,"indexExpression":{"id":2911,"name":"_questionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"7872:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7859:25:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage","typeString":"struct Question storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7831:53:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2915,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"7903:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7912:17:11","memberName":"correctAnswerHash","nodeType":"MemberAccess","referencedDeclaration":2015,"src":"7903:26:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7941:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7933:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7933:7:11","typeDescriptions":{}}},"id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7933:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7903:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a205175657374696f6e20646f6573206e6f7420657869737420696e2062616e6b2e","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7945:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b05f0ac8aababd170486f06a20dcbfb883c667e2379f79083f2a64573b94c20e","typeString":"literal_string \"Quiz: Question does not exist in bank.\""},"value":"Quiz: Question does not exist in bank."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b05f0ac8aababd170486f06a20dcbfb883c667e2379f79083f2a64573b94c20e","typeString":"literal_string \"Quiz: Question does not exist in bank.\""}],"id":2914,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7895:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:91:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2924,"nodeType":"ExpressionStatement","src":"7895:91:11"},{"expression":{"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2925,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"8113:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2927,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8122:8:11","memberName":"isClosed","nodeType":"MemberAccess","referencedDeclaration":2025,"src":"8113:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8133:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8113:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2930,"nodeType":"ExpressionStatement","src":"8113:25:11"},{"expression":{"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2931,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"8149:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2933,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8158:22:11","memberName":"firstCorrectAnswerTime","nodeType":"MemberAccess","referencedDeclaration":2032,"src":"8149:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8183:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8149:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2936,"nodeType":"ExpressionStatement","src":"8149:35:11"},{"expression":{"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2937,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"8195:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8204:18:11","memberName":"firstSolverAddress","nodeType":"MemberAccess","referencedDeclaration":2034,"src":"8195:27:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8233:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8225:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2940,"name":"address","nodeType":"ElementaryTypeName","src":"8225:7:11","typeDescriptions":{}}},"id":2943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8225:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8195:40:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2945,"nodeType":"ExpressionStatement","src":"8195:40:11"},{"expression":{"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2946,"name":"question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"8340:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question storage pointer"}},"id":2948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8349:18:11","memberName":"poolCorrectSolvers","nodeType":"MemberAccess","referencedDeclaration":2037,"src":"8340:27:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8384:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8370:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2949,"name":"address","nodeType":"ElementaryTypeName","src":"8374:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2950,"nodeType":"ArrayTypeName","src":"8374:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8370:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"8340:46:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2955,"nodeType":"ExpressionStatement","src":"8340:46:11"},{"eventCall":{"arguments":[{"id":2957,"name":"_questionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"8832:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2958,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8845:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8849:6:11","memberName":"sender","nodeType":"MemberAccess","src":"8845:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2956,"name":"QuestionActivatedFromBank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"8806:25:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8806:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2961,"nodeType":"EmitStatement","src":"8801:55:11"}]},"functionSelector":"686caeaf","id":2963,"implemented":true,"kind":"function","modifiers":[],"name":"activateQuestionFromBank","nameLocation":"7411:24:11","nodeType":"FunctionDefinition","parameters":{"id":2866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2865,"mutability":"mutable","name":"_questionId","nameLocation":"7444:11:11","nodeType":"VariableDeclaration","scope":2963,"src":"7436:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2864,"name":"uint256","nodeType":"ElementaryTypeName","src":"7436:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7435:21:11"},"returnParameters":{"id":2867,"nodeType":"ParameterList","parameters":[],"src":"7464:0:11"},"scope":2964,"src":"7402:1462:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2965,"src":"617:8444:11","usedErrors":[],"usedEvents":[3320,3330,3338,3346,3350,3356,3362,3368,3380,3390]}],"src":"33:9030:11"},"id":11},"contracts/facets/QuizParticipationFacet.sol":{"ast":{"absolutePath":"contracts/facets/QuizParticipationFacet.sol","exportedSymbols":{"AccessControlUpgradeable":[362],"IMerkleFacet":[3260],"IQuizGameEvents":[3391],"LibAppStorage":[3508],"Question":[2042],"Quiz":[2059],"QuizParticipationFacet":[3230]},"id":3231,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2966,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:12"},{"absolutePath":"contracts/libraries/LibAppStorage.sol","file":"../libraries/LibAppStorage.sol","id":2968,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3231,"sourceUnit":3509,"src":"61:63:12","symbolAliases":[{"foreign":{"id":2967,"name":"LibAppStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"70:13:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","id":2970,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3231,"sourceUnit":363,"src":"126:115:12","symbolAliases":[{"foreign":{"id":2969,"name":"AccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"135:24:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IQuizGameEvents.sol","file":"../interfaces/IQuizGameEvents.sol","id":2972,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3231,"sourceUnit":3392,"src":"243:68:12","symbolAliases":[{"foreign":{"id":2971,"name":"IQuizGameEvents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"252:15:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/QuizTypes.sol","file":"../QuizTypes.sol","id":2975,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3231,"sourceUnit":2060,"src":"313:50:12","symbolAliases":[{"foreign":{"id":2973,"name":"Question","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"322:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2974,"name":"Quiz","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"332:4:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IMerkleFacet.sol","file":"../interfaces/IMerkleFacet.sol","id":2977,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3231,"sourceUnit":3261,"src":"365:62:12","symbolAliases":[{"foreign":{"id":2976,"name":"IMerkleFacet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"374:12:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2979,"name":"IQuizGameEvents","nameLocations":["614:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":3391,"src":"614:15:12"},"id":2980,"nodeType":"InheritanceSpecifier","src":"614:15:12"}],"canonicalName":"QuizParticipationFacet","contractDependencies":[],"contractKind":"contract","documentation":{"id":2978,"nodeType":"StructuredDocumentation","src":"431:146:12","text":" @title QuizParticipationFacet\n @dev Facet ที่จัดการ Logic การเข้าร่วมเกมควิซ"},"fullyImplemented":true,"id":3230,"linearizedBaseContracts":[3230,3391],"name":"QuizParticipationFacet","nameLocation":"588:22:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2992,"nodeType":"Block","src":"722:41:12","statements":[{"expression":{"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2986,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"733:2:12","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2987,"name":"LibAppStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"738:13:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibAppStorage_$3508_$","typeString":"type(library LibAppStorage)"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"752:1:12","memberName":"s","nodeType":"MemberAccess","referencedDeclaration":3507,"src":"738:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AppStorage_$3495_storage_ptr_$","typeString":"function () pure returns (struct LibAppStorage.AppStorage storage pointer)"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"738:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"src":"733:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":2991,"nodeType":"ExpressionStatement","src":"733:22:12"}]},"id":2993,"implemented":true,"kind":"function","modifiers":[],"name":"_appStorage","nameLocation":"648:11:12","nodeType":"FunctionDefinition","parameters":{"id":2981,"nodeType":"ParameterList","parameters":[],"src":"659:2:12"},"returnParameters":{"id":2985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2984,"mutability":"mutable","name":"ds","nameLocation":"718:2:12","nodeType":"VariableDeclaration","scope":2993,"src":"685:35:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"},"typeName":{"id":2983,"nodeType":"UserDefinedTypeName","pathNode":{"id":2982,"name":"LibAppStorage.AppStorage","nameLocations":["685:13:12","699:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3495,"src":"685:24:12"},"referencedDeclaration":3495,"src":"685:24:12","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"}},"visibility":"internal"}],"src":"684:37:12"},"scope":3230,"src":"639:124:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3018,"nodeType":"Block","src":"809:229:12","statements":[{"assignments":[3001],"declarations":[{"constant":false,"id":3001,"mutability":"mutable","name":"ds","nameLocation":"853:2:12","nodeType":"VariableDeclaration","scope":3018,"src":"820:35:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"},"typeName":{"id":3000,"nodeType":"UserDefinedTypeName","pathNode":{"id":2999,"name":"LibAppStorage.AppStorage","nameLocations":["820:13:12","834:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3495,"src":"820:24:12"},"referencedDeclaration":3495,"src":"820:24:12","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"}},"visibility":"internal"}],"id":3004,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3002,"name":"_appStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"858:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AppStorage_$3495_storage_ptr_$","typeString":"function () pure returns (struct LibAppStorage.AppStorage storage pointer)"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"858:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"820:51:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"expression":{"id":3006,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"904:2:12","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":3007,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"907:7:12","memberName":"quizzes","nodeType":"MemberAccess","referencedDeclaration":3476,"src":"904:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Quiz_$2059_storage_$","typeString":"mapping(uint256 => struct Quiz storage ref)"}},"id":3009,"indexExpression":{"id":3008,"name":"_quizId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"915:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"904:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_Quiz_$2059_storage","typeString":"struct Quiz storage ref"}},"id":3010,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"924:7:12","memberName":"creator","nodeType":"MemberAccess","referencedDeclaration":2046,"src":"904:27:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3011,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"935:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"939:6:12","memberName":"sender","nodeType":"MemberAccess","src":"935:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"904:41:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2043616c6c6572206973206e6f7420746865207175697a2063726561746f72","id":3014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"960:47:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b0b8f79c3480da0c2f587be5aa845b031866e35d858e48878d218a953e9b1e3","typeString":"literal_string \"AccessControl: Caller is not the quiz creator\""},"value":"AccessControl: Caller is not the quiz creator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0b0b8f79c3480da0c2f587be5aa845b031866e35d858e48878d218a953e9b1e3","typeString":"literal_string \"AccessControl: Caller is not the quiz creator\""}],"id":3005,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"882:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"882:136:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3016,"nodeType":"ExpressionStatement","src":"882:136:12"},{"id":3017,"nodeType":"PlaceholderStatement","src":"1029:1:12"}]},"id":3019,"name":"onlyCreator","nameLocation":"780:11:12","nodeType":"ModifierDefinition","parameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2995,"mutability":"mutable","name":"_quizId","nameLocation":"800:7:12","nodeType":"VariableDeclaration","scope":3019,"src":"792:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2994,"name":"uint256","nodeType":"ElementaryTypeName","src":"792:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"791:17:12"},"src":"771:267:12","virtual":false,"visibility":"internal"},{"body":{"id":3101,"nodeType":"Block","src":"1172:587:12","statements":[{"assignments":[3029],"declarations":[{"constant":false,"id":3029,"mutability":"mutable","name":"ds","nameLocation":"1216:2:12","nodeType":"VariableDeclaration","scope":3101,"src":"1183:35:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"},"typeName":{"id":3028,"nodeType":"UserDefinedTypeName","pathNode":{"id":3027,"name":"LibAppStorage.AppStorage","nameLocations":["1183:13:12","1197:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3495,"src":"1183:24:12"},"referencedDeclaration":3495,"src":"1183:24:12","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"}},"visibility":"internal"}],"id":3032,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3030,"name":"_appStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"1221:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AppStorage_$3495_storage_ptr_$","typeString":"function () pure returns (struct LibAppStorage.AppStorage storage pointer)"}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1221:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1183:51:12"},{"assignments":[3035],"declarations":[{"constant":false,"id":3035,"mutability":"mutable","name":"quiz","nameLocation":"1258:4:12","nodeType":"VariableDeclaration","scope":3101,"src":"1245:17:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Quiz_$2059_storage_ptr","typeString":"struct Quiz"},"typeName":{"id":3034,"nodeType":"UserDefinedTypeName","pathNode":{"id":3033,"name":"Quiz","nameLocations":["1245:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":2059,"src":"1245:4:12"},"referencedDeclaration":2059,"src":"1245:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Quiz_$2059_storage_ptr","typeString":"struct Quiz"}},"visibility":"internal"}],"id":3040,"initialValue":{"baseExpression":{"expression":{"id":3036,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"1265:2:12","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":3037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1268:7:12","memberName":"quizzes","nodeType":"MemberAccess","referencedDeclaration":3476,"src":"1265:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Quiz_$2059_storage_$","typeString":"mapping(uint256 => struct Quiz storage ref)"}},"id":3039,"indexExpression":{"id":3038,"name":"_quizId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"1276:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1265:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_Quiz_$2059_storage","typeString":"struct Quiz storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1245:39:12"},{"expression":{"arguments":[{"expression":{"id":3042,"name":"quiz","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"1305:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Quiz_$2059_storage_ptr","typeString":"struct Quiz storage pointer"}},"id":3043,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1310:8:12","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2054,"src":"1305:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a205175697a206973206e6f74206163746976652e","id":3044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1320:27:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_18c6d062a724f311b873286930f7a3669c18aa37dbd5ea58fa0edd50db4ae977","typeString":"literal_string \"Quiz: Quiz is not active.\""},"value":"Quiz: Quiz is not active."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_18c6d062a724f311b873286930f7a3669c18aa37dbd5ea58fa0edd50db4ae977","typeString":"literal_string \"Quiz: Quiz is not active.\""}],"id":3041,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1297:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1297:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3046,"nodeType":"ExpressionStatement","src":"1297:51:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":3048,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"1367:2:12","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":3049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1370:18:12","memberName":"quizParticipations","nodeType":"MemberAccess","referencedDeclaration":3483,"src":"1367:21:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_PlayerParticipation_$3431_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct LibAppStorage.PlayerParticipation storage ref))"}},"id":3051,"indexExpression":{"id":3050,"name":"_quizId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"1389:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1367:30:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PlayerParticipation_$3431_storage_$","typeString":"mapping(address => struct LibAppStorage.PlayerParticipation storage ref)"}},"id":3054,"indexExpression":{"expression":{"id":3052,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1398:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1402:6:12","memberName":"sender","nodeType":"MemberAccess","src":"1398:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1367:42:12","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerParticipation_$3431_storage","typeString":"struct LibAppStorage.PlayerParticipation storage ref"}},"id":3055,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1410:9:12","memberName":"hasJoined","nodeType":"MemberAccess","referencedDeclaration":3418,"src":"1367:52:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":3056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1423:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1367:61:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a20596f75206861766520616c7265616479206a6f696e65642074686973207175697a2e","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1430:42:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_3a4b2ca22d8fce8348c77e4e0559997962bdcc3e910c47489f80b045d588eed7","typeString":"literal_string \"Quiz: You have already joined this quiz.\""},"value":"Quiz: You have already joined this quiz."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3a4b2ca22d8fce8348c77e4e0559997962bdcc3e910c47489f80b045d588eed7","typeString":"literal_string \"Quiz: You have already joined this quiz.\""}],"id":3047,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1359:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1359:114:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3060,"nodeType":"ExpressionStatement","src":"1359:114:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"expression":{"id":3062,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"1492:2:12","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":3063,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1495:11:12","memberName":"quizPlayers","nodeType":"MemberAccess","referencedDeclaration":3488,"src":"1492:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":3065,"indexExpression":{"id":3064,"name":"_quizId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"1507:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1492:23:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1516:6:12","memberName":"length","nodeType":"MemberAccess","src":"1492:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3067,"name":"quiz","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"1525:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Quiz_$2059_storage_ptr","typeString":"struct Quiz storage pointer"}},"id":3068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1530:15:12","memberName":"maxParticipants","nodeType":"MemberAccess","referencedDeclaration":2052,"src":"1525:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1492:53:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a20546865207175697a2069732066756c6c2e","id":3070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1547:25:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_58cd2d0b843e07f40dd7f65f7e3a588b0cc04700352b9e8d749227e1b7ef45b4","typeString":"literal_string \"Quiz: The quiz is full.\""},"value":"Quiz: The quiz is full."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_58cd2d0b843e07f40dd7f65f7e3a588b0cc04700352b9e8d749227e1b7ef45b4","typeString":"literal_string \"Quiz: The quiz is full.\""}],"id":3061,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1484:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1484:89:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3072,"nodeType":"ExpressionStatement","src":"1484:89:12"},{"expression":{"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":3073,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"1586:2:12","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":3078,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1589:18:12","memberName":"quizParticipations","nodeType":"MemberAccess","referencedDeclaration":3483,"src":"1586:21:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_PlayerParticipation_$3431_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct LibAppStorage.PlayerParticipation storage ref))"}},"id":3079,"indexExpression":{"id":3075,"name":"_quizId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"1608:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1586:30:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PlayerParticipation_$3431_storage_$","typeString":"mapping(address => struct LibAppStorage.PlayerParticipation storage ref)"}},"id":3080,"indexExpression":{"expression":{"id":3076,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1617:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1621:6:12","memberName":"sender","nodeType":"MemberAccess","src":"1617:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1586:42:12","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerParticipation_$3431_storage","typeString":"struct LibAppStorage.PlayerParticipation storage ref"}},"id":3081,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1629:9:12","memberName":"hasJoined","nodeType":"MemberAccess","referencedDeclaration":3418,"src":"1586:52:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1641:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1586:59:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3084,"nodeType":"ExpressionStatement","src":"1586:59:12"},{"expression":{"arguments":[{"expression":{"id":3091,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1685:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1689:6:12","memberName":"sender","nodeType":"MemberAccess","src":"1685:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"expression":{"id":3085,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"1656:2:12","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":3088,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1659:11:12","memberName":"quizPlayers","nodeType":"MemberAccess","referencedDeclaration":3488,"src":"1656:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":3089,"indexExpression":{"id":3087,"name":"_quizId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"1671:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1656:23:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1680:4:12","memberName":"push","nodeType":"MemberAccess","src":"1656:28:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3094,"nodeType":"ExpressionStatement","src":"1656:40:12"},{"eventCall":{"arguments":[{"expression":{"id":3096,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1731:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1735:6:12","memberName":"sender","nodeType":"MemberAccess","src":"1731:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3098,"name":"_quizId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"1743:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3095,"name":"PlayerJoinedQuiz","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"1714:16:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1714:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3100,"nodeType":"EmitStatement","src":"1709:42:12"}]},"documentation":{"id":3020,"nodeType":"StructuredDocumentation","src":"1046:78:12","text":"@notice ผู้เล่นเข้าร่วมเกมควิซ"},"functionSelector":"20725d59","id":3102,"implemented":true,"kind":"function","modifiers":[],"name":"joinQuiz","nameLocation":"1139:8:12","nodeType":"FunctionDefinition","parameters":{"id":3023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3022,"mutability":"mutable","name":"_quizId","nameLocation":"1156:7:12","nodeType":"VariableDeclaration","scope":3102,"src":"1148:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"1148:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1147:17:12"},"returnParameters":{"id":3024,"nodeType":"ParameterList","parameters":[],"src":"1172:0:12"},"scope":3230,"src":"1130:629:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3228,"nodeType":"Block","src":"2085:1096:12","statements":[{"assignments":[3121],"declarations":[{"constant":false,"id":3121,"mutability":"mutable","name":"ds","nameLocation":"2129:2:12","nodeType":"VariableDeclaration","scope":3228,"src":"2096:35:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"},"typeName":{"id":3120,"nodeType":"UserDefinedTypeName","pathNode":{"id":3119,"name":"LibAppStorage.AppStorage","nameLocations":["2096:13:12","2110:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3495,"src":"2096:24:12"},"referencedDeclaration":3495,"src":"2096:24:12","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"}},"visibility":"internal"}],"id":3124,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3122,"name":"_appStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"2134:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AppStorage_$3495_storage_ptr_$","typeString":"function () pure returns (struct LibAppStorage.AppStorage storage pointer)"}},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2134:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2096:51:12"},{"assignments":[3129],"declarations":[{"constant":false,"id":3129,"mutability":"mutable","name":"player","nameLocation":"2200:6:12","nodeType":"VariableDeclaration","scope":3228,"src":"2158:48:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerParticipation_$3431_storage_ptr","typeString":"struct LibAppStorage.PlayerParticipation"},"typeName":{"id":3128,"nodeType":"UserDefinedTypeName","pathNode":{"id":3127,"name":"LibAppStorage.PlayerParticipation","nameLocations":["2158:13:12","2172:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":3431,"src":"2158:33:12"},"referencedDeclaration":3431,"src":"2158:33:12","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerParticipation_$3431_storage_ptr","typeString":"struct LibAppStorage.PlayerParticipation"}},"visibility":"internal"}],"id":3137,"initialValue":{"baseExpression":{"baseExpression":{"expression":{"id":3130,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"2209:2:12","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":3131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2212:18:12","memberName":"quizParticipations","nodeType":"MemberAccess","referencedDeclaration":3483,"src":"2209:21:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_PlayerParticipation_$3431_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct LibAppStorage.PlayerParticipation storage ref))"}},"id":3133,"indexExpression":{"id":3132,"name":"_quizId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"2231:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2209:30:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PlayerParticipation_$3431_storage_$","typeString":"mapping(address => struct LibAppStorage.PlayerParticipation storage ref)"}},"id":3136,"indexExpression":{"expression":{"id":3134,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2240:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2244:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2240:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2209:42:12","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerParticipation_$3431_storage","typeString":"struct LibAppStorage.PlayerParticipation storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2158:93:12"},{"assignments":[3140],"declarations":[{"constant":false,"id":3140,"mutability":"mutable","name":"quiz","nameLocation":"2275:4:12","nodeType":"VariableDeclaration","scope":3228,"src":"2262:17:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Quiz_$2059_storage_ptr","typeString":"struct Quiz"},"typeName":{"id":3139,"nodeType":"UserDefinedTypeName","pathNode":{"id":3138,"name":"Quiz","nameLocations":["2262:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":2059,"src":"2262:4:12"},"referencedDeclaration":2059,"src":"2262:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Quiz_$2059_storage_ptr","typeString":"struct Quiz"}},"visibility":"internal"}],"id":3145,"initialValue":{"baseExpression":{"expression":{"id":3141,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"2282:2:12","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage storage pointer"}},"id":3142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2285:7:12","memberName":"quizzes","nodeType":"MemberAccess","referencedDeclaration":3476,"src":"2282:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Quiz_$2059_storage_$","typeString":"mapping(uint256 => struct Quiz storage ref)"}},"id":3144,"indexExpression":{"id":3143,"name":"_quizId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"2293:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2282:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_Quiz_$2059_storage","typeString":"struct Quiz storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2262:39:12"},{"expression":{"arguments":[{"expression":{"id":3147,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"2322:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerParticipation_$3431_storage_ptr","typeString":"struct LibAppStorage.PlayerParticipation storage pointer"}},"id":3148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2329:9:12","memberName":"hasJoined","nodeType":"MemberAccess","referencedDeclaration":3418,"src":"2322:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a20596f75206d757374206a6f696e20746865207175697a2066697273742e","id":3149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2340:37:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_da7ecbe1ffc476fdfa3098d6c52d971effbfb4b7edb43bc506c3897e95e68d38","typeString":"literal_string \"Quiz: You must join the quiz first.\""},"value":"Quiz: You must join the quiz first."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_da7ecbe1ffc476fdfa3098d6c52d971effbfb4b7edb43bc506c3897e95e68d38","typeString":"literal_string \"Quiz: You must join the quiz first.\""}],"id":3146,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2314:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2314:64:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3151,"nodeType":"ExpressionStatement","src":"2314:64:12"},{"expression":{"arguments":[{"expression":{"id":3153,"name":"quiz","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"2397:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Quiz_$2059_storage_ptr","typeString":"struct Quiz storage pointer"}},"id":3154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2402:8:12","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2054,"src":"2397:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a205175697a206973206e6f74206163746976652e","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2412:27:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_18c6d062a724f311b873286930f7a3669c18aa37dbd5ea58fa0edd50db4ae977","typeString":"literal_string \"Quiz: Quiz is not active.\""},"value":"Quiz: Quiz is not active."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_18c6d062a724f311b873286930f7a3669c18aa37dbd5ea58fa0edd50db4ae977","typeString":"literal_string \"Quiz: Quiz is not active.\""}],"id":3152,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2389:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2389:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3157,"nodeType":"ExpressionStatement","src":"2389:51:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3159,"name":"_questionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"2459:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3160,"name":"quiz","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"2476:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Quiz_$2059_storage_ptr","typeString":"struct Quiz storage pointer"}},"id":3161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2481:14:12","memberName":"totalQuestions","nodeType":"MemberAccess","referencedDeclaration":2050,"src":"2476:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2459:36:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a205175657374696f6e20696e646578206f7574206f6620626f756e64732e","id":3163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2497:37:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_484540dae2769e5e292005c3f863d48f2f99c08074b5a1d7881410c4845ee6c8","typeString":"literal_string \"Quiz: Question index out of bounds.\""},"value":"Quiz: Question index out of bounds."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_484540dae2769e5e292005c3f863d48f2f99c08074b5a1d7881410c4845ee6c8","typeString":"literal_string \"Quiz: Question index out of bounds.\""}],"id":3158,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2451:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2451:84:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3165,"nodeType":"ExpressionStatement","src":"2451:84:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3167,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"2554:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerParticipation_$3431_storage_ptr","typeString":"struct LibAppStorage.PlayerParticipation storage pointer"}},"id":3168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2561:25:12","memberName":"lastAnsweredQuestionIndex","nodeType":"MemberAccess","referencedDeclaration":3422,"src":"2554:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3169,"name":"_questionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"2589:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2554:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a20596f75206861766520616c726561647920616e737765726564206120686967686572206f7220657175616c20696e646578207175657374696f6e2e","id":3171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2605:67:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_741bfe6c60756e38f45af7569d837505318258be1855d6a3da001a1ee87a075e","typeString":"literal_string \"Quiz: You have already answered a higher or equal index question.\""},"value":"Quiz: You have already answered a higher or equal index question."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_741bfe6c60756e38f45af7569d837505318258be1855d6a3da001a1ee87a075e","typeString":"literal_string \"Quiz: You have already answered a higher or equal index question.\""}],"id":3166,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2546:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2546:127:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3173,"nodeType":"ExpressionStatement","src":"2546:127:12"},{"assignments":[3175],"declarations":[{"constant":false,"id":3175,"mutability":"mutable","name":"verified","nameLocation":"2739:8:12","nodeType":"VariableDeclaration","scope":3228,"src":"2734:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3174,"name":"bool","nodeType":"ElementaryTypeName","src":"2734:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3186,"initialValue":{"arguments":[{"id":3183,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"2789:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3184,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"2795:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}],"expression":{"arguments":[{"arguments":[{"id":3179,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2771:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_QuizParticipationFacet_$3230","typeString":"contract QuizParticipationFacet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_QuizParticipationFacet_$3230","typeString":"contract QuizParticipationFacet"}],"id":3178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2763:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3177,"name":"address","nodeType":"ElementaryTypeName","src":"2763:7:12","typeDescriptions":{}}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3176,"name":"IMerkleFacet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"2750:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMerkleFacet_$3260_$","typeString":"type(contract IMerkleFacet)"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2750:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMerkleFacet_$3260","typeString":"contract IMerkleFacet"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2778:10:12","memberName":"verifyQuiz","nodeType":"MemberAccess","referencedDeclaration":3252,"src":"2750:38:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes32,bytes32[] memory) view external returns (bool)"}},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2750:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2734:67:12"},{"expression":{"arguments":[{"id":3188,"name":"verified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"2820:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175697a3a20496e76616c696420616e737765722070726f6f662e","id":3189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2830:29:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f66e29fdb200c5e5f0126fbb82245c5a7050766b4305e91f63a3f70b496e150","typeString":"literal_string \"Quiz: Invalid answer proof.\""},"value":"Quiz: Invalid answer proof."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0f66e29fdb200c5e5f0126fbb82245c5a7050766b4305e91f63a3f70b496e150","typeString":"literal_string \"Quiz: Invalid answer proof.\""}],"id":3187,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2812:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2812:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3191,"nodeType":"ExpressionStatement","src":"2812:48:12"},{"expression":{"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3192,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"2873:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerParticipation_$3431_storage_ptr","typeString":"struct LibAppStorage.PlayerParticipation storage pointer"}},"id":3194,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2880:25:12","memberName":"lastAnsweredQuestionIndex","nodeType":"MemberAccess","referencedDeclaration":3422,"src":"2873:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3195,"name":"_questionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"2908:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2873:49:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3197,"nodeType":"ExpressionStatement","src":"2873:49:12"},{"expression":{"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3198,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"2933:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerParticipation_$3431_storage_ptr","typeString":"struct LibAppStorage.PlayerParticipation storage pointer"}},"id":3201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2940:13:12","memberName":"playerAnswers","nodeType":"MemberAccess","referencedDeclaration":3426,"src":"2933:20:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint8_$","typeString":"mapping(uint256 => uint8)"}},"id":3202,"indexExpression":{"id":3200,"name":"_questionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"2954:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2933:36:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3203,"name":"_submittedAnswerIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"2972:21:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2933:60:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3205,"nodeType":"ExpressionStatement","src":"2933:60:12"},{"expression":{"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3206,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"3004:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerParticipation_$3431_storage_ptr","typeString":"struct LibAppStorage.PlayerParticipation storage pointer"}},"id":3209,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3011:11:12","memberName":"hasAnswered","nodeType":"MemberAccess","referencedDeclaration":3430,"src":"3004:18:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":3210,"indexExpression":{"id":3208,"name":"_questionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"3023:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3004:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3041:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3004:41:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3213,"nodeType":"ExpressionStatement","src":"3004:41:12"},{"expression":{"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3056:14:12","subExpression":{"expression":{"id":3214,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"3056:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerParticipation_$3431_storage_ptr","typeString":"struct LibAppStorage.PlayerParticipation storage pointer"}},"id":3216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3063:5:12","memberName":"score","nodeType":"MemberAccess","referencedDeclaration":3420,"src":"3056:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3218,"nodeType":"ExpressionStatement","src":"3056:14:12"},{"eventCall":{"arguments":[{"expression":{"id":3220,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3108:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3112:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3108:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3222,"name":"_quizId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"3120:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3223,"name":"_questionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"3129:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3224,"name":"_submittedAnswerIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"3145:21:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"hexValue":"74727565","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3168:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3219,"name":"QuizAnswerSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"3088:19:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bool_$returns$__$","typeString":"function (address,uint256,uint256,uint8,bool)"}},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3088:85:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3227,"nodeType":"EmitStatement","src":"3083:90:12"}]},"documentation":{"id":3103,"nodeType":"StructuredDocumentation","src":"1767:117:12","text":"@notice ผู้เล่นส่งคำตอบสำหรับคำถามในเกมควิซ"},"functionSelector":"96702398","id":3229,"implemented":true,"kind":"function","modifiers":[],"name":"submitQuizAnswer","nameLocation":"1899:16:12","nodeType":"FunctionDefinition","parameters":{"id":3115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3105,"mutability":"mutable","name":"_quizId","nameLocation":"1934:7:12","nodeType":"VariableDeclaration","scope":3229,"src":"1926:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3104,"name":"uint256","nodeType":"ElementaryTypeName","src":"1926:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3107,"mutability":"mutable","name":"_questionIndex","nameLocation":"1960:14:12","nodeType":"VariableDeclaration","scope":3229,"src":"1952:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3106,"name":"uint256","nodeType":"ElementaryTypeName","src":"1952:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3109,"mutability":"mutable","name":"_submittedAnswerIndex","nameLocation":"1991:21:12","nodeType":"VariableDeclaration","scope":3229,"src":"1985:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3108,"name":"uint8","nodeType":"ElementaryTypeName","src":"1985:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3111,"mutability":"mutable","name":"leaf","nameLocation":"2031:4:12","nodeType":"VariableDeclaration","scope":3229,"src":"2023:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3110,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2023:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3114,"mutability":"mutable","name":"proof","nameLocation":"2065:5:12","nodeType":"VariableDeclaration","scope":3229,"src":"2046:24:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3112,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2046:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3113,"nodeType":"ArrayTypeName","src":"2046:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1915:162:12"},"returnParameters":{"id":3116,"nodeType":"ParameterList","parameters":[],"src":"2085:0:12"},"scope":3230,"src":"1890:1291:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3231,"src":"579:2605:12","usedErrors":[],"usedEvents":[3320,3330,3338,3346,3350,3356,3362,3368,3380,3390]}],"src":"33:3153:12"},"id":12},"contracts/interfaces/IMerkleFacet.sol":{"ast":{"absolutePath":"contracts/interfaces/IMerkleFacet.sol","exportedSymbols":{"IMerkleFacet":[3260]},"id":3261,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3232,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IMerkleFacet","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3260,"linearizedBaseContracts":[3260],"name":"IMerkleFacet","nameLocation":"71:12:13","nodeType":"ContractDefinition","nodes":[{"functionSelector":"ebe6d123","id":3242,"implemented":false,"kind":"function","modifiers":[],"name":"submitMerkleRoot","nameLocation":"100:16:13","nodeType":"FunctionDefinition","parameters":{"id":3240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3234,"mutability":"mutable","name":"quizId","nameLocation":"125:6:13","nodeType":"VariableDeclaration","scope":3242,"src":"117:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3233,"name":"uint256","nodeType":"ElementaryTypeName","src":"117:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3236,"mutability":"mutable","name":"root","nameLocation":"141:4:13","nodeType":"VariableDeclaration","scope":3242,"src":"133:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"133:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3239,"mutability":"mutable","name":"leaves","nameLocation":"166:6:13","nodeType":"VariableDeclaration","scope":3242,"src":"147:25:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"147:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3238,"nodeType":"ArrayTypeName","src":"147:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"116:57:13"},"returnParameters":{"id":3241,"nodeType":"ParameterList","parameters":[],"src":"182:0:13"},"scope":3260,"src":"91:92:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8350d44f","id":3252,"implemented":false,"kind":"function","modifiers":[],"name":"verifyQuiz","nameLocation":"198:10:13","nodeType":"FunctionDefinition","parameters":{"id":3248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"leaf","nameLocation":"217:4:13","nodeType":"VariableDeclaration","scope":3252,"src":"209:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"209:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3247,"mutability":"mutable","name":"proof","nameLocation":"242:5:13","nodeType":"VariableDeclaration","scope":3252,"src":"223:24:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"223:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3246,"nodeType":"ArrayTypeName","src":"223:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"208:40:13"},"returnParameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3252,"src":"272:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3249,"name":"bool","nodeType":"ElementaryTypeName","src":"272:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"271:6:13"},"scope":3260,"src":"189:89:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"07d38f3f","id":3259,"implemented":false,"kind":"function","modifiers":[],"name":"getQuizIdFromLeaf","nameLocation":"293:17:13","nodeType":"FunctionDefinition","parameters":{"id":3255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3254,"mutability":"mutable","name":"leaf","nameLocation":"319:4:13","nodeType":"VariableDeclaration","scope":3259,"src":"311:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"311:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"310:14:13"},"returnParameters":{"id":3258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3259,"src":"348:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3256,"name":"uint256","nodeType":"ElementaryTypeName","src":"348:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"347:9:13"},"scope":3260,"src":"284:73:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3261,"src":"61:299:13","usedErrors":[],"usedEvents":[]}],"src":"33:329:13"},"id":13},"contracts/interfaces/IPoolManager.sol":{"ast":{"absolutePath":"contracts/interfaces/IPoolManager.sol","exportedSymbols":{"IPoolManager":[3285]},"id":3286,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3262,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IPoolManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3285,"linearizedBaseContracts":[3285],"name":"IPoolManager","nameLocation":"71:12:14","nodeType":"ContractDefinition","nodes":[{"functionSelector":"91200209","id":3269,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawForUser","nameLocation":"100:15:14","nodeType":"FunctionDefinition","parameters":{"id":3267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"_user","nameLocation":"124:5:14","nodeType":"VariableDeclaration","scope":3269,"src":"116:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3263,"name":"address","nodeType":"ElementaryTypeName","src":"116:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3266,"mutability":"mutable","name":"_amount","nameLocation":"139:7:14","nodeType":"VariableDeclaration","scope":3269,"src":"131:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3265,"name":"uint256","nodeType":"ElementaryTypeName","src":"131:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"115:32:14"},"returnParameters":{"id":3268,"nodeType":"ParameterList","parameters":[],"src":"156:0:14"},"scope":3285,"src":"91:66:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fad7f387","id":3274,"implemented":false,"kind":"function","modifiers":[],"name":"mintAndTransferToTreasury","nameLocation":"172:25:14","nodeType":"FunctionDefinition","parameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"_amount","nameLocation":"206:7:14","nodeType":"VariableDeclaration","scope":3274,"src":"198:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3270,"name":"uint256","nodeType":"ElementaryTypeName","src":"198:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"197:17:14"},"returnParameters":{"id":3273,"nodeType":"ParameterList","parameters":[],"src":"223:0:14"},"scope":3285,"src":"163:61:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b6b55f25","id":3279,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"285:7:14","nodeType":"FunctionDefinition","parameters":{"id":3277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3276,"mutability":"mutable","name":"_amount","nameLocation":"301:7:14","nodeType":"VariableDeclaration","scope":3279,"src":"293:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3275,"name":"uint256","nodeType":"ElementaryTypeName","src":"293:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"292:17:14"},"returnParameters":{"id":3278,"nodeType":"ParameterList","parameters":[],"src":"318:0:14"},"scope":3285,"src":"276:43:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"764a36fb","id":3284,"implemented":false,"kind":"function","modifiers":[],"name":"setQuizGameDiamondAddress","nameLocation":"380:25:14","nodeType":"FunctionDefinition","parameters":{"id":3282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3281,"mutability":"mutable","name":"_newQuizGameDiamondAddress","nameLocation":"414:26:14","nodeType":"VariableDeclaration","scope":3284,"src":"406:34:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3280,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"405:36:14"},"returnParameters":{"id":3283,"nodeType":"ParameterList","parameters":[],"src":"450:0:14"},"scope":3285,"src":"371:80:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3286,"src":"61:393:14","usedErrors":[],"usedEvents":[]}],"src":"33:421:14"},"id":14},"contracts/interfaces/IQuizCoin.sol":{"ast":{"absolutePath":"contracts/interfaces/IQuizCoin.sol","exportedSymbols":{"IAccessControl":[799],"IERC20":[877],"IQuizCoin":[3306]},"id":3307,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3287,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3307,"sourceUnit":878,"src":"61:56:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"@openzeppelin/contracts/access/IAccessControl.sol","id":3289,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3307,"sourceUnit":800,"src":"119:59:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3290,"name":"IERC20","nameLocations":["230:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"230:6:15"},"id":3291,"nodeType":"InheritanceSpecifier","src":"230:6:15"},{"baseName":{"id":3292,"name":"IAccessControl","nameLocations":["238:14:15"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"238:14:15"},"id":3293,"nodeType":"InheritanceSpecifier","src":"238:14:15"}],"canonicalName":"IQuizCoin","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3306,"linearizedBaseContracts":[3306,799,877],"name":"IQuizCoin","nameLocation":"217:9:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"40c10f19","id":3300,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"408:4:15","nodeType":"FunctionDefinition","parameters":{"id":3298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"to","nameLocation":"421:2:15","nodeType":"VariableDeclaration","scope":3300,"src":"413:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3294,"name":"address","nodeType":"ElementaryTypeName","src":"413:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3297,"mutability":"mutable","name":"amount","nameLocation":"433:6:15","nodeType":"VariableDeclaration","scope":3300,"src":"425:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3296,"name":"uint256","nodeType":"ElementaryTypeName","src":"425:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"412:28:15"},"returnParameters":{"id":3299,"nodeType":"ParameterList","parameters":[],"src":"449:0:15"},"scope":3306,"src":"399:51:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d5391393","id":3305,"implemented":false,"kind":"function","modifiers":[],"name":"MINTER_ROLE","nameLocation":"607:11:15","nodeType":"FunctionDefinition","parameters":{"id":3301,"nodeType":"ParameterList","parameters":[],"src":"618:2:15"},"returnParameters":{"id":3304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3305,"src":"644:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"644:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"643:9:15"},"scope":3306,"src":"598:55:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3307,"src":"207:449:15","usedErrors":[726,729],"usedEvents":[738,747,756,811,820]}],"src":"33:623:15"},"id":15},"contracts/interfaces/IQuizGameEvents.sol":{"ast":{"absolutePath":"contracts/interfaces/IQuizGameEvents.sol","exportedSymbols":{"IQuizGameEvents":[3391],"LibAppStorage":[3508]},"id":3392,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3308,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:16"},{"absolutePath":"contracts/libraries/LibAppStorage.sol","file":"../libraries/LibAppStorage.sol","id":3310,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3392,"sourceUnit":3509,"src":"61:63:16","symbolAliases":[{"foreign":{"id":3309,"name":"LibAppStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"70:13:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IQuizGameEvents","contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":3391,"linearizedBaseContracts":[3391],"name":"IQuizGameEvents","nameLocation":"138:15:16","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"5fff8b8a05084a38562ea22f588b62938f68ad92fbfc50ee5b3dc2e69dd0d817","id":3320,"name":"QuestionCreated","nameLocation":"167:15:16","nodeType":"EventDefinition","parameters":{"id":3319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3312,"indexed":true,"mutability":"mutable","name":"questionId","nameLocation":"199:10:16","nodeType":"VariableDeclaration","scope":3320,"src":"183:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3311,"name":"uint256","nodeType":"ElementaryTypeName","src":"183:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3314,"indexed":true,"mutability":"mutable","name":"creator","nameLocation":"227:7:16","nodeType":"VariableDeclaration","scope":3320,"src":"211:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3313,"name":"address","nodeType":"ElementaryTypeName","src":"211:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3316,"indexed":false,"mutability":"mutable","name":"difficultyLevel","nameLocation":"244:15:16","nodeType":"VariableDeclaration","scope":3320,"src":"236:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3315,"name":"uint256","nodeType":"ElementaryTypeName","src":"236:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3318,"indexed":false,"mutability":"mutable","name":"baseRewardAmount","nameLocation":"269:16:16","nodeType":"VariableDeclaration","scope":3320,"src":"261:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3317,"name":"uint256","nodeType":"ElementaryTypeName","src":"261:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"182:104:16"},"src":"161:126:16"},{"anonymous":false,"eventSelector":"f13f0cafc2e76d9b040bc1cf8fe98f442675719960e4065425c2c750aa0e19a4","id":3330,"name":"AnswerSubmitted","nameLocation":"299:15:16","nodeType":"EventDefinition","parameters":{"id":3329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3322,"indexed":true,"mutability":"mutable","name":"questionId","nameLocation":"331:10:16","nodeType":"VariableDeclaration","scope":3330,"src":"315:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3321,"name":"uint256","nodeType":"ElementaryTypeName","src":"315:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3324,"indexed":true,"mutability":"mutable","name":"solver","nameLocation":"359:6:16","nodeType":"VariableDeclaration","scope":3330,"src":"343:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3323,"name":"address","nodeType":"ElementaryTypeName","src":"343:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3326,"indexed":false,"mutability":"mutable","name":"submittedAnswerHash","nameLocation":"375:19:16","nodeType":"VariableDeclaration","scope":3330,"src":"367:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3325,"name":"bytes32","nodeType":"ElementaryTypeName","src":"367:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3328,"indexed":false,"mutability":"mutable","name":"isCorrect","nameLocation":"401:9:16","nodeType":"VariableDeclaration","scope":3330,"src":"396:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3327,"name":"bool","nodeType":"ElementaryTypeName","src":"396:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"314:97:16"},"src":"293:119:16"},{"anonymous":false,"eventSelector":"f10cfe1413da6fb4d61b5fe0472eef72ef9191ca81db52b96f4143513960d32d","id":3338,"name":"HintPurchased","nameLocation":"424:13:16","nodeType":"EventDefinition","parameters":{"id":3337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3332,"indexed":true,"mutability":"mutable","name":"questionId","nameLocation":"454:10:16","nodeType":"VariableDeclaration","scope":3338,"src":"438:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3331,"name":"uint256","nodeType":"ElementaryTypeName","src":"438:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3334,"indexed":true,"mutability":"mutable","name":"buyer","nameLocation":"482:5:16","nodeType":"VariableDeclaration","scope":3338,"src":"466:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3333,"name":"address","nodeType":"ElementaryTypeName","src":"466:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3336,"indexed":false,"mutability":"mutable","name":"cost","nameLocation":"497:4:16","nodeType":"VariableDeclaration","scope":3338,"src":"489:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3335,"name":"uint256","nodeType":"ElementaryTypeName","src":"489:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"437:65:16"},"src":"418:85:16"},{"anonymous":false,"eventSelector":"ab7542bafced3da2d8c881cb2dd1de859fac7c20d3650d2902ad389a64e08883","id":3346,"name":"RewardDistributed","nameLocation":"515:17:16","nodeType":"EventDefinition","parameters":{"id":3345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3340,"indexed":true,"mutability":"mutable","name":"questionId","nameLocation":"549:10:16","nodeType":"VariableDeclaration","scope":3346,"src":"533:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3339,"name":"uint256","nodeType":"ElementaryTypeName","src":"533:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3342,"indexed":true,"mutability":"mutable","name":"solver","nameLocation":"577:6:16","nodeType":"VariableDeclaration","scope":3346,"src":"561:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3341,"name":"address","nodeType":"ElementaryTypeName","src":"561:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3344,"indexed":false,"mutability":"mutable","name":"rewardAmount","nameLocation":"593:12:16","nodeType":"VariableDeclaration","scope":3346,"src":"585:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3343,"name":"uint256","nodeType":"ElementaryTypeName","src":"585:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"532:74:16"},"src":"509:98:16"},{"anonymous":false,"eventSelector":"3c8f450bdfccd4e29a4d8e9602688d5e009772a7de7c40c7f27b8f8c129f01fa","id":3350,"name":"QuestionClosed","nameLocation":"619:14:16","nodeType":"EventDefinition","parameters":{"id":3349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"indexed":true,"mutability":"mutable","name":"questionId","nameLocation":"650:10:16","nodeType":"VariableDeclaration","scope":3350,"src":"634:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3347,"name":"uint256","nodeType":"ElementaryTypeName","src":"634:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:28:16"},"src":"613:49:16"},{"anonymous":false,"eventSelector":"98e392e74a792835e605c302c60c0435ac790334152fd4e6ca7ec970b332aaec","id":3356,"name":"QuestionRewardWindowStarted","nameLocation":"674:27:16","nodeType":"EventDefinition","parameters":{"id":3355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"indexed":true,"mutability":"mutable","name":"questionId","nameLocation":"718:10:16","nodeType":"VariableDeclaration","scope":3356,"src":"702:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"702:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3354,"indexed":false,"mutability":"mutable","name":"startTime","nameLocation":"738:9:16","nodeType":"VariableDeclaration","scope":3356,"src":"730:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3353,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:47:16"},"src":"668:81:16"},{"anonymous":false,"eventSelector":"6c01933b9ad41cd54278498404c4955f24142d7570eff7bce17fc7f5ee12f892","id":3362,"name":"QuestionActivatedFromBank","nameLocation":"761:25:16","nodeType":"EventDefinition","parameters":{"id":3361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3358,"indexed":true,"mutability":"mutable","name":"questionId","nameLocation":"803:10:16","nodeType":"VariableDeclaration","scope":3362,"src":"787:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3357,"name":"uint256","nodeType":"ElementaryTypeName","src":"787:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3360,"indexed":true,"mutability":"mutable","name":"activator","nameLocation":"831:9:16","nodeType":"VariableDeclaration","scope":3362,"src":"815:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3359,"name":"address","nodeType":"ElementaryTypeName","src":"815:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"786:55:16"},"src":"755:87:16"},{"anonymous":false,"eventSelector":"eb0ce0a0ebb6cd81f55c52eabb2b82d4426db73ee88d3aee11455a02246ae609","id":3368,"name":"PlayerJoinedQuiz","nameLocation":"854:16:16","nodeType":"EventDefinition","parameters":{"id":3367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3364,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"887:6:16","nodeType":"VariableDeclaration","scope":3368,"src":"871:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3363,"name":"address","nodeType":"ElementaryTypeName","src":"871:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3366,"indexed":true,"mutability":"mutable","name":"quizId","nameLocation":"911:6:16","nodeType":"VariableDeclaration","scope":3368,"src":"895:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3365,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"870:48:16"},"src":"848:71:16"},{"anonymous":false,"eventSelector":"0a06276302b6bb1d092bf330b1622caaa3ff824d8120568193eb6868f20ecb8a","id":3380,"name":"QuizAnswerSubmitted","nameLocation":"931:19:16","nodeType":"EventDefinition","parameters":{"id":3379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3370,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"967:6:16","nodeType":"VariableDeclaration","scope":3380,"src":"951:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3369,"name":"address","nodeType":"ElementaryTypeName","src":"951:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3372,"indexed":true,"mutability":"mutable","name":"quizId","nameLocation":"991:6:16","nodeType":"VariableDeclaration","scope":3380,"src":"975:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3371,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3374,"indexed":true,"mutability":"mutable","name":"questionIndex","nameLocation":"1015:13:16","nodeType":"VariableDeclaration","scope":3380,"src":"999:29:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3373,"name":"uint256","nodeType":"ElementaryTypeName","src":"999:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3376,"indexed":false,"mutability":"mutable","name":"submittedAnswerIndex","nameLocation":"1036:20:16","nodeType":"VariableDeclaration","scope":3380,"src":"1030:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3375,"name":"uint8","nodeType":"ElementaryTypeName","src":"1030:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3378,"indexed":false,"mutability":"mutable","name":"isCorrect","nameLocation":"1063:9:16","nodeType":"VariableDeclaration","scope":3380,"src":"1058:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3377,"name":"bool","nodeType":"ElementaryTypeName","src":"1058:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"950:123:16"},"src":"925:149:16"},{"anonymous":false,"eventSelector":"df2c9b4c7b1c582e6bf33b3a903605db4e384981cda99e72df97de89b0612113","id":3390,"name":"QuizCreated","nameLocation":"1086:11:16","nodeType":"EventDefinition","parameters":{"id":3389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3382,"indexed":true,"mutability":"mutable","name":"creator","nameLocation":"1114:7:16","nodeType":"VariableDeclaration","scope":3390,"src":"1098:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3381,"name":"address","nodeType":"ElementaryTypeName","src":"1098:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3384,"indexed":true,"mutability":"mutable","name":"quizId","nameLocation":"1139:6:16","nodeType":"VariableDeclaration","scope":3390,"src":"1123:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3383,"name":"uint256","nodeType":"ElementaryTypeName","src":"1123:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3386,"indexed":false,"mutability":"mutable","name":"rewardAmount","nameLocation":"1155:12:16","nodeType":"VariableDeclaration","scope":3390,"src":"1147:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3385,"name":"uint256","nodeType":"ElementaryTypeName","src":"1147:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3388,"indexed":false,"mutability":"mutable","name":"totalQuestions","nameLocation":"1177:14:16","nodeType":"VariableDeclaration","scope":3390,"src":"1169:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3387,"name":"uint256","nodeType":"ElementaryTypeName","src":"1169:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1097:95:16"},"src":"1080:113:16"}],"scope":3392,"src":"128:1068:16","usedErrors":[],"usedEvents":[3320,3330,3338,3346,3350,3356,3362,3368,3380,3390]}],"src":"33:1165:16"},"id":16},"contracts/interfaces/IQuizGameReward.sol":{"ast":{"absolutePath":"contracts/interfaces/IQuizGameReward.sol","exportedSymbols":{"IQuizGameReward":[3403],"LibAppStorage":[3508]},"id":3404,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3393,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:17"},{"absolutePath":"contracts/libraries/LibAppStorage.sol","file":"../libraries/LibAppStorage.sol","id":3395,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3404,"sourceUnit":3509,"src":"61:63:17","symbolAliases":[{"foreign":{"id":3394,"name":"LibAppStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"70:13:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IQuizGameReward","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3403,"linearizedBaseContracts":[3403],"name":"IQuizGameReward","nameLocation":"191:15:17","nodeType":"ContractDefinition","nodes":[{"functionSelector":"4bd54650","id":3402,"implemented":false,"kind":"function","modifiers":[],"name":"calculateCurrentReward","nameLocation":"223:22:17","nodeType":"FunctionDefinition","parameters":{"id":3398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3397,"mutability":"mutable","name":"_difficultyLevel","nameLocation":"254:16:17","nodeType":"VariableDeclaration","scope":3402,"src":"246:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3396,"name":"uint256","nodeType":"ElementaryTypeName","src":"246:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"245:26:17"},"returnParameters":{"id":3401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3402,"src":"295:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3399,"name":"uint256","nodeType":"ElementaryTypeName","src":"295:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"294:9:17"},"scope":3403,"src":"214:90:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3404,"src":"181:126:17","usedErrors":[],"usedEvents":[]}],"src":"33:276:17"},"id":17},"contracts/libraries/LibAppStorage.sol":{"ast":{"absolutePath":"contracts/libraries/LibAppStorage.sol","exportedSymbols":{"IAccessControl":[799],"IERC20":[877],"IPoolManager":[3285],"IQuizCoin":[3306],"LibAppStorage":[3508],"Question":[2042],"Quiz":[2059]},"id":3509,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3405,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:18"},{"absolutePath":"contracts/interfaces/IPoolManager.sol","file":"../interfaces/IPoolManager.sol","id":3406,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3509,"sourceUnit":3286,"src":"61:40:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IQuizCoin.sol","file":"../interfaces/IQuizCoin.sol","id":3407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3509,"sourceUnit":3307,"src":"103:37:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/QuizTypes.sol","file":"../QuizTypes.sol","id":3408,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3509,"sourceUnit":2060,"src":"142:26:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"LibAppStorage","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":3508,"linearizedBaseContracts":[3508],"name":"LibAppStorage","nameLocation":"180:13:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3413,"mutability":"constant","name":"APP_STORAGE_POSITION","nameLocation":"218:20:18","nodeType":"VariableDeclaration","scope":3508,"src":"201:73:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"201:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"6170702e73746f726167652e7175697a67616d65","id":3411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"251:22:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2f104a7ea12e35172792673c68fe1423b90b4f6b86a6c5f5a9a85bd5652022","typeString":"literal_string \"app.storage.quizgame\""},"value":"app.storage.quizgame"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4f2f104a7ea12e35172792673c68fe1423b90b4f6b86a6c5f5a9a85bd5652022","typeString":"literal_string \"app.storage.quizgame\""}],"id":3410,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"241:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"241:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"canonicalName":"LibAppStorage.QuestionMode","id":3416,"members":[{"id":3414,"name":"Solo","nameLocation":"376:4:18","nodeType":"EnumValue","src":"376:4:18"},{"id":3415,"name":"Pool","nameLocation":"382:4:18","nodeType":"EnumValue","src":"382:4:18"}],"name":"QuestionMode","nameLocation":"361:12:18","nodeType":"EnumDefinition","src":"356:32:18"},{"canonicalName":"LibAppStorage.PlayerParticipation","id":3431,"members":[{"constant":false,"id":3418,"mutability":"mutable","name":"hasJoined","nameLocation":"439:9:18","nodeType":"VariableDeclaration","scope":3431,"src":"434:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3417,"name":"bool","nodeType":"ElementaryTypeName","src":"434:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3420,"mutability":"mutable","name":"score","nameLocation":"467:5:18","nodeType":"VariableDeclaration","scope":3431,"src":"459:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3419,"name":"uint256","nodeType":"ElementaryTypeName","src":"459:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3422,"mutability":"mutable","name":"lastAnsweredQuestionIndex","nameLocation":"491:25:18","nodeType":"VariableDeclaration","scope":3431,"src":"483:33:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3421,"name":"uint256","nodeType":"ElementaryTypeName","src":"483:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3426,"mutability":"mutable","name":"playerAnswers","nameLocation":"553:13:18","nodeType":"VariableDeclaration","scope":3431,"src":"527:39:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint8_$","typeString":"mapping(uint256 => uint8)"},"typeName":{"id":3425,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3423,"name":"uint256","nodeType":"ElementaryTypeName","src":"535:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"527:25:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint8_$","typeString":"mapping(uint256 => uint8)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3424,"name":"uint8","nodeType":"ElementaryTypeName","src":"546:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}},"visibility":"internal"},{"constant":false,"id":3430,"mutability":"mutable","name":"hasAnswered","nameLocation":"602:11:18","nodeType":"VariableDeclaration","scope":3431,"src":"577:36:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":3429,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3427,"name":"uint256","nodeType":"ElementaryTypeName","src":"585:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"577:24:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3428,"name":"bool","nodeType":"ElementaryTypeName","src":"596:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"}],"name":"PlayerParticipation","nameLocation":"403:19:18","nodeType":"StructDefinition","scope":3508,"src":"396:225:18","visibility":"public"},{"canonicalName":"LibAppStorage.AppStorage","id":3495,"members":[{"constant":false,"id":3433,"mutability":"mutable","name":"DEFAULT_ADMIN_ROLE","nameLocation":"666:18:18","nodeType":"VariableDeclaration","scope":3495,"src":"658:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3432,"name":"bytes32","nodeType":"ElementaryTypeName","src":"658:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3435,"mutability":"mutable","name":"REWARD_DISTRIBUTOR_ROLE","nameLocation":"703:23:18","nodeType":"VariableDeclaration","scope":3495,"src":"695:31:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"695:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3437,"mutability":"mutable","name":"CREATOR_ROLE","nameLocation":"745:12:18","nodeType":"VariableDeclaration","scope":3495,"src":"737:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"737:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3439,"mutability":"mutable","name":"HINT_COST_AMOUNT","nameLocation":"786:16:18","nodeType":"VariableDeclaration","scope":3495,"src":"778:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3438,"name":"uint256","nodeType":"ElementaryTypeName","src":"778:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3441,"mutability":"mutable","name":"POOL_REWARD_WINDOW_DURATION_SECONDS","nameLocation":"821:35:18","nodeType":"VariableDeclaration","scope":3495,"src":"813:43:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3440,"name":"uint256","nodeType":"ElementaryTypeName","src":"813:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3443,"mutability":"mutable","name":"LEVEL_100_QUESTION_VALIDITY_SECONDS","nameLocation":"875:35:18","nodeType":"VariableDeclaration","scope":3495,"src":"867:43:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3442,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3445,"mutability":"mutable","name":"REWARD_FOR_LEVEL_1_99","nameLocation":"929:21:18","nodeType":"VariableDeclaration","scope":3495,"src":"921:29:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3444,"name":"uint256","nodeType":"ElementaryTypeName","src":"921:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3447,"mutability":"mutable","name":"REWARD_FOR_LEVEL_100","nameLocation":"969:20:18","nodeType":"VariableDeclaration","scope":3495,"src":"961:28:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3446,"name":"uint256","nodeType":"ElementaryTypeName","src":"961:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3449,"mutability":"mutable","name":"HALVING_PERIOD_SECONDS","nameLocation":"1008:22:18","nodeType":"VariableDeclaration","scope":3495,"src":"1000:30:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3448,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3451,"mutability":"mutable","name":"MIN_REWARD_AFTER_HALVING","nameLocation":"1049:24:18","nodeType":"VariableDeclaration","scope":3495,"src":"1041:32:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3450,"name":"uint256","nodeType":"ElementaryTypeName","src":"1041:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3453,"mutability":"mutable","name":"TREASURY_FEE_PERCENTAGE","nameLocation":"1092:23:18","nodeType":"VariableDeclaration","scope":3495,"src":"1084:31:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3452,"name":"uint256","nodeType":"ElementaryTypeName","src":"1084:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3455,"mutability":"mutable","name":"GAME_START_TIMESTAMP","nameLocation":"1134:20:18","nodeType":"VariableDeclaration","scope":3495,"src":"1126:28:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3454,"name":"uint256","nodeType":"ElementaryTypeName","src":"1126:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3457,"mutability":"mutable","name":"nextQuestionId","nameLocation":"1173:14:18","nodeType":"VariableDeclaration","scope":3495,"src":"1165:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3456,"name":"uint256","nodeType":"ElementaryTypeName","src":"1165:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3461,"mutability":"mutable","name":"lastPlayedDay","nameLocation":"1228:13:18","nodeType":"VariableDeclaration","scope":3495,"src":"1200:41:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3460,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3458,"name":"address","nodeType":"ElementaryTypeName","src":"1208:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1200:27:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3459,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":3466,"mutability":"mutable","name":"playerModeChoice","nameLocation":"1285:16:18","nodeType":"VariableDeclaration","scope":3495,"src":"1252:49:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_QuestionMode_$3416_$","typeString":"mapping(address => enum LibAppStorage.QuestionMode)"},"typeName":{"id":3465,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3462,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1252:32:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_QuestionMode_$3416_$","typeString":"mapping(address => enum LibAppStorage.QuestionMode)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3464,"nodeType":"UserDefinedTypeName","pathNode":{"id":3463,"name":"QuestionMode","nameLocations":["1271:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3416,"src":"1271:12:18"},"referencedDeclaration":3416,"src":"1271:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_QuestionMode_$3416","typeString":"enum LibAppStorage.QuestionMode"}}},"visibility":"internal"},{"constant":false,"id":3471,"mutability":"mutable","name":"questions","nameLocation":"1341:9:18","nodeType":"VariableDeclaration","scope":3495,"src":"1312:38:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Question_$2042_storage_$","typeString":"mapping(uint256 => struct Question)"},"typeName":{"id":3470,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3467,"name":"uint256","nodeType":"ElementaryTypeName","src":"1320:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1312:28:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Question_$2042_storage_$","typeString":"mapping(uint256 => struct Question)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3469,"nodeType":"UserDefinedTypeName","pathNode":{"id":3468,"name":"Question","nameLocations":["1331:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2042,"src":"1331:8:18"},"referencedDeclaration":2042,"src":"1331:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Question_$2042_storage_ptr","typeString":"struct Question"}}},"visibility":"internal"},{"constant":false,"id":3476,"mutability":"mutable","name":"quizzes","nameLocation":"1388:7:18","nodeType":"VariableDeclaration","scope":3495,"src":"1363:32:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Quiz_$2059_storage_$","typeString":"mapping(uint256 => struct Quiz)"},"typeName":{"id":3475,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3472,"name":"uint256","nodeType":"ElementaryTypeName","src":"1371:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1363:24:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Quiz_$2059_storage_$","typeString":"mapping(uint256 => struct Quiz)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3474,"nodeType":"UserDefinedTypeName","pathNode":{"id":3473,"name":"Quiz","nameLocations":["1382:4:18"],"nodeType":"IdentifierPath","referencedDeclaration":2059,"src":"1382:4:18"},"referencedDeclaration":2059,"src":"1382:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_Quiz_$2059_storage_ptr","typeString":"struct Quiz"}}},"visibility":"internal"},{"constant":false,"id":3483,"mutability":"mutable","name":"quizParticipations","nameLocation":"1466:18:18","nodeType":"VariableDeclaration","scope":3495,"src":"1406:78:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_PlayerParticipation_$3431_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct LibAppStorage.PlayerParticipation))"},"typeName":{"id":3482,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"1414:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1406:59:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_PlayerParticipation_$3431_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct LibAppStorage.PlayerParticipation))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3481,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3478,"name":"address","nodeType":"ElementaryTypeName","src":"1433:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1425:39:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PlayerParticipation_$3431_storage_$","typeString":"mapping(address => struct LibAppStorage.PlayerParticipation)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3480,"nodeType":"UserDefinedTypeName","pathNode":{"id":3479,"name":"PlayerParticipation","nameLocations":["1444:19:18"],"nodeType":"IdentifierPath","referencedDeclaration":3431,"src":"1444:19:18"},"referencedDeclaration":3431,"src":"1444:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_PlayerParticipation_$3431_storage_ptr","typeString":"struct LibAppStorage.PlayerParticipation"}}}},"visibility":"internal"},{"constant":false,"id":3488,"mutability":"mutable","name":"quizPlayers","nameLocation":"1525:11:18","nodeType":"VariableDeclaration","scope":3495,"src":"1495:41:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"typeName":{"id":3487,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3484,"name":"uint256","nodeType":"ElementaryTypeName","src":"1503:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1495:29:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":3485,"name":"address","nodeType":"ElementaryTypeName","src":"1514:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3486,"nodeType":"ArrayTypeName","src":"1514:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"internal"},{"constant":false,"id":3491,"mutability":"mutable","name":"poolManager","nameLocation":"1570:11:18","nodeType":"VariableDeclaration","scope":3495,"src":"1557:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolManager_$3285","typeString":"contract IPoolManager"},"typeName":{"id":3490,"nodeType":"UserDefinedTypeName","pathNode":{"id":3489,"name":"IPoolManager","nameLocations":["1557:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3285,"src":"1557:12:18"},"referencedDeclaration":3285,"src":"1557:12:18","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolManager_$3285","typeString":"contract IPoolManager"}},"visibility":"internal"},{"constant":false,"id":3494,"mutability":"mutable","name":"quizCoin","nameLocation":"1602:8:18","nodeType":"VariableDeclaration","scope":3495,"src":"1592:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IQuizCoin_$3306","typeString":"contract IQuizCoin"},"typeName":{"id":3493,"nodeType":"UserDefinedTypeName","pathNode":{"id":3492,"name":"IQuizCoin","nameLocations":["1592:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":3306,"src":"1592:9:18"},"referencedDeclaration":3306,"src":"1592:9:18","typeDescriptions":{"typeIdentifier":"t_contract$_IQuizCoin_$3306","typeString":"contract IQuizCoin"}},"visibility":"internal"}],"name":"AppStorage","nameLocation":"636:10:18","nodeType":"StructDefinition","scope":3508,"src":"629:989:18","visibility":"public"},{"body":{"id":3506,"nodeType":"Block","src":"1685:122:18","statements":[{"assignments":[3502],"declarations":[{"constant":false,"id":3502,"mutability":"mutable","name":"position","nameLocation":"1704:8:18","nodeType":"VariableDeclaration","scope":3506,"src":"1696:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3501,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1696:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3504,"initialValue":{"id":3503,"name":"APP_STORAGE_POSITION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"1715:20:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1696:39:18"},{"AST":{"nativeSrc":"1755:45:18","nodeType":"YulBlock","src":"1755:45:18","statements":[{"nativeSrc":"1770:19:18","nodeType":"YulAssignment","src":"1770:19:18","value":{"name":"position","nativeSrc":"1781:8:18","nodeType":"YulIdentifier","src":"1781:8:18"},"variableNames":[{"name":"ds.slot","nativeSrc":"1770:7:18","nodeType":"YulIdentifier","src":"1770:7:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3499,"isOffset":false,"isSlot":true,"src":"1770:7:18","suffix":"slot","valueSize":1},{"declaration":3502,"isOffset":false,"isSlot":false,"src":"1781:8:18","valueSize":1}],"id":3505,"nodeType":"InlineAssembly","src":"1746:54:18"}]},"id":3507,"implemented":true,"kind":"function","modifiers":[],"name":"s","nameLocation":"1635:1:18","nodeType":"FunctionDefinition","parameters":{"id":3496,"nodeType":"ParameterList","parameters":[],"src":"1636:2:18"},"returnParameters":{"id":3500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3499,"mutability":"mutable","name":"ds","nameLocation":"1681:2:18","nodeType":"VariableDeclaration","scope":3507,"src":"1662:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"},"typeName":{"id":3498,"nodeType":"UserDefinedTypeName","pathNode":{"id":3497,"name":"AppStorage","nameLocations":["1662:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3495,"src":"1662:10:18"},"referencedDeclaration":3495,"src":"1662:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_AppStorage_$3495_storage_ptr","typeString":"struct LibAppStorage.AppStorage"}},"visibility":"internal"}],"src":"1661:23:18"},"scope":3508,"src":"1626:181:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3509,"src":"172:1638:18","usedErrors":[],"usedEvents":[]}],"src":"33:1779:18"},"id":18},"contracts/libraries/LibMerkleStorage.sol":{"ast":{"absolutePath":"contracts/libraries/LibMerkleStorage.sol","exportedSymbols":{"LibMerkleStorage":[3537]},"id":3538,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3510,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"LibMerkleStorage","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":3537,"linearizedBaseContracts":[3537],"name":"LibMerkleStorage","nameLocation":"69:16:19","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3515,"mutability":"constant","name":"MERKLE_STORAGE_POSITION","nameLocation":"110:23:19","nodeType":"VariableDeclaration","scope":3537,"src":"93:87:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"93:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"7175697a636f696e2e6469616d6f6e642e6d65726b6c652e73746f72616765","id":3513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"146:33:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_386ce38a758b2aa61a536cbe13df8b6d4bbdc305ba63fe1732b5b790f26f0751","typeString":"literal_string \"quizcoin.diamond.merkle.storage\""},"value":"quizcoin.diamond.merkle.storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_386ce38a758b2aa61a536cbe13df8b6d4bbdc305ba63fe1732b5b790f26f0751","typeString":"literal_string \"quizcoin.diamond.merkle.storage\""}],"id":3512,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"136:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"136:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"canonicalName":"LibMerkleStorage.MerkleStorage","id":3524,"members":[{"constant":false,"id":3519,"mutability":"mutable","name":"quizRoots","nameLocation":"276:9:19","nodeType":"VariableDeclaration","scope":3524,"src":"248:37:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"typeName":{"id":3518,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3516,"name":"uint256","nodeType":"ElementaryTypeName","src":"256:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"248:27:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"267:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"internal"},{"constant":false,"id":3523,"mutability":"mutable","name":"leafToQuizId","nameLocation":"424:12:19","nodeType":"VariableDeclaration","scope":3524,"src":"396:40:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":3522,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"404:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"396:27:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3521,"name":"uint256","nodeType":"ElementaryTypeName","src":"415:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"MerkleStorage","nameLocation":"196:13:19","nodeType":"StructDefinition","scope":3537,"src":"189:255:19","visibility":"public"},{"body":{"id":3535,"nodeType":"Block","src":"526:125:19","statements":[{"assignments":[3531],"declarations":[{"constant":false,"id":3531,"mutability":"mutable","name":"position","nameLocation":"545:8:19","nodeType":"VariableDeclaration","scope":3535,"src":"537:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"537:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3533,"initialValue":{"id":3532,"name":"MERKLE_STORAGE_POSITION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"556:23:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"537:42:19"},{"AST":{"nativeSrc":"599:45:19","nodeType":"YulBlock","src":"599:45:19","statements":[{"nativeSrc":"614:19:19","nodeType":"YulAssignment","src":"614:19:19","value":{"name":"position","nativeSrc":"625:8:19","nodeType":"YulIdentifier","src":"625:8:19"},"variableNames":[{"name":"ms.slot","nativeSrc":"614:7:19","nodeType":"YulIdentifier","src":"614:7:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3528,"isOffset":false,"isSlot":true,"src":"614:7:19","suffix":"slot","valueSize":1},{"declaration":3531,"isOffset":false,"isSlot":false,"src":"625:8:19","valueSize":1}],"id":3534,"nodeType":"InlineAssembly","src":"590:54:19"}]},"id":3536,"implemented":true,"kind":"function","modifiers":[],"name":"merkleStorage","nameLocation":"461:13:19","nodeType":"FunctionDefinition","parameters":{"id":3525,"nodeType":"ParameterList","parameters":[],"src":"474:2:19"},"returnParameters":{"id":3529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3528,"mutability":"mutable","name":"ms","nameLocation":"522:2:19","nodeType":"VariableDeclaration","scope":3536,"src":"500:24:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleStorage_$3524_storage_ptr","typeString":"struct LibMerkleStorage.MerkleStorage"},"typeName":{"id":3527,"nodeType":"UserDefinedTypeName","pathNode":{"id":3526,"name":"MerkleStorage","nameLocations":["500:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":3524,"src":"500:13:19"},"referencedDeclaration":3524,"src":"500:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleStorage_$3524_storage_ptr","typeString":"struct LibMerkleStorage.MerkleStorage"}},"visibility":"internal"}],"src":"499:26:19"},"scope":3537,"src":"452:199:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3538,"src":"61:593:19","usedErrors":[],"usedEvents":[]}],"src":"33:623:19"},"id":19}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"Hashes":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202c889c7fca7c67a257826a0cae715976cc0ef8504317d8914652d625a7928d1764736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C DUP9 SWAP13 PUSH32 0xCA7C67A257826A0CAE715976CC0EF8504317D8914652D625A7928D1764736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"221:811:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202c889c7fca7c67a257826a0cae715976cc0ef8504317d8914652d625a7928d1764736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C DUP9 SWAP13 PUSH32 0xCA7C67A257826A0CAE715976CC0EF8504317D8914652D625A7928D1764736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"221:811:6:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library of standard hash functions. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":\"Hashes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[{"inputs":[],"name":"MerkleProofInvalidMultiproof","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f78fd981a67a1c4e04c84c582fdab7f7e03d4c87326677e747fdfd083026e3c164736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 DUP16 0xD9 DUP2 0xA6 PUSH27 0x1C4E04C84C582FDAB7F7E03D4C87326677E747FDFD083026E3C164 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"1353:22982:7:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f78fd981a67a1c4e04c84c582fdab7f7e03d4c87326677e747fdfd083026e3c164736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 DUP16 0xD9 DUP2 0xA6 PUSH27 0x1C4E04C84C582FDAB7F7E03D4C87326677E747FDFD083026E3C164 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"1353:22982:7:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MerkleProofInvalidMultiproof\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the Merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates Merkle trees that are safe against this attack out of the box. IMPORTANT: Consider memory side-effects when using custom hashing functions that access memory in an unsafe way. NOTE: This library supports proof verification for merkle trees built using custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving leaf inclusion in trees built using non-commutative hashing functions requires additional logic that is not supported by this library.\",\"errors\":{\"MerkleProofInvalidMultiproof()\":[{\"details\":\"The multiproof provided is not valid.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/facets/MerkleFacet.sol":{"MerkleFacet":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"quizId","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"root","type":"bytes32"}],"name":"MerkleRootSubmitted","type":"event"},{"inputs":[{"internalType":"bytes32","name":"leaf","type":"bytes32"}],"name":"getQuizIdFromLeaf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"quizId","type":"uint256"},{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"bytes32[]","name":"leaves","type":"bytes32[]"}],"name":"submitMerkleRoot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"leaf","type":"bytes32"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"verifyQuiz","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601557610377908161001b8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816307d38f3f146102c9575080638350d44f146101225763ebe6d1231461004057600080fd5b3461011d57606036600319011261011d5760043560243560443567ffffffffffffffff811161011d57610077903690600401610310565b91836000527f386ce38a758b2aa61a536cbe13df8b6d4bbdc305ba63fe1732b5b790f26f07516020528060406000205560005b838110156100ef5760019085604060008360051b87013581527f386ce38a758b2aa61a536cbe13df8b6d4bbdc305ba63fe1732b5b790f26f07526020522055016100aa565b847fb3a8f3e59050d3f97f1bf1b668c8216c654869aa24e3e03cd8891dc68b7db097602084604051908152a2005b600080fd5b3461011d57604036600319011261011d5760043560243567ffffffffffffffff811161011d57610156903690600401610310565b91806000527f386ce38a758b2aa61a536cbe13df8b6d4bbdc305ba63fe1732b5b790f26f07526020526040600020548015610285576000527f386ce38a758b2aa61a536cbe13df8b6d4bbdc305ba63fe1732b5b790f26f07516020526040600020549167ffffffffffffffff841161026f578360051b60405194601f19603f830116860186811067ffffffffffffffff82111761026f576040528552602085019082019136831161011d57905b82821061025f575050506000905b835182101561025257604060019160009060208560051b8801015190818110600014610246578252602052205b910190610211565b9082526020522061023e565b6020908360405191148152f35b8135815260209182019101610203565b634e487b7160e01b600052604160045260246000fd5b606460405162461bcd60e51b815260206004820152602060248201527f4d65726b6c6546616365743a204c656166206e6f7420726567697374657265646044820152fd5b3461011d57602036600319011261011d576020906004356000527f386ce38a758b2aa61a536cbe13df8b6d4bbdc305ba63fe1732b5b790f26f075282526040600020548152f35b9181601f8401121561011d5782359167ffffffffffffffff831161011d576020808501948460051b01011161011d5756fea26469706673582212205e7d2680ea0951a1ee2cc28ed3194b8884ac0e03979dcf5b70f3ce2fa955e1c564736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x15 JUMPI PUSH2 0x377 SWAP1 DUP2 PUSH2 0x1B DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x7D38F3F EQ PUSH2 0x2C9 JUMPI POP DUP1 PUSH4 0x8350D44F EQ PUSH2 0x122 JUMPI PUSH4 0xEBE6D123 EQ PUSH2 0x40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x11D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x11D JUMPI PUSH2 0x77 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x310 JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH32 0x386CE38A758B2AA61A536CBE13DF8B6D4BBDC305BA63FE1732B5B790F26F0751 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEF JUMPI PUSH1 0x1 SWAP1 DUP6 PUSH1 0x40 PUSH1 0x0 DUP4 PUSH1 0x5 SHL DUP8 ADD CALLDATALOAD DUP2 MSTORE PUSH32 0x386CE38A758B2AA61A536CBE13DF8B6D4BBDC305BA63FE1732B5B790F26F0752 PUSH1 0x20 MSTORE KECCAK256 SSTORE ADD PUSH2 0xAA JUMP JUMPDEST DUP5 PUSH32 0xB3A8F3E59050D3F97F1BF1B668C8216C654869AA24E3E03CD8891DC68B7DB097 PUSH1 0x20 DUP5 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x11D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x11D JUMPI PUSH2 0x156 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x310 JUMP JUMPDEST SWAP2 DUP1 PUSH1 0x0 MSTORE PUSH32 0x386CE38A758B2AA61A536CBE13DF8B6D4BBDC305BA63FE1732B5B790F26F0752 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 MSTORE PUSH32 0x386CE38A758B2AA61A536CBE13DF8B6D4BBDC305BA63FE1732B5B790F26F0751 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x26F JUMPI DUP4 PUSH1 0x5 SHL PUSH1 0x40 MLOAD SWAP5 PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP7 ADD DUP7 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x26F JUMPI PUSH1 0x40 MSTORE DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 DUP3 ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x11D JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x25F JUMPI POP POP POP PUSH1 0x0 SWAP1 JUMPDEST DUP4 MLOAD DUP3 LT ISZERO PUSH2 0x252 JUMPI PUSH1 0x40 PUSH1 0x1 SWAP2 PUSH1 0x0 SWAP1 PUSH1 0x20 DUP6 PUSH1 0x5 SHL DUP9 ADD ADD MLOAD SWAP1 DUP2 DUP2 LT PUSH1 0x0 EQ PUSH2 0x246 JUMPI DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 JUMPDEST SWAP2 ADD SWAP1 PUSH2 0x211 JUMP JUMPDEST SWAP1 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x23E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP4 PUSH1 0x40 MLOAD SWAP2 EQ DUP2 MSTORE RETURN JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x203 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726B6C6546616365743A204C656166206E6F742072656769737465726564 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x11D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH32 0x386CE38A758B2AA61A536CBE13DF8B6D4BBDC305BA63FE1732B5B790F26F0752 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE RETURN JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x11D JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x11D JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x11D JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY PUSH30 0x2680EA0951A1EE2CC28ED3194B8884AC0E03979DCF5B70F3CE2FA955E1C5 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"178:1311:10:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_array_bytes32_dyn_calldata":{"entryPoint":784,"id":null,"parameterSlots":2,"returnSlots":2}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c90816307d38f3f146102c9575080638350d44f146101225763ebe6d1231461004057600080fd5b3461011d57606036600319011261011d5760043560243560443567ffffffffffffffff811161011d57610077903690600401610310565b91836000527f386ce38a758b2aa61a536cbe13df8b6d4bbdc305ba63fe1732b5b790f26f07516020528060406000205560005b838110156100ef5760019085604060008360051b87013581527f386ce38a758b2aa61a536cbe13df8b6d4bbdc305ba63fe1732b5b790f26f07526020522055016100aa565b847fb3a8f3e59050d3f97f1bf1b668c8216c654869aa24e3e03cd8891dc68b7db097602084604051908152a2005b600080fd5b3461011d57604036600319011261011d5760043560243567ffffffffffffffff811161011d57610156903690600401610310565b91806000527f386ce38a758b2aa61a536cbe13df8b6d4bbdc305ba63fe1732b5b790f26f07526020526040600020548015610285576000527f386ce38a758b2aa61a536cbe13df8b6d4bbdc305ba63fe1732b5b790f26f07516020526040600020549167ffffffffffffffff841161026f578360051b60405194601f19603f830116860186811067ffffffffffffffff82111761026f576040528552602085019082019136831161011d57905b82821061025f575050506000905b835182101561025257604060019160009060208560051b8801015190818110600014610246578252602052205b910190610211565b9082526020522061023e565b6020908360405191148152f35b8135815260209182019101610203565b634e487b7160e01b600052604160045260246000fd5b606460405162461bcd60e51b815260206004820152602060248201527f4d65726b6c6546616365743a204c656166206e6f7420726567697374657265646044820152fd5b3461011d57602036600319011261011d576020906004356000527f386ce38a758b2aa61a536cbe13df8b6d4bbdc305ba63fe1732b5b790f26f075282526040600020548152f35b9181601f8401121561011d5782359167ffffffffffffffff831161011d576020808501948460051b01011161011d5756fea26469706673582212205e7d2680ea0951a1ee2cc28ed3194b8884ac0e03979dcf5b70f3ce2fa955e1c564736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x7D38F3F EQ PUSH2 0x2C9 JUMPI POP DUP1 PUSH4 0x8350D44F EQ PUSH2 0x122 JUMPI PUSH4 0xEBE6D123 EQ PUSH2 0x40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x11D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x11D JUMPI PUSH2 0x77 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x310 JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH32 0x386CE38A758B2AA61A536CBE13DF8B6D4BBDC305BA63FE1732B5B790F26F0751 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEF JUMPI PUSH1 0x1 SWAP1 DUP6 PUSH1 0x40 PUSH1 0x0 DUP4 PUSH1 0x5 SHL DUP8 ADD CALLDATALOAD DUP2 MSTORE PUSH32 0x386CE38A758B2AA61A536CBE13DF8B6D4BBDC305BA63FE1732B5B790F26F0752 PUSH1 0x20 MSTORE KECCAK256 SSTORE ADD PUSH2 0xAA JUMP JUMPDEST DUP5 PUSH32 0xB3A8F3E59050D3F97F1BF1B668C8216C654869AA24E3E03CD8891DC68B7DB097 PUSH1 0x20 DUP5 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x11D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x11D JUMPI PUSH2 0x156 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x310 JUMP JUMPDEST SWAP2 DUP1 PUSH1 0x0 MSTORE PUSH32 0x386CE38A758B2AA61A536CBE13DF8B6D4BBDC305BA63FE1732B5B790F26F0752 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 MSTORE PUSH32 0x386CE38A758B2AA61A536CBE13DF8B6D4BBDC305BA63FE1732B5B790F26F0751 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x26F JUMPI DUP4 PUSH1 0x5 SHL PUSH1 0x40 MLOAD SWAP5 PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP7 ADD DUP7 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x26F JUMPI PUSH1 0x40 MSTORE DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 DUP3 ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x11D JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x25F JUMPI POP POP POP PUSH1 0x0 SWAP1 JUMPDEST DUP4 MLOAD DUP3 LT ISZERO PUSH2 0x252 JUMPI PUSH1 0x40 PUSH1 0x1 SWAP2 PUSH1 0x0 SWAP1 PUSH1 0x20 DUP6 PUSH1 0x5 SHL DUP9 ADD ADD MLOAD SWAP1 DUP2 DUP2 LT PUSH1 0x0 EQ PUSH2 0x246 JUMPI DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 JUMPDEST SWAP2 ADD SWAP1 PUSH2 0x211 JUMP JUMPDEST SWAP1 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x23E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP4 PUSH1 0x40 MLOAD SWAP2 EQ DUP2 MSTORE RETURN JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x203 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726B6C6546616365743A204C656166206E6F742072656769737465726564 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x11D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH32 0x386CE38A758B2AA61A536CBE13DF8B6D4BBDC305BA63FE1732B5B790F26F0752 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE RETURN JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x11D JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x11D JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x11D JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY PUSH30 0x2680EA0951A1EE2CC28ED3194B8884AC0E03979DCF5B70F3CE2FA955E1C5 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"178:1311:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;178:1311:10;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;136:44:19;178:1311:10;;;;;;;;728:3;709:17;;;;;;178:1311;;;;;;;;;;;;;748:15;178:1311;;;;;694:13;;709:17;;812:33;178:1311;709:17;178:1311;;;;;812:33;178:1311;;;;;;;;;;;-1:-1:-1;;178:1311:10;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1121:15;178:1311;;;;;;1161:11;;178:1311;;;;136:44:19;178:1311:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2559:27:7;;;178:1311:10;2596:134:7;2634:3;178:1311:10;;2616:16:7;;;;;178:1311:10;;;;;;;;;;;;;605:59:6;:5;;;:59;:5;;;889:135;;178:1311:10;889:135:6;;605:59;2634:3:7;178:1311:10;2601:13:7;;;605:59:6;889:135;;;178:1311:10;889:135:6;;605:59;;2616:16:7;178:1311:10;2616:16:7;;178:1311:10;;2016:33:7;;178:1311:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;178:1311:10;;;;;;;;;;1427:45;178:1311;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"},"methodIdentifiers":{"getQuizIdFromLeaf(bytes32)":"07d38f3f","submitMerkleRoot(uint256,bytes32,bytes32[])":"ebe6d123","verifyQuiz(bytes32,bytes32[])":"8350d44f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"quizId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"MerkleRootSubmitted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"leaf\",\"type\":\"bytes32\"}],\"name\":\"getQuizIdFromLeaf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quizId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"leaves\",\"type\":\"bytes32[]\"}],\"name\":\"submitMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"leaf\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyQuiz\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"submitMerkleRoot(uint256,bytes32,bytes32[])\":{\"params\":{\"leaves\":\"The leaves for mapping leaf \\u2192 quizId\",\"quizId\":\"The quiz ID\",\"root\":\"The Merkle root\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getQuizIdFromLeaf(bytes32)\":{\"notice\":\"Get quizId from a leaf\"},\"submitMerkleRoot(uint256,bytes32,bytes32[])\":{\"notice\":\"Submit Merkle root for a quiz\"},\"verifyQuiz(bytes32,bytes32[])\":{\"notice\":\"Verify leaf is valid under stored root\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/facets/MerkleFacet.sol\":\"MerkleFacet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"contracts/facets/MerkleFacet.sol\":{\"keccak256\":\"0x6857eddbcf8b3c505603c5f18e8eab375f922c23bbc5b3bd3e89f30d12db6b04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://951f096db92f35833017b397525d7b69025ade6293ffbbdb026b0cd0f1a509ad\",\"dweb:/ipfs/QmQNo3p81W2NYUeVd1HPzJ9ukix2J2PeTWVi23hJvfVd5V\"]},\"contracts/libraries/LibMerkleStorage.sol\":{\"keccak256\":\"0x39c36f321d39f4aea13bd86d7c7ad6874d66716beb53ecfb50e804d07f4b2608\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d656c53acba34930fafd80cac009a6445baf40f60b9d229a63814120b4e5591\",\"dweb:/ipfs/QmcsMr5S3JVrZUrPEFx6N9NDUJbpKni2AT1LjJ4m3kPnFg\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/facets/QuizGameModeFacet.sol":{"QuizGameModeFacet":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"questionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"solver","type":"address"},{"indexed":false,"internalType":"bytes32","name":"submittedAnswerHash","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"isCorrect","type":"bool"}],"name":"AnswerSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"questionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":false,"internalType":"uint256","name":"cost","type":"uint256"}],"name":"HintPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":true,"internalType":"uint256","name":"quizId","type":"uint256"}],"name":"PlayerJoinedQuiz","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"questionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"activator","type":"address"}],"name":"QuestionActivatedFromBank","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"questionId","type":"uint256"}],"name":"QuestionClosed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"questionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"uint256","name":"difficultyLevel","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"baseRewardAmount","type":"uint256"}],"name":"QuestionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"questionId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"}],"name":"QuestionRewardWindowStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":true,"internalType":"uint256","name":"quizId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"questionIndex","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"submittedAnswerIndex","type":"uint8"},{"indexed":false,"internalType":"bool","name":"isCorrect","type":"bool"}],"name":"QuizAnswerSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":true,"internalType":"uint256","name":"quizId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rewardAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalQuestions","type":"uint256"}],"name":"QuizCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"questionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"solver","type":"address"},{"indexed":false,"internalType":"uint256","name":"rewardAmount","type":"uint256"}],"name":"RewardDistributed","type":"event"},{"inputs":[{"internalType":"uint256","name":"_questionId","type":"uint256"}],"name":"activateQuestionFromBank","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_questionId","type":"uint256"}],"name":"buyHint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_answerLeaf","type":"bytes32"},{"internalType":"bytes32","name":"_hintHash","type":"bytes32"},{"internalType":"uint256","name":"_difficultyLevel","type":"uint256"},{"internalType":"enum LibAppStorage.QuestionMode","name":"_mode","type":"uint8"}],"name":"createQuestion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_questionId","type":"uint256"},{"internalType":"bytes32","name":"_answerLeaf","type":"bytes32"},{"internalType":"bytes32[]","name":"_merkleProof","type":"bytes32[]"}],"name":"submitAnswer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x15 JUMPI PUSH2 0x1358 SWAP1 DUP2 PUSH2 0x1B DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1E0FEF78 EQ PUSH2 0xE70 JUMPI POP DUP1 PUSH4 0x42DD0724 EQ PUSH2 0xBDA JUMPI DUP1 PUSH4 0x686CAEAF EQ PUSH2 0x8E6 JUMPI PUSH4 0x6EFA82D2 EQ PUSH2 0x4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x8E3 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x8E3 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x43D JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x43D JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8E1 JUMPI DUP1 PUSH1 0x5 SHL CALLDATASIZE PUSH1 0x24 DUP3 DUP6 ADD ADD GT PUSH2 0x8DD JUMPI DUP4 DUP7 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1303 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SWAP1 PUSH2 0xCE PUSH1 0x3 DUP4 ADD SLOAD ISZERO ISZERO PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP3 DUP4 SLOAD SWAP2 PUSH1 0xFF DUP4 AND PUSH2 0x898 JUMPI PUSH1 0x6 DUP5 ADD SWAP6 PUSH1 0x64 DUP8 SLOAD EQ PUSH2 0x81C JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x8350D44F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB LT PUSH2 0x818 JUMPI PUSH1 0x64 DUP4 DUP4 PUSH1 0x20 SWAP5 PUSH1 0x24 DUP4 SWAP6 ADD DUP5 DUP5 ADD CALLDATACOPY DUP2 ADD SUB ADD DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x80D JUMPI DUP9 SWAP2 PUSH2 0x7DE JUMPI JUMPDEST POP ISZERO PUSH2 0x78D JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD565202F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x15180 TIMESTAMP DIV SWAP2 SWAP1 DUP3 EQ PUSH2 0x6E3 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD565202F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE DUP3 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652030 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0xFF AND PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x6CF JUMPI DUP2 SLOAD PUSH1 0xFF NOT AND OR SWAP1 SSTORE JUMPDEST CALLER DUP8 MSTORE PUSH1 0xD DUP3 ADD PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP9 KECCAK256 SLOAD DUP3 EQ PUSH2 0x67E JUMPI CALLER DUP9 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 SSTORE DUP2 SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x66A JUMPI DUP1 PUSH2 0x509 JUMPI POP PUSH1 0xB DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4C4 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE TIMESTAMP PUSH1 0xA SWAP2 SWAP1 SWAP2 ADD SSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SLOAD PUSH1 0x40 MLOAD PUSH4 0x4BD5465 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4B9 JUMPI DUP5 SWAP2 PUSH2 0x487 JUMPI JUMPDEST POP PUSH2 0x2710 PUSH2 0x2D1 PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD565202C SLOAD DUP4 PUSH2 0x1280 JUMP JUMPDEST DIV DUP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x473 JUMPI PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652035 SLOAD DUP6 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x46F JUMPI PUSH1 0x24 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0xFAD7F387 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x464 JUMPI PUSH2 0x450 JUMPI JUMPDEST POP PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652035 SLOAD DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x44C JUMPI DUP2 DUP1 SWAP2 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x91200209 PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE DUP9 PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x441 JUMPI PUSH2 0x428 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE DUP2 PUSH32 0xAB7542BAFCED3DA2D8C881CB2DD1DE859FAC7C20D3650D2902AD389A64E08883 PUSH1 0x20 CALLER SWAP4 LOG3 DUP1 PUSH32 0x3C8F450BDFCCD4E29A4D8E9602688D5E009772A7DE7C40C7F27B8F8C129F01FA DUP5 DUP1 LOG2 JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xF13F0CAFC2E76D9B040BC1CF8FE98F442675719960E4065425C2C750AA0E19A4 PUSH1 0x40 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0x432 SWAP2 PUSH2 0x122B JUMP JUMPDEST PUSH2 0x43D JUMPI DUP4 CODESIZE PUSH2 0x39D JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP5 PUSH2 0x45D SWAP2 SWAP6 SWAP3 SWAP6 PUSH2 0x122B JUMP JUMPDEST SWAP3 CODESIZE PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4B1 JUMPI JUMPDEST DUP2 PUSH2 0x4A2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x122B JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x43D JUMPI MLOAD CODESIZE PUSH2 0x2A2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x495 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A20536F6C6F20616C726561647920736F6C7665642E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 SWAP4 SWAP3 POP EQ PUSH2 0x51C JUMPI JUMPDEST POP POP PUSH2 0x3F2 JUMP JUMPDEST PUSH2 0x55F SWAP1 PUSH1 0x64 PUSH1 0xA DUP5 ADD SWAP2 DUP3 SLOAD ISZERO PUSH2 0x637 JUMPI JUMPDEST SLOAD SUB PUSH2 0x60F JUMPI PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652027 SLOAD SWAP1 JUMPDEST SLOAD PUSH2 0x12F5 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x5CB JUMPI PUSH1 0xC ADD DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH2 0x5A3 JUMPI DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x515 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A20506F6F6C207265776172642077696E646F7720636C6F7365642E PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652026 SLOAD SWAP1 PUSH2 0x559 JUMP JUMPDEST TIMESTAMP DUP4 SSTORE DUP6 PUSH32 0x98E392E74A792835E605C302C60C0435AC790334152FD4E6CA7EC970B332AAEC PUSH1 0x20 PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE LOG2 PUSH2 0x52F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A2043616E206F6E6C7920616E73776572206F6E6365207065722064 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x30BC97 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652030 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xFF SWAP1 DUP2 SWAP1 SLOAD AND SWAP2 PUSH1 0x8 SHR AND SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x6CF JUMPI EQ PUSH2 0x206 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A20416C72656164792063686F73656E20646966666572656E74206D PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x37B232903A37B230BC97 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A2057726F6E6720616E73776572206F7220696E76616C6964207072 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x37B7B3 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x800 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x806 JUMPI JUMPDEST PUSH2 0x7F8 DUP2 DUP4 PUSH2 0x122B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1263 JUMP JUMPDEST CODESIZE PUSH2 0x145 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST PUSH2 0x84C PUSH1 0x9 DUP7 ADD SLOAD PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652027 SLOAD SWAP1 PUSH2 0x12F5 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0xED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A204C6576656C2031303020657870697265642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A205175657374696F6E20697320636C6F7365642E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x8E3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x8E3 JUMPI PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652022 SLOAD PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE SWAP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xBB0 JUMPI DUP4 SWAP2 PUSH2 0xBBB JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0xB36 JUMPI JUMPDEST ISZERO PUSH2 0xAD4 JUMPI DUP1 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1303 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD ISZERO PUSH2 0xA80 JUMPI PUSH1 0x8 DUP2 ADD PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE DUP3 PUSH1 0xA DUP3 ADD SSTORE PUSH1 0xB DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x20 PUSH1 0xC PUSH1 0x40 MLOAD SWAP3 PUSH2 0x9B8 DUP4 DUP6 PUSH2 0x122B JUMP JUMPDEST DUP6 DUP5 MSTORE DUP6 CALLDATASIZE DUP2 CALLDATACOPY ADD SWAP1 DUP3 MLOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0xA6C JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP5 GT PUSH2 0xA6C JUMPI DUP2 SWAP1 DUP4 SLOAD DUP6 DUP6 SSTORE DUP1 DUP7 LT PUSH2 0xA44 JUMPI JUMPDEST POP ADD SWAP2 DUP6 MSTORE DUP1 DUP6 KECCAK256 SWAP1 DUP6 JUMPDEST DUP5 DUP2 LT PUSH2 0xA29 JUMPI DUP7 CALLER DUP8 PUSH32 0x6C01933B9AD41CD54278498404C4955F24142D7570EFF7BCE17FC7F5EE12F892 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 ADD SSTORE SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x9F8 JUMP JUMPDEST DUP5 DUP9 MSTORE DUP6 DUP4 DUP10 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0xA5E JUMPI POP PUSH2 0x9ED JUMP JUMPDEST DUP9 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0xA51 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A205175657374696F6E20646F6573206E6F7420657869737420696E PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x103130B73597 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2043616C6C6572206973206E6F7420612067 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x30B6B29030B236B4B71037B91031B932B0BA37B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652024 SLOAD PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xBB0 JUMPI DUP4 SWAP2 PUSH2 0xB91 JUMPI JUMPDEST POP PUSH2 0x958 JUMP JUMPDEST PUSH2 0xBAA SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x806 JUMPI PUSH2 0x7F8 DUP2 DUP4 PUSH2 0x122B JUMP JUMPDEST CODESIZE PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xBD4 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x806 JUMPI PUSH2 0x7F8 DUP2 DUP4 PUSH2 0x122B JUMP JUMPDEST CODESIZE PUSH2 0x950 JUMP JUMPDEST POP CALLVALUE PUSH2 0x8E3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x8E3 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1303 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH2 0xC17 PUSH1 0x3 DUP3 ADD SLOAD ISZERO ISZERO PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x8 DUP3 ADD SLOAD AND PUSH2 0xE21 JUMPI PUSH1 0x64 PUSH1 0x6 DUP3 ADD SLOAD EQ PUSH2 0xD82 JUMPI JUMPDEST POP DUP2 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652036 SLOAD AND PUSH1 0x64 PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652025 SLOAD PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE ADDRESS PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xBB0 JUMPI DUP4 SWAP2 PUSH2 0xD63 JUMPI JUMPDEST POP ISZERO PUSH2 0xD0D JUMPI PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652025 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xF10CFE1413DA6FB4D61B5FE0472EEF72EF9191CA81DB52B96F4143513960D32D PUSH1 0x20 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A205175697A436F696E207472616E73666572206661696C65642066 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x37B9103434B73A17 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0xD7C SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x806 JUMPI PUSH2 0x7F8 DUP2 DUP4 PUSH2 0x122B JUMP JUMPDEST CODESIZE PUSH2 0xCB5 JUMP JUMPDEST PUSH1 0x9 ADD SLOAD PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652027 SLOAD PUSH2 0xDB1 SWAP2 PUSH2 0x12F5 JUMP JUMPDEST TIMESTAMP GT PUSH2 0xDBD JUMPI CODESIZE PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A204C6576656C20313030207175657374696F6E2068617320657870 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x34B932B2161031B0B73737BA10313ABC903434B73A17 PUSH1 0x51 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A205175657374696F6E20697320616C726561647920636C6F736564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x44C JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x44C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x8E1 JUMPI PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652022 SLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x464 JUMPI DUP6 SWAP2 PUSH2 0x120C JUMPI JUMPDEST POP ISZERO PUSH2 0x11B5 JUMPI DUP2 ISZERO PUSH2 0x1171 JUMPI PUSH1 0x1 DUP4 LT ISZERO DUP1 PUSH2 0x1166 JUMPI JUMPDEST ISZERO PUSH2 0x1121 JUMPI PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD565202E SLOAD SWAP2 PUSH1 0x0 NOT DUP4 EQ PUSH2 0x473 JUMPI PUSH1 0x1 DUP4 ADD PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD565202E SSTORE PUSH1 0x64 DUP5 SUB PUSH2 0x10ED JUMPI PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652029 SLOAD SWAP2 JUMPDEST DUP4 DUP7 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1303 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SWAP2 PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 PUSH1 0x6 DUP4 ADD SSTORE DUP3 PUSH1 0x7 DUP4 ADD SSTORE PUSH1 0x8 DUP3 ADD SWAP1 PUSH2 0xFF00 DUP3 SLOAD SWAP2 PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFFFF NOT AND OR SWAP1 SSTORE TIMESTAMP PUSH1 0x9 DUP3 ADD SSTORE DUP5 PUSH1 0xA DUP3 ADD SSTORE PUSH1 0xB DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x20 SWAP1 PUSH1 0xC PUSH1 0x40 MLOAD SWAP2 PUSH2 0x101B DUP5 DUP5 PUSH2 0x122B JUMP JUMPDEST DUP8 DUP4 MSTORE DUP8 CALLDATASIZE DUP2 CALLDATACOPY ADD DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x10D9 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP4 GT PUSH2 0x10D9 JUMPI DUP4 SWAP1 DUP3 SLOAD DUP5 DUP5 SSTORE DUP1 DUP6 LT PUSH2 0x10B1 JUMPI JUMPDEST POP ADD SWAP1 DUP8 MSTORE DUP3 DUP8 KECCAK256 DUP8 JUMPDEST DUP4 DUP2 LT PUSH2 0x1096 JUMPI POP POP POP POP PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE DUP4 ADD MSTORE PUSH32 0x5FFF8B8A05084A38562EA22F588B62938F68AD92FBFC50EE5B3DC2E69DD0D817 PUSH1 0x40 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 ADD SSTORE SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1059 JUMP JUMPDEST DUP4 DUP11 MSTORE DUP5 DUP4 DUP12 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x10CB JUMPI POP PUSH2 0x104F JUMP JUMPDEST DUP11 DUP2 SSTORE DUP7 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x10BE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH1 0x63 PUSH2 0x111A DUP6 PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652028 SLOAD PUSH2 0x1280 JUMP JUMPDEST DIV SWAP2 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A20446966666963756C7479206D75737420626520312D3130300000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x64 DUP4 GT ISZERO PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A20416E73776572206C6561662063616E6E6F74206265207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2043616C6C6572206973206E6F7420612067 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x30B6B29030B236B4B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x1225 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x806 JUMPI PUSH2 0x7F8 DUP2 DUP4 PUSH2 0x122B JUMP JUMPDEST CODESIZE PUSH2 0xEE5 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x124D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x127B JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x127B JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1293 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x12B0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A205175657374696F6E20646F6573206E6F742065786973742E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1293 JUMPI JUMP INVALID 0x4F 0x2F LT BLOBBASEFEE PUSH31 0xA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652031A2646970 PUSH7 0x73582212202855 DUP14 0xFC GT DUP1 PUSH13 0x6BB0CB25A8B05FCEAB97B2416E MLOAD 0xAF 0xF8 SWAP16 OR 0xDC 0x4F SSTORE 0xD2 SWAP14 CHAINID JUMPDEST PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"617:8444:11:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_bool_fromMemory":{"entryPoint":4707,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_uint256":{"entryPoint":4853,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":4736,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":4651,"id":null,"parameterSlots":2,"returnSlots":0},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_13404":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_9ca6":{"entryPoint":4777,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1E0FEF78 EQ PUSH2 0xE70 JUMPI POP DUP1 PUSH4 0x42DD0724 EQ PUSH2 0xBDA JUMPI DUP1 PUSH4 0x686CAEAF EQ PUSH2 0x8E6 JUMPI PUSH4 0x6EFA82D2 EQ PUSH2 0x4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x8E3 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x8E3 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x43D JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x43D JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8E1 JUMPI DUP1 PUSH1 0x5 SHL CALLDATASIZE PUSH1 0x24 DUP3 DUP6 ADD ADD GT PUSH2 0x8DD JUMPI DUP4 DUP7 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1303 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SWAP1 PUSH2 0xCE PUSH1 0x3 DUP4 ADD SLOAD ISZERO ISZERO PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP3 DUP4 SLOAD SWAP2 PUSH1 0xFF DUP4 AND PUSH2 0x898 JUMPI PUSH1 0x6 DUP5 ADD SWAP6 PUSH1 0x64 DUP8 SLOAD EQ PUSH2 0x81C JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x8350D44F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB LT PUSH2 0x818 JUMPI PUSH1 0x64 DUP4 DUP4 PUSH1 0x20 SWAP5 PUSH1 0x24 DUP4 SWAP6 ADD DUP5 DUP5 ADD CALLDATACOPY DUP2 ADD SUB ADD DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x80D JUMPI DUP9 SWAP2 PUSH2 0x7DE JUMPI JUMPDEST POP ISZERO PUSH2 0x78D JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD565202F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x15180 TIMESTAMP DIV SWAP2 SWAP1 DUP3 EQ PUSH2 0x6E3 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD565202F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE DUP3 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652030 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0xFF AND PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x6CF JUMPI DUP2 SLOAD PUSH1 0xFF NOT AND OR SWAP1 SSTORE JUMPDEST CALLER DUP8 MSTORE PUSH1 0xD DUP3 ADD PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP9 KECCAK256 SLOAD DUP3 EQ PUSH2 0x67E JUMPI CALLER DUP9 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 SSTORE DUP2 SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x66A JUMPI DUP1 PUSH2 0x509 JUMPI POP PUSH1 0xB DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4C4 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE TIMESTAMP PUSH1 0xA SWAP2 SWAP1 SWAP2 ADD SSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SLOAD PUSH1 0x40 MLOAD PUSH4 0x4BD5465 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4B9 JUMPI DUP5 SWAP2 PUSH2 0x487 JUMPI JUMPDEST POP PUSH2 0x2710 PUSH2 0x2D1 PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD565202C SLOAD DUP4 PUSH2 0x1280 JUMP JUMPDEST DIV DUP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x473 JUMPI PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652035 SLOAD DUP6 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x46F JUMPI PUSH1 0x24 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0xFAD7F387 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x464 JUMPI PUSH2 0x450 JUMPI JUMPDEST POP PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652035 SLOAD DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x44C JUMPI DUP2 DUP1 SWAP2 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x91200209 PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE DUP9 PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x441 JUMPI PUSH2 0x428 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE DUP2 PUSH32 0xAB7542BAFCED3DA2D8C881CB2DD1DE859FAC7C20D3650D2902AD389A64E08883 PUSH1 0x20 CALLER SWAP4 LOG3 DUP1 PUSH32 0x3C8F450BDFCCD4E29A4D8E9602688D5E009772A7DE7C40C7F27B8F8C129F01FA DUP5 DUP1 LOG2 JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xF13F0CAFC2E76D9B040BC1CF8FE98F442675719960E4065425C2C750AA0E19A4 PUSH1 0x40 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0x432 SWAP2 PUSH2 0x122B JUMP JUMPDEST PUSH2 0x43D JUMPI DUP4 CODESIZE PUSH2 0x39D JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP5 PUSH2 0x45D SWAP2 SWAP6 SWAP3 SWAP6 PUSH2 0x122B JUMP JUMPDEST SWAP3 CODESIZE PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4B1 JUMPI JUMPDEST DUP2 PUSH2 0x4A2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x122B JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x43D JUMPI MLOAD CODESIZE PUSH2 0x2A2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x495 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A20536F6C6F20616C726561647920736F6C7665642E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 SWAP4 SWAP3 POP EQ PUSH2 0x51C JUMPI JUMPDEST POP POP PUSH2 0x3F2 JUMP JUMPDEST PUSH2 0x55F SWAP1 PUSH1 0x64 PUSH1 0xA DUP5 ADD SWAP2 DUP3 SLOAD ISZERO PUSH2 0x637 JUMPI JUMPDEST SLOAD SUB PUSH2 0x60F JUMPI PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652027 SLOAD SWAP1 JUMPDEST SLOAD PUSH2 0x12F5 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x5CB JUMPI PUSH1 0xC ADD DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH2 0x5A3 JUMPI DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x515 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A20506F6F6C207265776172642077696E646F7720636C6F7365642E PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652026 SLOAD SWAP1 PUSH2 0x559 JUMP JUMPDEST TIMESTAMP DUP4 SSTORE DUP6 PUSH32 0x98E392E74A792835E605C302C60C0435AC790334152FD4E6CA7EC970B332AAEC PUSH1 0x20 PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE LOG2 PUSH2 0x52F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A2043616E206F6E6C7920616E73776572206F6E6365207065722064 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x30BC97 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652030 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xFF SWAP1 DUP2 SWAP1 SLOAD AND SWAP2 PUSH1 0x8 SHR AND SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x6CF JUMPI EQ PUSH2 0x206 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A20416C72656164792063686F73656E20646966666572656E74206D PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x37B232903A37B230BC97 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A2057726F6E6720616E73776572206F7220696E76616C6964207072 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x37B7B3 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x800 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x806 JUMPI JUMPDEST PUSH2 0x7F8 DUP2 DUP4 PUSH2 0x122B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1263 JUMP JUMPDEST CODESIZE PUSH2 0x145 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST PUSH2 0x84C PUSH1 0x9 DUP7 ADD SLOAD PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652027 SLOAD SWAP1 PUSH2 0x12F5 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0xED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A204C6576656C2031303020657870697265642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A205175657374696F6E20697320636C6F7365642E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x8E3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x8E3 JUMPI PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652022 SLOAD PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE SWAP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xBB0 JUMPI DUP4 SWAP2 PUSH2 0xBBB JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0xB36 JUMPI JUMPDEST ISZERO PUSH2 0xAD4 JUMPI DUP1 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1303 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD ISZERO PUSH2 0xA80 JUMPI PUSH1 0x8 DUP2 ADD PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE DUP3 PUSH1 0xA DUP3 ADD SSTORE PUSH1 0xB DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x20 PUSH1 0xC PUSH1 0x40 MLOAD SWAP3 PUSH2 0x9B8 DUP4 DUP6 PUSH2 0x122B JUMP JUMPDEST DUP6 DUP5 MSTORE DUP6 CALLDATASIZE DUP2 CALLDATACOPY ADD SWAP1 DUP3 MLOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0xA6C JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP5 GT PUSH2 0xA6C JUMPI DUP2 SWAP1 DUP4 SLOAD DUP6 DUP6 SSTORE DUP1 DUP7 LT PUSH2 0xA44 JUMPI JUMPDEST POP ADD SWAP2 DUP6 MSTORE DUP1 DUP6 KECCAK256 SWAP1 DUP6 JUMPDEST DUP5 DUP2 LT PUSH2 0xA29 JUMPI DUP7 CALLER DUP8 PUSH32 0x6C01933B9AD41CD54278498404C4955F24142D7570EFF7BCE17FC7F5EE12F892 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 ADD SSTORE SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x9F8 JUMP JUMPDEST DUP5 DUP9 MSTORE DUP6 DUP4 DUP10 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0xA5E JUMPI POP PUSH2 0x9ED JUMP JUMPDEST DUP9 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0xA51 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A205175657374696F6E20646F6573206E6F7420657869737420696E PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x103130B73597 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2043616C6C6572206973206E6F7420612067 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x30B6B29030B236B4B71037B91031B932B0BA37B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652024 SLOAD PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xBB0 JUMPI DUP4 SWAP2 PUSH2 0xB91 JUMPI JUMPDEST POP PUSH2 0x958 JUMP JUMPDEST PUSH2 0xBAA SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x806 JUMPI PUSH2 0x7F8 DUP2 DUP4 PUSH2 0x122B JUMP JUMPDEST CODESIZE PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xBD4 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x806 JUMPI PUSH2 0x7F8 DUP2 DUP4 PUSH2 0x122B JUMP JUMPDEST CODESIZE PUSH2 0x950 JUMP JUMPDEST POP CALLVALUE PUSH2 0x8E3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x8E3 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1303 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH2 0xC17 PUSH1 0x3 DUP3 ADD SLOAD ISZERO ISZERO PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x8 DUP3 ADD SLOAD AND PUSH2 0xE21 JUMPI PUSH1 0x64 PUSH1 0x6 DUP3 ADD SLOAD EQ PUSH2 0xD82 JUMPI JUMPDEST POP DUP2 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652036 SLOAD AND PUSH1 0x64 PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652025 SLOAD PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE ADDRESS PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xBB0 JUMPI DUP4 SWAP2 PUSH2 0xD63 JUMPI JUMPDEST POP ISZERO PUSH2 0xD0D JUMPI PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652025 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xF10CFE1413DA6FB4D61B5FE0472EEF72EF9191CA81DB52B96F4143513960D32D PUSH1 0x20 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A205175697A436F696E207472616E73666572206661696C65642066 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x37B9103434B73A17 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0xD7C SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x806 JUMPI PUSH2 0x7F8 DUP2 DUP4 PUSH2 0x122B JUMP JUMPDEST CODESIZE PUSH2 0xCB5 JUMP JUMPDEST PUSH1 0x9 ADD SLOAD PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652027 SLOAD PUSH2 0xDB1 SWAP2 PUSH2 0x12F5 JUMP JUMPDEST TIMESTAMP GT PUSH2 0xDBD JUMPI CODESIZE PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A204C6576656C20313030207175657374696F6E2068617320657870 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x34B932B2161031B0B73737BA10313ABC903434B73A17 PUSH1 0x51 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A205175657374696F6E20697320616C726561647920636C6F736564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x44C JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x44C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x8E1 JUMPI PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652022 SLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x464 JUMPI DUP6 SWAP2 PUSH2 0x120C JUMPI JUMPDEST POP ISZERO PUSH2 0x11B5 JUMPI DUP2 ISZERO PUSH2 0x1171 JUMPI PUSH1 0x1 DUP4 LT ISZERO DUP1 PUSH2 0x1166 JUMPI JUMPDEST ISZERO PUSH2 0x1121 JUMPI PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD565202E SLOAD SWAP2 PUSH1 0x0 NOT DUP4 EQ PUSH2 0x473 JUMPI PUSH1 0x1 DUP4 ADD PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD565202E SSTORE PUSH1 0x64 DUP5 SUB PUSH2 0x10ED JUMPI PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652029 SLOAD SWAP2 JUMPDEST DUP4 DUP7 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1303 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SWAP2 PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 PUSH1 0x6 DUP4 ADD SSTORE DUP3 PUSH1 0x7 DUP4 ADD SSTORE PUSH1 0x8 DUP3 ADD SWAP1 PUSH2 0xFF00 DUP3 SLOAD SWAP2 PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFFFF NOT AND OR SWAP1 SSTORE TIMESTAMP PUSH1 0x9 DUP3 ADD SSTORE DUP5 PUSH1 0xA DUP3 ADD SSTORE PUSH1 0xB DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x20 SWAP1 PUSH1 0xC PUSH1 0x40 MLOAD SWAP2 PUSH2 0x101B DUP5 DUP5 PUSH2 0x122B JUMP JUMPDEST DUP8 DUP4 MSTORE DUP8 CALLDATASIZE DUP2 CALLDATACOPY ADD DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x10D9 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP4 GT PUSH2 0x10D9 JUMPI DUP4 SWAP1 DUP3 SLOAD DUP5 DUP5 SSTORE DUP1 DUP6 LT PUSH2 0x10B1 JUMPI JUMPDEST POP ADD SWAP1 DUP8 MSTORE DUP3 DUP8 KECCAK256 DUP8 JUMPDEST DUP4 DUP2 LT PUSH2 0x1096 JUMPI POP POP POP POP PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE DUP4 ADD MSTORE PUSH32 0x5FFF8B8A05084A38562EA22F588B62938F68AD92FBFC50EE5B3DC2E69DD0D817 PUSH1 0x40 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 ADD SSTORE SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1059 JUMP JUMPDEST DUP4 DUP11 MSTORE DUP5 DUP4 DUP12 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x10CB JUMPI POP PUSH2 0x104F JUMP JUMPDEST DUP11 DUP2 SSTORE DUP7 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x10BE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH1 0x63 PUSH2 0x111A DUP6 PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652028 SLOAD PUSH2 0x1280 JUMP JUMPDEST DIV SWAP2 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A20446966666963756C7479206D75737420626520312D3130300000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x64 DUP4 GT ISZERO PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A20416E73776572206C6561662063616E6E6F74206265207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2043616C6C6572206973206E6F7420612067 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x30B6B29030B236B4B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x1225 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x806 JUMPI PUSH2 0x7F8 DUP2 DUP4 PUSH2 0x122B JUMP JUMPDEST CODESIZE PUSH2 0xEE5 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x124D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x127B JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x127B JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1293 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x12B0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A205175657374696F6E20646F6573206E6F742065786973742E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1293 JUMPI JUMP INVALID 0x4F 0x2F LT BLOBBASEFEE PUSH31 0xA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652031A2646970 PUSH7 0x73582212202855 DUP14 0xFC GT DUP1 PUSH13 0x6BB0CB25A8B05FCEAB97B2416E MLOAD 0xAF 0xF8 SWAP16 OR 0xDC 0x4F SSTORE 0xD2 SWAP14 CHAINID JUMPDEST PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"617:8444:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;617:8444:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;617:8444:11;;;;;3672:26;3664:83;3672:26;;;617:8444;3672:40;;3664:83;:::i;:::-;3767:17;;;617:8444;;;;;;;;;3831:24;;;617:8444;3859:3;617:8444;;3831:31;3827:204;;617:8444;;;;-1:-1:-1;;;4101:65:11;;617:8444;4101:65;;617:8444;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;617:8444:11;;3859:3;617:8444;;;;;;;;;;;;;;4101:65;;4122:4;;4101:65;;;;;;;;;;;617:8444;;;;;4334:10;617:8444;;;;4317:16;617:8444;;;;;;4289:12;4270:15;617:8444;;;4317:44;;;;-1:-1:-1;4334:10:11;617:8444;;;;4317:16;617:8444;;;;;4334:10;;617:8444;;;4334:10;617:8444;;;;4524:19;617:8444;;;;;3767:17;617:8444;;;;;;;;;;;;;;-1:-1:-1;;617:8444:11;;;;4313:335;4334:10;617:8444;;4317:16;4668:22;;617:8444;;;;;;;;4668:50;;617:8444;;4334:10;617:8444;;;;;;;;;;3767:17;617:8444;;;;;;;;;4848:48;;;-1:-1:-1;4921:27:11;;;617:8444;;-1:-1:-1;;;;;617:8444:11;;;;;-1:-1:-1;;;;;;617:8444:11;4334:10;617:8444;;;4270:15;5065:31;;;;;617:8444;;;-1:-1:-1;;617:8444:11;;;;;;;;-1:-1:-1;;;5192:79:11;;617:8444;5192:79;;617:8444;;;;;;;;4122:4;5192:79;;;;;;;;;;;4844:1557;617:8444;5353:5;5309:40;5323:26;617:8444;5309:40;;:::i;:::-;617:8444;;;;;;;;;5445:14;617:8444;;;;-1:-1:-1;;;;;617:8444:11;5445:53;;;;;617:8444;;;;;;;;;;;;;5445:53;;617:8444;5445:53;;617:8444;5445:53;;;;;;;;4844:1557;-1:-1:-1;5445:14:11;617:8444;;;-1:-1:-1;;;;;617:8444:11;5513:63;;;;;617:8444;;;;;;;;;;;;;5513:63;;4334:10;617:8444;5513:63;;617:8444;;;;;;5513:63;;;;;;;;4844:1557;617:8444;;;;;;;4334:10;5598:63;617:8444;4334:10;5598:63;;5681:27;;;;;4844:1557;617:8444;;;;;;;;;;6418:64;617:8444;4334:10;6418:64;;617:8444;;5513:63;;;;;:::i;:::-;617:8444;;5513:63;;;;617:8444;;;;5513:63;617:8444;;;;;;;;;5513:63;617:8444;;;5445:53;;;;;;;;:::i;:::-;;;;;;617:8444;;;;;;;;;5445:53;617:8444;;;;-1:-1:-1;;;617:8444:11;;;;;;;;5192:79;;;617:8444;5192:79;;617:8444;5192:79;;;;;;617:8444;5192:79;;;:::i;:::-;;;617:8444;;;;;5192:79;;;;;;-1:-1:-1;5192:79:11;;;617:8444;;;;;;;;;;;;-1:-1:-1;;;617:8444:11;;;;;;;;;;;;;;;;;3859:3;;617:8444;4844:1557;617:8444;;;;;5732:48;5728:673;;4844:1557;;;;;5728:673;6232:42;5801:31;3859:3;5801:31;;;617:8444;;;5801:36;5797:207;;5728:673;617:8444;6040:31;6039:149;;6092:38;617:8444;6039:149;;617:8444;6232:42;:::i;:::-;4270:15;6213:61;617:8444;;6345:27;;617:8444;;;-1:-1:-1;;;617:8444:11;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;617:8444:11;4334:10;617:8444;;;5728:673;;;;617:8444;-1:-1:-1;;;617:8444:11;;;;;;;;;-1:-1:-1;;;617:8444:11;;;;;;;;;3859:3;617:8444;;;;;;;;;;;;;;;;;;;;;;;6039:149;6150:38;617:8444;6039:149;;;5797:207;4270:15;617:8444;;;5931:57;617:8444;;;4270:15;617:8444;;5931:57;5797:207;;617:8444;-1:-1:-1;;;617:8444:11;;;;;;;;;;;-1:-1:-1;;;617:8444:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;3859:3:11;617:8444;;;;;;;-1:-1:-1;;;617:8444:11;;;;;;;;4313:335;4334:10;617:8444;;;;4524:19;617:8444;;;;;;;;;;;;3767:17;617:8444;;;;;;;;;;;;;;;;4313:335;617:8444;;;-1:-1:-1;;;617:8444:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;3859:3:11;617:8444;;;;;;;;;-1:-1:-1;;;617:8444:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;3859:3:11;617:8444;;;;;;4101:65;;;;617:8444;4101:65;617:8444;4101:65;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;617:8444;;;;;;;;;;;;;3827:204;3906:67;:26;;;617:8444;3935:38;617:8444;3906:67;;:::i;:::-;3887:15;:86;617:8444;3827:204;617:8444;;;-1:-1:-1;;;617:8444:11;;;;;;;;;;;;;;;;;3859:3;;617:8444;;;;-1:-1:-1;;;617:8444:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;617:8444:11;;;;241:33:18;617:8444:11;;;-1:-1:-1;;;7563:82:11;;617:8444;7563:82;;;617:8444;;;;7634:10;617:8444;;;;;;;;;;;7596:4;7563:82;;;;;;;;;;;617:8444;7563:175;;;;;617:8444;;;;;;;-1:-1:-1;;;;;;;;;;;617:8444:11;;;;;7903:26;;;617:8444;7903:40;617:8444;;8113:17;;;617:8444;;;;;;;8149:31;;;;617:8444;8195:27;;;-1:-1:-1;;;;;617:8444:11;;;;;;;;8340:27;617:8444;;;;;;;:::i;:::-;;;;;;;;8340:27;617:8444;;;;;;;;;-1:-1:-1;;;617:8444:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7634:10;;;8806:50;7634:10;;8806:50;617:8444;;;;;-1:-1:-1;;;;;617:8444:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;617:8444:11;;;;;-1:-1:-1;;;617:8444:11;;;;;;;;;;;-1:-1:-1;;;617:8444:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;617:8444:11;;;;;;;;;;-1:-1:-1;;;617:8444:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;617:8444:11;;;;;;;7563:175;-1:-1:-1;7710:15:11;617:8444;;;-1:-1:-1;;;7662:76:11;;617:8444;7662:76;;617:8444;;;;7634:10;617:8444;;;;;;;;7596:4;7662:76;;;;;;;;;;;7563:175;;;;7662:76;;;;617:8444;7662:76;617:8444;7662:76;;;;;;;:::i;:::-;;;;;617:8444;;;;;;;;;7563:82;;;;617:8444;7563:82;617:8444;7563:82;;;;;;;:::i;:::-;;;;617:8444;;;;;;;-1:-1:-1;;617:8444:11;;;;;;;;;-1:-1:-1;;;;;;;;;;;617:8444:11;;;;;6696:83;6704:26;;;617:8444;6704:40;;6696:83;:::i;:::-;617:8444;6799:17;;;617:8444;;;;6899:3;6871:24;;;617:8444;6871:31;6867:217;;617:8444;;;;;;;;;7104:11;617:8444;;6899:3;7156:19;617:8444;;;;;;;;;;;7104:72;;7129:10;617:8444;7104:72;;617:8444;7149:4;617:8444;;;;;;;;7104:72;;;;;;;;;;;617:8444;;;;;7156:19;617:8444;;;;;;;7239:59;617:8444;7129:10;7239:59;;617:8444;;;;;-1:-1:-1;;;617:8444:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;6899:3:11;617:8444;;;;;;7104:72;;;;617:8444;7104:72;617:8444;7104:72;;;;;;;:::i;:::-;;;;6867:217;6946:26;;617:8444;6975:38;617:8444;6946:67;;;:::i;:::-;6927:15;:86;617:8444;;6867:217;;;617:8444;;;-1:-1:-1;;;617:8444:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;6899:3:11;617:8444;;;;;;;;;-1:-1:-1;;;617:8444:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;617:8444:11;;;;;;;;;;;;;;;-1:-1:-1;;617:8444:11;;;;;;;;;;;;;;;;;;241:33:18;617:8444:11;-1:-1:-1;;;920:82:11;;617:8444;920:82;;617:8444;991:10;617:8444;;;;;920:82;617:8444;920:82;953:4;920:82;;;;;;;;;;;617:8444;;;;;2006:25;;617:8444;;;2087:21;;;:48;;;617:8444;;;;2204:17;617:8444;;-1:-1:-1;;617:8444:11;;;;;;;2204:17;617:8444;;2307:23;;617:8444;;2370:23;617:8444;2303:208;;617:8444;;;-1:-1:-1;;;;;;;;;;;617:8444:11;;;;;2589:29;;;;617:8444;;;;2698:20;;617:8444;2741:27;;;617:8444;;;;;991:10;617:8444;-1:-1:-1;;;;;617:8444:11;;;;;;;;2792:27;;;;617:8444;2849:28;;;;617:8444;2911:20;;;617:8444;;;;;2911:20;617:8444;;;;;;;;;3017:15;2985:29;;;617:8444;3043:34;;;;617:8444;3092:30;;;-1:-1:-1;;;;;617:8444:11;;;;;;;;;2204:17;617:8444;;;;;;;:::i;:::-;;;;;;;;3146:30;617:8444;;;;;;;;-1:-1:-1;;;617:8444:11;;;;;;;;;;;;;;;;2303:208;617:8444;;;;;;;;;;;;;;;;;;;;;;;;;;;3214:79;617:8444;991:10;3214:79;;617:8444;;;;;-1:-1:-1;;;;;617:8444:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;617:8444:11;;;;;-1:-1:-1;;;617:8444:11;;;;;;;;2303:208;2497:2;2450:43;617:8444;2450:24;617:8444;2450:43;:::i;:::-;617:8444;2303:208;;;617:8444;;;-1:-1:-1;;;617:8444:11;;;;;;;;;;;;;;;;;;;;2087:48;2112:23;617:8444;2112:23;;;2087:48;;617:8444;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;617:8444:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;617:8444:11;;;;;;;920:82;;;;617:8444;920:82;617:8444;920:82;;;;;;;:::i;:::-;;;;617:8444;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;617:8444:11;;;;;-1:-1:-1;617:8444:11;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;617:8444:11;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;617:8444:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"},"methodIdentifiers":{"activateQuestionFromBank(uint256)":"686caeaf","buyHint(uint256)":"42dd0724","createQuestion(bytes32,bytes32,uint256,uint8)":"1e0fef78","submitAnswer(uint256,bytes32,bytes32[])":"6efa82d2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"solver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"submittedAnswerHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isCorrect\",\"type\":\"bool\"}],\"name\":\"AnswerSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"name\":\"HintPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"quizId\",\"type\":\"uint256\"}],\"name\":\"PlayerJoinedQuiz\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"activator\",\"type\":\"address\"}],\"name\":\"QuestionActivatedFromBank\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"}],\"name\":\"QuestionClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"difficultyLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseRewardAmount\",\"type\":\"uint256\"}],\"name\":\"QuestionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"name\":\"QuestionRewardWindowStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"quizId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"submittedAnswerIndex\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isCorrect\",\"type\":\"bool\"}],\"name\":\"QuizAnswerSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"quizId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalQuestions\",\"type\":\"uint256\"}],\"name\":\"QuizCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"solver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"RewardDistributed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_questionId\",\"type\":\"uint256\"}],\"name\":\"activateQuestionFromBank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_questionId\",\"type\":\"uint256\"}],\"name\":\"buyHint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_answerLeaf\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_hintHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_difficultyLevel\",\"type\":\"uint256\"},{\"internalType\":\"enum LibAppStorage.QuestionMode\",\"name\":\"_mode\",\"type\":\"uint8\"}],\"name\":\"createQuestion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_questionId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_answerLeaf\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"submitAnswer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createQuestion(bytes32,bytes32,uint256,uint8)\":{\"notice\":\"\\u0e2a\\u0e23\\u0e49\\u0e32\\u0e07\\u0e04\\u0e33\\u0e16\\u0e32\\u0e21\\u0e43\\u0e2b\\u0e21\\u0e48\\u0e41\\u0e25\\u0e30\\u0e1a\\u0e31\\u0e19\\u0e17\\u0e36\\u0e01\\u0e02\\u0e49\\u0e2d\\u0e21\\u0e39\\u0e25\\u0e1a\\u0e19 Smart Contract\"},\"submitAnswer(uint256,bytes32,bytes32[])\":{\"notice\":\"\\u0e1c\\u0e39\\u0e49\\u0e40\\u0e25\\u0e48\\u0e19\\u0e2a\\u0e48\\u0e07\\u0e04\\u0e33\\u0e15\\u0e2d\\u0e1a + Merkle proof\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/facets/QuizGameModeFacet.sol\":\"QuizGameModeFacet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/QuizTypes.sol\":{\"keccak256\":\"0x6faecd3883faf25ec99b657d5972eec3f8c98fec4816ec363e86af44b7077c98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c290a2d82697aecaae04626da29adbe683dcdc75a3679ebe7c8e32e1519336\",\"dweb:/ipfs/QmPTEeLgjfTAsqzCDd9g6zHkByQgopYwGpd2FWcigmR9d9\"]},\"contracts/facets/QuizGameModeFacet.sol\":{\"keccak256\":\"0x8c3987bba3cd48b959f09e11ef68fbd2b51862331667f00fb66d39c9f77e0ddf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://934d9fa373584c7f958b4e1f5926e14837b9bb4dd44b9d5ec1ca88106bc8ac2b\",\"dweb:/ipfs/QmXPdxSoEZ9aw5DgST2htxjEbKQjVbCtwyuxu4LVCkLcXQ\"]},\"contracts/interfaces/IMerkleFacet.sol\":{\"keccak256\":\"0x891d7acf9b07803c656da93fc9408e39ef0c5aaec189612d0150087368efc8c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62521adb94ea5941de928b64bdd0185992bc5d1877f7045cd765552eeccb34a9\",\"dweb:/ipfs/Qmb5TnKmZp4MrwGzbazTrYbeTvv2siHe4QsVPS3iL6z6SG\"]},\"contracts/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xb568fb1d3827b5007e47d057e64bca1b938078ef4b747b4398effa28592cd9d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://813fcf9e80c8b702e2ea8aa901f90d143b7033508aa8db0e952c2445e2358359\",\"dweb:/ipfs/QmWK7wBKVzYAHUxxcwdHHjJdaCuivc9P2j35pQSvWCwFtF\"]},\"contracts/interfaces/IQuizCoin.sol\":{\"keccak256\":\"0x6734dd57dbb05157b8cbcdbc8f2fae2c7b539cdd523142aa6481b3ca66572ab8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cbc21dc80802bc9770c919f58c8bec8a5209fcd62897a48873b3f521914c749\",\"dweb:/ipfs/QmSDKuVqCuvzqKn12wrc77KDkMV4j3aehYn3XWDRuMd5NC\"]},\"contracts/interfaces/IQuizGameEvents.sol\":{\"keccak256\":\"0xa3927c841b265ec56adebc9b6088bff7c0281b10d932a1b35fc3594045447c35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f502d63f65c43635bc1d1ff57b2093f3d570fcee97b9e6ca22a2d614c5f8a06f\",\"dweb:/ipfs/QmQhgFRkseoCCGfq46Bsi9MKBWjr7xeh1k4r62jQJ3jE1g\"]},\"contracts/interfaces/IQuizGameReward.sol\":{\"keccak256\":\"0x01fbd08cadb068b80173a9ec68afe7624b742f6d87e27edc4e8b51e5d188acaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71f08e4d4a5cdded1f55c4bda1d107df1ac76205acf4ac812cc14c5d2f60bb56\",\"dweb:/ipfs/QmTcYjtFHFmoRXz2TQmLuKW1HkdiVj5ngz2jjdAad3Df9r\"]},\"contracts/libraries/LibAppStorage.sol\":{\"keccak256\":\"0x9c7f5d9fb0b29b97f6b5f83c97b49ddf6470f3c96299f397abe216b638c00989\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c5d9e1bd0fcbf87af8e5627813be0c56b84bc5c094806c64820cefe88584829\",\"dweb:/ipfs/QmVnMYPeMs5eBfvE14QGJB1TVg5FMRqww9puJZfyByCQfG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/facets/QuizParticipationFacet.sol":{"QuizParticipationFacet":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"questionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"solver","type":"address"},{"indexed":false,"internalType":"bytes32","name":"submittedAnswerHash","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"isCorrect","type":"bool"}],"name":"AnswerSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"questionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":false,"internalType":"uint256","name":"cost","type":"uint256"}],"name":"HintPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":true,"internalType":"uint256","name":"quizId","type":"uint256"}],"name":"PlayerJoinedQuiz","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"questionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"activator","type":"address"}],"name":"QuestionActivatedFromBank","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"questionId","type":"uint256"}],"name":"QuestionClosed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"questionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"uint256","name":"difficultyLevel","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"baseRewardAmount","type":"uint256"}],"name":"QuestionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"questionId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"}],"name":"QuestionRewardWindowStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":true,"internalType":"uint256","name":"quizId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"questionIndex","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"submittedAnswerIndex","type":"uint8"},{"indexed":false,"internalType":"bool","name":"isCorrect","type":"bool"}],"name":"QuizAnswerSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":true,"internalType":"uint256","name":"quizId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rewardAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalQuestions","type":"uint256"}],"name":"QuizCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"questionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"solver","type":"address"},{"indexed":false,"internalType":"uint256","name":"rewardAmount","type":"uint256"}],"name":"RewardDistributed","type":"event"},{"inputs":[{"internalType":"uint256","name":"_quizId","type":"uint256"}],"name":"joinQuiz","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_quizId","type":"uint256"},{"internalType":"uint256","name":"_questionIndex","type":"uint256"},{"internalType":"uint8","name":"_submittedAnswerIndex","type":"uint8"},{"internalType":"bytes32","name":"leaf","type":"bytes32"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"submitQuizAnswer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608080604052346015576106f3908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806320725d591461040a5763967023981461003257600080fd5b346102ee5760a03660031901126102ee576004356024359060443560ff81168091036102ee5760843567ffffffffffffffff81116102ee57366023820112156102ee57806004013567ffffffffffffffff81116102ee578060051b9036602483850101116102ee57846000527f4f2f104a7ea12e35172792673c68fe1423b90b4f6b86a6c5f5a9a85bd565203360205260408060002060009060018060a01b03331682526020522091856000527f4f2f104a7ea12e35172792673c68fe1423b90b4f6b86a6c5f5a9a85bd5652032602052604060002060ff845416156103b9578061012560ff6005600394015416610671565b015487101561036857600283019387855410156102f35760408051638350d44f60e01b81526064356004820152602481019190915260448101849052926001600160fb1b03106102ee57606483836020946024839501848401378101030181305afa9081156102e257600091610276575b5015610231578460019255846000526003810160205260406000208360ff19825416179055846000526004810160205260406000208260ff19825416179055018054600019811461021b576001019055604051908152600160208201527f0a06276302b6bb1d092bf330b1622caaa3ff824d8120568193eb6868f20ecb8a60403392a4005b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152601b60248201527f5175697a3a20496e76616c696420616e737765722070726f6f662e00000000006044820152606490fd5b60203d6020116102db575b601f8101601f1916820167ffffffffffffffff8111838210176102c7576020918391604052810103126102c357519081151582036102c0575038610196565b80fd5b5080fd5b634e487b7160e01b84526041600452602484fd5b503d610281565b6040513d6000823e3d90fd5b600080fd5b60405162461bcd60e51b815260206004820152604160248201527f5175697a3a20596f75206861766520616c726561647920616e7377657265642060448201527f6120686967686572206f7220657175616c20696e646578207175657374696f6e6064820152601760f91b608482015260a490fd5b60405162461bcd60e51b815260206004820152602360248201527f5175697a3a205175657374696f6e20696e646578206f7574206f6620626f756e60448201526232399760e91b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f5175697a3a20596f75206d757374206a6f696e20746865207175697a2066697260448201526239ba1760e91b6064820152608490fd5b346102ee5760203660031901126102ee57600435806000527f4f2f104a7ea12e35172792673c68fe1423b90b4f6b86a6c5f5a9a85bd5652032602052604060002061045b60ff600583015416610671565b60008281527f4f2f104a7ea12e35172792673c68fe1423b90b4f6b86a6c5f5a9a85bd56520336020908152604080832033845290915290205460ff1661061b57816000527f4f2f104a7ea12e35172792673c68fe1423b90b4f6b86a6c5f5a9a85bd5652034602052600460406000205491015411156105d65760008181527f4f2f104a7ea12e35172792673c68fe1423b90b4f6b86a6c5f5a9a85bd5652033602090815260408083203384528252808320805460ff191660011790558383527f4f2f104a7ea12e35172792673c68fe1423b90b4f6b86a6c5f5a9a85bd56520349091529020805490680100000000000000008210156105c057600182018082558210156105aa57600052602060002001336bffffffffffffffffffffffff60a01b825416179055337feb0ce0a0ebb6cd81f55c52eabb2b82d4426db73ee88d3aee11455a02246ae609600080a3005b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152601760248201527f5175697a3a20546865207175697a2069732066756c6c2e0000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152602860248201527f5175697a3a20596f75206861766520616c7265616479206a6f696e656420746860448201526734b99038bab4bd1760c11b6064820152608490fd5b1561067857565b60405162461bcd60e51b815260206004820152601960248201527f5175697a3a205175697a206973206e6f74206163746976652e000000000000006044820152606490fdfea26469706673582212200dac9af5139a810fff21e19641e6230aa1e4ec86b1305a80837a60f73f312fd164736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x15 JUMPI PUSH2 0x6F3 SWAP1 DUP2 PUSH2 0x1B DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20725D59 EQ PUSH2 0x40A JUMPI PUSH4 0x96702398 EQ PUSH2 0x32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2EE JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EE JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x2EE JUMPI PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2EE JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x2EE JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2EE JUMPI DUP1 PUSH1 0x5 SHL SWAP1 CALLDATASIZE PUSH1 0x24 DUP4 DUP6 ADD ADD GT PUSH2 0x2EE JUMPI DUP5 PUSH1 0x0 MSTORE PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652033 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP2 DUP6 PUSH1 0x0 MSTORE PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652032 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF DUP5 SLOAD AND ISZERO PUSH2 0x3B9 JUMPI DUP1 PUSH2 0x125 PUSH1 0xFF PUSH1 0x5 PUSH1 0x3 SWAP5 ADD SLOAD AND PUSH2 0x671 JUMP JUMPDEST ADD SLOAD DUP8 LT ISZERO PUSH2 0x368 JUMPI PUSH1 0x2 DUP4 ADD SWAP4 DUP8 DUP6 SLOAD LT ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x8350D44F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB LT PUSH2 0x2EE JUMPI PUSH1 0x64 DUP4 DUP4 PUSH1 0x20 SWAP5 PUSH1 0x24 DUP4 SWAP6 ADD DUP5 DUP5 ADD CALLDATACOPY DUP2 ADD SUB ADD DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x276 JUMPI JUMPDEST POP ISZERO PUSH2 0x231 JUMPI DUP5 PUSH1 0x1 SWAP3 SSTORE DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 DUP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 PUSH1 0x0 MSTORE PUSH1 0x4 DUP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD DUP1 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x21B JUMPI PUSH1 0x1 ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xA06276302B6BB1D092BF330B1622CAAA3FF824D8120568193EB6868F20ECB8A PUSH1 0x40 CALLER SWAP3 LOG4 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A20496E76616C696420616E737765722070726F6F662E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2DB JUMPI JUMPDEST PUSH1 0x1F DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0x2C7 JUMPI PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x40 MSTORE DUP2 ADD SUB SLT PUSH2 0x2C3 JUMPI MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x2C0 JUMPI POP CODESIZE PUSH2 0x196 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x281 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A20596F75206861766520616C726561647920616E73776572656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6120686967686572206F7220657175616C20696E646578207175657374696F6E PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A205175657374696F6E20696E646578206F7574206F6620626F756E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x323997 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A20596F75206D757374206A6F696E20746865207175697A20666972 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x39BA17 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2EE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EE JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652032 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x45B PUSH1 0xFF PUSH1 0x5 DUP4 ADD SLOAD AND PUSH2 0x671 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652033 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x61B JUMPI DUP2 PUSH1 0x0 MSTORE PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652034 PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 ADD SLOAD GT ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652033 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP4 DUP4 MSTORE PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652034 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH2 0x5AA JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD CALLER PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE CALLER PUSH32 0xEB0CE0A0EBB6CD81F55C52EABB2B82D4426DB73EE88D3AEE11455A02246AE609 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A20546865207175697A2069732066756C6C2E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A20596F75206861766520616C7265616479206A6F696E6564207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x34B99038BAB4BD17 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x678 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A205175697A206973206E6F74206163746976652E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xAC SWAP11 CREATE2 SGT SWAP11 DUP2 0xF SELFDESTRUCT 0x21 0xE1 SWAP7 COINBASE 0xE6 0x23 EXP LOG1 0xE4 0xEC DUP7 0xB1 ADDRESS GAS DUP1 DUP4 PUSH27 0x60F73F312FD164736F6C634300081C003300000000000000000000 ","sourceMap":"579:2605:12:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"require_helper_stringliteral_18c6":{"entryPoint":1649,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806320725d591461040a5763967023981461003257600080fd5b346102ee5760a03660031901126102ee576004356024359060443560ff81168091036102ee5760843567ffffffffffffffff81116102ee57366023820112156102ee57806004013567ffffffffffffffff81116102ee578060051b9036602483850101116102ee57846000527f4f2f104a7ea12e35172792673c68fe1423b90b4f6b86a6c5f5a9a85bd565203360205260408060002060009060018060a01b03331682526020522091856000527f4f2f104a7ea12e35172792673c68fe1423b90b4f6b86a6c5f5a9a85bd5652032602052604060002060ff845416156103b9578061012560ff6005600394015416610671565b015487101561036857600283019387855410156102f35760408051638350d44f60e01b81526064356004820152602481019190915260448101849052926001600160fb1b03106102ee57606483836020946024839501848401378101030181305afa9081156102e257600091610276575b5015610231578460019255846000526003810160205260406000208360ff19825416179055846000526004810160205260406000208260ff19825416179055018054600019811461021b576001019055604051908152600160208201527f0a06276302b6bb1d092bf330b1622caaa3ff824d8120568193eb6868f20ecb8a60403392a4005b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152601b60248201527f5175697a3a20496e76616c696420616e737765722070726f6f662e00000000006044820152606490fd5b60203d6020116102db575b601f8101601f1916820167ffffffffffffffff8111838210176102c7576020918391604052810103126102c357519081151582036102c0575038610196565b80fd5b5080fd5b634e487b7160e01b84526041600452602484fd5b503d610281565b6040513d6000823e3d90fd5b600080fd5b60405162461bcd60e51b815260206004820152604160248201527f5175697a3a20596f75206861766520616c726561647920616e7377657265642060448201527f6120686967686572206f7220657175616c20696e646578207175657374696f6e6064820152601760f91b608482015260a490fd5b60405162461bcd60e51b815260206004820152602360248201527f5175697a3a205175657374696f6e20696e646578206f7574206f6620626f756e60448201526232399760e91b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f5175697a3a20596f75206d757374206a6f696e20746865207175697a2066697260448201526239ba1760e91b6064820152608490fd5b346102ee5760203660031901126102ee57600435806000527f4f2f104a7ea12e35172792673c68fe1423b90b4f6b86a6c5f5a9a85bd5652032602052604060002061045b60ff600583015416610671565b60008281527f4f2f104a7ea12e35172792673c68fe1423b90b4f6b86a6c5f5a9a85bd56520336020908152604080832033845290915290205460ff1661061b57816000527f4f2f104a7ea12e35172792673c68fe1423b90b4f6b86a6c5f5a9a85bd5652034602052600460406000205491015411156105d65760008181527f4f2f104a7ea12e35172792673c68fe1423b90b4f6b86a6c5f5a9a85bd5652033602090815260408083203384528252808320805460ff191660011790558383527f4f2f104a7ea12e35172792673c68fe1423b90b4f6b86a6c5f5a9a85bd56520349091529020805490680100000000000000008210156105c057600182018082558210156105aa57600052602060002001336bffffffffffffffffffffffff60a01b825416179055337feb0ce0a0ebb6cd81f55c52eabb2b82d4426db73ee88d3aee11455a02246ae609600080a3005b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152601760248201527f5175697a3a20546865207175697a2069732066756c6c2e0000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152602860248201527f5175697a3a20596f75206861766520616c7265616479206a6f696e656420746860448201526734b99038bab4bd1760c11b6064820152608490fd5b1561067857565b60405162461bcd60e51b815260206004820152601960248201527f5175697a3a205175697a206973206e6f74206163746976652e000000000000006044820152606490fdfea26469706673582212200dac9af5139a810fff21e19641e6230aa1e4ec86b1305a80837a60f73f312fd164736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20725D59 EQ PUSH2 0x40A JUMPI PUSH4 0x96702398 EQ PUSH2 0x32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2EE JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EE JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x2EE JUMPI PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2EE JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x2EE JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2EE JUMPI DUP1 PUSH1 0x5 SHL SWAP1 CALLDATASIZE PUSH1 0x24 DUP4 DUP6 ADD ADD GT PUSH2 0x2EE JUMPI DUP5 PUSH1 0x0 MSTORE PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652033 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP2 DUP6 PUSH1 0x0 MSTORE PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652032 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF DUP5 SLOAD AND ISZERO PUSH2 0x3B9 JUMPI DUP1 PUSH2 0x125 PUSH1 0xFF PUSH1 0x5 PUSH1 0x3 SWAP5 ADD SLOAD AND PUSH2 0x671 JUMP JUMPDEST ADD SLOAD DUP8 LT ISZERO PUSH2 0x368 JUMPI PUSH1 0x2 DUP4 ADD SWAP4 DUP8 DUP6 SLOAD LT ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x8350D44F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB LT PUSH2 0x2EE JUMPI PUSH1 0x64 DUP4 DUP4 PUSH1 0x20 SWAP5 PUSH1 0x24 DUP4 SWAP6 ADD DUP5 DUP5 ADD CALLDATACOPY DUP2 ADD SUB ADD DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x276 JUMPI JUMPDEST POP ISZERO PUSH2 0x231 JUMPI DUP5 PUSH1 0x1 SWAP3 SSTORE DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 DUP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 PUSH1 0x0 MSTORE PUSH1 0x4 DUP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD DUP1 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x21B JUMPI PUSH1 0x1 ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xA06276302B6BB1D092BF330B1622CAAA3FF824D8120568193EB6868F20ECB8A PUSH1 0x40 CALLER SWAP3 LOG4 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A20496E76616C696420616E737765722070726F6F662E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2DB JUMPI JUMPDEST PUSH1 0x1F DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0x2C7 JUMPI PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x40 MSTORE DUP2 ADD SUB SLT PUSH2 0x2C3 JUMPI MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x2C0 JUMPI POP CODESIZE PUSH2 0x196 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x281 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A20596F75206861766520616C726561647920616E73776572656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6120686967686572206F7220657175616C20696E646578207175657374696F6E PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A205175657374696F6E20696E646578206F7574206F6620626F756E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x323997 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A20596F75206D757374206A6F696E20746865207175697A20666972 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x39BA17 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2EE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EE JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652032 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x45B PUSH1 0xFF PUSH1 0x5 DUP4 ADD SLOAD AND PUSH2 0x671 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652033 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x61B JUMPI DUP2 PUSH1 0x0 MSTORE PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652034 PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 ADD SLOAD GT ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652033 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP4 DUP4 MSTORE PUSH32 0x4F2F104A7EA12E35172792673C68FE1423B90B4F6B86A6C5F5A9A85BD5652034 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH2 0x5AA JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD CALLER PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE CALLER PUSH32 0xEB0CE0A0EBB6CD81F55C52EABB2B82D4426DB73EE88D3AEE11455A02246AE609 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A20546865207175697A2069732066756C6C2E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A20596F75206861766520616C7265616479206A6F696E6564207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x34B99038BAB4BD17 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x678 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175697A3A205175697A206973206E6F74206163746976652E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xAC SWAP11 CREATE2 SGT SWAP11 DUP2 0xF SELFDESTRUCT 0x21 0xE1 SWAP7 COINBASE 0xE6 0x23 EXP LOG1 0xE4 0xEC DUP7 0xB1 ADDRESS GAS DUP1 DUP4 PUSH27 0x60F73F312FD164736F6C634300081C003300000000000000000000 ","sourceMap":"579:2605:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;579:2605:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2209:21;579:2605;;;;;;-1:-1:-1;579:2605:12;;;;;;2240:10;579:2605;;;;;;;;;;2282:10;579:2605;;;;;;;;;;;;2397:13;2389:51;579:2605;;2476:19;2397:13;;579:2605;;2389:51;:::i;:::-;2476:19;579:2605;2459:36;;579:2605;;;2554:32;;;579:2605;;;;2554:49;579:2605;;;;;;-1:-1:-1;;;2750:51:12;;579:2605;;;2750:51;;579:2605;;;;;;;;;;;;;;;-1:-1:-1;;;;;;579:2605:12;;;;;;;;;;;;;;;;;2750:51;;2771:4;;2750:51;;;;;;;579:2605;2750:51;;;579:2605;;;;;;;;;;;;2476:19;2933:20;;579:2605;;;;;;;;;;;;;;;;;;3004:18;;579:2605;;;;;;;;;;;;;;3056:12;579:2605;;;;;;;;;;;;;;;;;;;;;;3088:85;579:2605;2240:10;3088:85;;579:2605;;;;;;;2209:21;579:2605;;;;;;;;-1:-1:-1;;;579:2605:12;;;;;;;;;;;;;;;;;;;;2750:51;579:2605;2750:51;579:2605;2750:51;;;;579:2605;;;-1:-1:-1;;579:2605:12;;;;;;;;;;;;;;;;;;2750:51;;579:2605;;;;;;;;;;;;;2750:51;;;;579:2605;;;;;;;;-1:-1:-1;;;579:2605:12;;;;;;;;2750:51;;;;;;579:2605;;;;;;;;;;;;;;;;-1:-1:-1;;;579:2605:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;579:2605:12;;;;;;;;;;-1:-1:-1;;;579:2605:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;579:2605:12;;;;;;;;;;-1:-1:-1;;;579:2605:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;579:2605:12;;;;;;;;;;;;;-1:-1:-1;;579:2605:12;;;;;;;;;1265:10;579:2605;;;;;1297:51;579:2605;1305:13;;;579:2605;;1297:51;:::i;:::-;579:2605;;;;1367:21;579:2605;;;;;;;;1398:10;579:2605;;;;;;;;;;;;;;;1492:14;579:2605;;;;;;;1525:20;;579:2605;-1:-1:-1;579:2605:12;;;;;;;1367:21;579:2605;;;;;;;;1398:10;579:2605;;;;;;;;;-1:-1:-1;;579:2605:12;;;;;;;;1492:14;579:2605;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:10;579:2605;;;;;;;;;1398:10;1714:37;579:2605;1714:37;;579:2605;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;579:2605:12;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;579:2605:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;579:2605:12;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;579:2605:12;;;;;;;;;;;;;;;;;;;"},"methodIdentifiers":{"joinQuiz(uint256)":"20725d59","submitQuizAnswer(uint256,uint256,uint8,bytes32,bytes32[])":"96702398"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"solver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"submittedAnswerHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isCorrect\",\"type\":\"bool\"}],\"name\":\"AnswerSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"name\":\"HintPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"quizId\",\"type\":\"uint256\"}],\"name\":\"PlayerJoinedQuiz\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"activator\",\"type\":\"address\"}],\"name\":\"QuestionActivatedFromBank\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"}],\"name\":\"QuestionClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"difficultyLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseRewardAmount\",\"type\":\"uint256\"}],\"name\":\"QuestionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"name\":\"QuestionRewardWindowStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"quizId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"submittedAnswerIndex\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isCorrect\",\"type\":\"bool\"}],\"name\":\"QuizAnswerSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"quizId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalQuestions\",\"type\":\"uint256\"}],\"name\":\"QuizCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"solver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"RewardDistributed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_quizId\",\"type\":\"uint256\"}],\"name\":\"joinQuiz\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_quizId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_questionIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_submittedAnswerIndex\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"leaf\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"submitQuizAnswer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Facet \\u0e17\\u0e35\\u0e48\\u0e08\\u0e31\\u0e14\\u0e01\\u0e32\\u0e23 Logic \\u0e01\\u0e32\\u0e23\\u0e40\\u0e02\\u0e49\\u0e32\\u0e23\\u0e48\\u0e27\\u0e21\\u0e40\\u0e01\\u0e21\\u0e04\\u0e27\\u0e34\\u0e0b\",\"kind\":\"dev\",\"methods\":{},\"title\":\"QuizParticipationFacet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"joinQuiz(uint256)\":{\"notice\":\"\\u0e1c\\u0e39\\u0e49\\u0e40\\u0e25\\u0e48\\u0e19\\u0e40\\u0e02\\u0e49\\u0e32\\u0e23\\u0e48\\u0e27\\u0e21\\u0e40\\u0e01\\u0e21\\u0e04\\u0e27\\u0e34\\u0e0b\"},\"submitQuizAnswer(uint256,uint256,uint8,bytes32,bytes32[])\":{\"notice\":\"\\u0e1c\\u0e39\\u0e49\\u0e40\\u0e25\\u0e48\\u0e19\\u0e2a\\u0e48\\u0e07\\u0e04\\u0e33\\u0e15\\u0e2d\\u0e1a\\u0e2a\\u0e33\\u0e2b\\u0e23\\u0e31\\u0e1a\\u0e04\\u0e33\\u0e16\\u0e32\\u0e21\\u0e43\\u0e19\\u0e40\\u0e01\\u0e21\\u0e04\\u0e27\\u0e34\\u0e0b\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/facets/QuizParticipationFacet.sol\":\"QuizParticipationFacet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/QuizTypes.sol\":{\"keccak256\":\"0x6faecd3883faf25ec99b657d5972eec3f8c98fec4816ec363e86af44b7077c98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c290a2d82697aecaae04626da29adbe683dcdc75a3679ebe7c8e32e1519336\",\"dweb:/ipfs/QmPTEeLgjfTAsqzCDd9g6zHkByQgopYwGpd2FWcigmR9d9\"]},\"contracts/facets/QuizParticipationFacet.sol\":{\"keccak256\":\"0xe9a3b87bdd4f7b548cd7b8cdd5d17d894407077f3a68fc12474493b8a9a200bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9499c5101e56ef33f546c1ae457c20ca2c8484717062973e682051c5ed592b94\",\"dweb:/ipfs/QmbdmJ9Diu6RRJoTn2DtcCtWEKEyN6CVL4yixhW3ay562n\"]},\"contracts/interfaces/IMerkleFacet.sol\":{\"keccak256\":\"0x891d7acf9b07803c656da93fc9408e39ef0c5aaec189612d0150087368efc8c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62521adb94ea5941de928b64bdd0185992bc5d1877f7045cd765552eeccb34a9\",\"dweb:/ipfs/Qmb5TnKmZp4MrwGzbazTrYbeTvv2siHe4QsVPS3iL6z6SG\"]},\"contracts/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xb568fb1d3827b5007e47d057e64bca1b938078ef4b747b4398effa28592cd9d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://813fcf9e80c8b702e2ea8aa901f90d143b7033508aa8db0e952c2445e2358359\",\"dweb:/ipfs/QmWK7wBKVzYAHUxxcwdHHjJdaCuivc9P2j35pQSvWCwFtF\"]},\"contracts/interfaces/IQuizCoin.sol\":{\"keccak256\":\"0x6734dd57dbb05157b8cbcdbc8f2fae2c7b539cdd523142aa6481b3ca66572ab8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cbc21dc80802bc9770c919f58c8bec8a5209fcd62897a48873b3f521914c749\",\"dweb:/ipfs/QmSDKuVqCuvzqKn12wrc77KDkMV4j3aehYn3XWDRuMd5NC\"]},\"contracts/interfaces/IQuizGameEvents.sol\":{\"keccak256\":\"0xa3927c841b265ec56adebc9b6088bff7c0281b10d932a1b35fc3594045447c35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f502d63f65c43635bc1d1ff57b2093f3d570fcee97b9e6ca22a2d614c5f8a06f\",\"dweb:/ipfs/QmQhgFRkseoCCGfq46Bsi9MKBWjr7xeh1k4r62jQJ3jE1g\"]},\"contracts/libraries/LibAppStorage.sol\":{\"keccak256\":\"0x9c7f5d9fb0b29b97f6b5f83c97b49ddf6470f3c96299f397abe216b638c00989\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c5d9e1bd0fcbf87af8e5627813be0c56b84bc5c094806c64820cefe88584829\",\"dweb:/ipfs/QmVnMYPeMs5eBfvE14QGJB1TVg5FMRqww9puJZfyByCQfG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/IMerkleFacet.sol":{"IMerkleFacet":{"abi":[{"inputs":[{"internalType":"bytes32","name":"leaf","type":"bytes32"}],"name":"getQuizIdFromLeaf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"quizId","type":"uint256"},{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"bytes32[]","name":"leaves","type":"bytes32[]"}],"name":"submitMerkleRoot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"leaf","type":"bytes32"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"verifyQuiz","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getQuizIdFromLeaf(bytes32)":"07d38f3f","submitMerkleRoot(uint256,bytes32,bytes32[])":"ebe6d123","verifyQuiz(bytes32,bytes32[])":"8350d44f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"leaf\",\"type\":\"bytes32\"}],\"name\":\"getQuizIdFromLeaf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quizId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"leaves\",\"type\":\"bytes32[]\"}],\"name\":\"submitMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"leaf\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyQuiz\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMerkleFacet.sol\":\"IMerkleFacet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IMerkleFacet.sol\":{\"keccak256\":\"0x891d7acf9b07803c656da93fc9408e39ef0c5aaec189612d0150087368efc8c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62521adb94ea5941de928b64bdd0185992bc5d1877f7045cd765552eeccb34a9\",\"dweb:/ipfs/Qmb5TnKmZp4MrwGzbazTrYbeTvv2siHe4QsVPS3iL6z6SG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/IPoolManager.sol":{"IPoolManager":{"abi":[{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mintAndTransferToTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newQuizGameDiamondAddress","type":"address"}],"name":"setQuizGameDiamondAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdrawForUser","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"deposit(uint256)":"b6b55f25","mintAndTransferToTreasury(uint256)":"fad7f387","setQuizGameDiamondAddress(address)":"764a36fb","withdrawForUser(address,uint256)":"91200209"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintAndTransferToTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newQuizGameDiamondAddress\",\"type\":\"address\"}],\"name\":\"setQuizGameDiamondAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawForUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPoolManager.sol\":\"IPoolManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xb568fb1d3827b5007e47d057e64bca1b938078ef4b747b4398effa28592cd9d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://813fcf9e80c8b702e2ea8aa901f90d143b7033508aa8db0e952c2445e2358359\",\"dweb:/ipfs/QmWK7wBKVzYAHUxxcwdHHjJdaCuivc9P2j35pQSvWCwFtF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/IQuizCoin.sol":{"IQuizCoin":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"MINTER_ROLE()":"d5391393","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","mint(address,uint256)":"40c10f19","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IQuizCoin.sol\":\"IQuizCoin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/interfaces/IQuizCoin.sol\":{\"keccak256\":\"0x6734dd57dbb05157b8cbcdbc8f2fae2c7b539cdd523142aa6481b3ca66572ab8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cbc21dc80802bc9770c919f58c8bec8a5209fcd62897a48873b3f521914c749\",\"dweb:/ipfs/QmSDKuVqCuvzqKn12wrc77KDkMV4j3aehYn3XWDRuMd5NC\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/IQuizGameEvents.sol":{"IQuizGameEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"questionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"solver","type":"address"},{"indexed":false,"internalType":"bytes32","name":"submittedAnswerHash","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"isCorrect","type":"bool"}],"name":"AnswerSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"questionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":false,"internalType":"uint256","name":"cost","type":"uint256"}],"name":"HintPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":true,"internalType":"uint256","name":"quizId","type":"uint256"}],"name":"PlayerJoinedQuiz","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"questionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"activator","type":"address"}],"name":"QuestionActivatedFromBank","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"questionId","type":"uint256"}],"name":"QuestionClosed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"questionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"uint256","name":"difficultyLevel","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"baseRewardAmount","type":"uint256"}],"name":"QuestionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"questionId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"}],"name":"QuestionRewardWindowStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":true,"internalType":"uint256","name":"quizId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"questionIndex","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"submittedAnswerIndex","type":"uint8"},{"indexed":false,"internalType":"bool","name":"isCorrect","type":"bool"}],"name":"QuizAnswerSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":true,"internalType":"uint256","name":"quizId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rewardAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalQuestions","type":"uint256"}],"name":"QuizCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"questionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"solver","type":"address"},{"indexed":false,"internalType":"uint256","name":"rewardAmount","type":"uint256"}],"name":"RewardDistributed","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"solver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"submittedAnswerHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isCorrect\",\"type\":\"bool\"}],\"name\":\"AnswerSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"name\":\"HintPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"quizId\",\"type\":\"uint256\"}],\"name\":\"PlayerJoinedQuiz\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"activator\",\"type\":\"address\"}],\"name\":\"QuestionActivatedFromBank\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"}],\"name\":\"QuestionClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"difficultyLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseRewardAmount\",\"type\":\"uint256\"}],\"name\":\"QuestionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"name\":\"QuestionRewardWindowStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"quizId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"submittedAnswerIndex\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isCorrect\",\"type\":\"bool\"}],\"name\":\"QuizAnswerSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"quizId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalQuestions\",\"type\":\"uint256\"}],\"name\":\"QuizCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"solver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"RewardDistributed\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IQuizGameEvents.sol\":\"IQuizGameEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/QuizTypes.sol\":{\"keccak256\":\"0x6faecd3883faf25ec99b657d5972eec3f8c98fec4816ec363e86af44b7077c98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c290a2d82697aecaae04626da29adbe683dcdc75a3679ebe7c8e32e1519336\",\"dweb:/ipfs/QmPTEeLgjfTAsqzCDd9g6zHkByQgopYwGpd2FWcigmR9d9\"]},\"contracts/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xb568fb1d3827b5007e47d057e64bca1b938078ef4b747b4398effa28592cd9d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://813fcf9e80c8b702e2ea8aa901f90d143b7033508aa8db0e952c2445e2358359\",\"dweb:/ipfs/QmWK7wBKVzYAHUxxcwdHHjJdaCuivc9P2j35pQSvWCwFtF\"]},\"contracts/interfaces/IQuizCoin.sol\":{\"keccak256\":\"0x6734dd57dbb05157b8cbcdbc8f2fae2c7b539cdd523142aa6481b3ca66572ab8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cbc21dc80802bc9770c919f58c8bec8a5209fcd62897a48873b3f521914c749\",\"dweb:/ipfs/QmSDKuVqCuvzqKn12wrc77KDkMV4j3aehYn3XWDRuMd5NC\"]},\"contracts/interfaces/IQuizGameEvents.sol\":{\"keccak256\":\"0xa3927c841b265ec56adebc9b6088bff7c0281b10d932a1b35fc3594045447c35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f502d63f65c43635bc1d1ff57b2093f3d570fcee97b9e6ca22a2d614c5f8a06f\",\"dweb:/ipfs/QmQhgFRkseoCCGfq46Bsi9MKBWjr7xeh1k4r62jQJ3jE1g\"]},\"contracts/libraries/LibAppStorage.sol\":{\"keccak256\":\"0x9c7f5d9fb0b29b97f6b5f83c97b49ddf6470f3c96299f397abe216b638c00989\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c5d9e1bd0fcbf87af8e5627813be0c56b84bc5c094806c64820cefe88584829\",\"dweb:/ipfs/QmVnMYPeMs5eBfvE14QGJB1TVg5FMRqww9puJZfyByCQfG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/IQuizGameReward.sol":{"IQuizGameReward":{"abi":[{"inputs":[{"internalType":"uint256","name":"_difficultyLevel","type":"uint256"}],"name":"calculateCurrentReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"calculateCurrentReward(uint256)":"4bd54650"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_difficultyLevel\",\"type\":\"uint256\"}],\"name\":\"calculateCurrentReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IQuizGameReward.sol\":\"IQuizGameReward\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/QuizTypes.sol\":{\"keccak256\":\"0x6faecd3883faf25ec99b657d5972eec3f8c98fec4816ec363e86af44b7077c98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c290a2d82697aecaae04626da29adbe683dcdc75a3679ebe7c8e32e1519336\",\"dweb:/ipfs/QmPTEeLgjfTAsqzCDd9g6zHkByQgopYwGpd2FWcigmR9d9\"]},\"contracts/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xb568fb1d3827b5007e47d057e64bca1b938078ef4b747b4398effa28592cd9d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://813fcf9e80c8b702e2ea8aa901f90d143b7033508aa8db0e952c2445e2358359\",\"dweb:/ipfs/QmWK7wBKVzYAHUxxcwdHHjJdaCuivc9P2j35pQSvWCwFtF\"]},\"contracts/interfaces/IQuizCoin.sol\":{\"keccak256\":\"0x6734dd57dbb05157b8cbcdbc8f2fae2c7b539cdd523142aa6481b3ca66572ab8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cbc21dc80802bc9770c919f58c8bec8a5209fcd62897a48873b3f521914c749\",\"dweb:/ipfs/QmSDKuVqCuvzqKn12wrc77KDkMV4j3aehYn3XWDRuMd5NC\"]},\"contracts/interfaces/IQuizGameReward.sol\":{\"keccak256\":\"0x01fbd08cadb068b80173a9ec68afe7624b742f6d87e27edc4e8b51e5d188acaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71f08e4d4a5cdded1f55c4bda1d107df1ac76205acf4ac812cc14c5d2f60bb56\",\"dweb:/ipfs/QmTcYjtFHFmoRXz2TQmLuKW1HkdiVj5ngz2jjdAad3Df9r\"]},\"contracts/libraries/LibAppStorage.sol\":{\"keccak256\":\"0x9c7f5d9fb0b29b97f6b5f83c97b49ddf6470f3c96299f397abe216b638c00989\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c5d9e1bd0fcbf87af8e5627813be0c56b84bc5c094806c64820cefe88584829\",\"dweb:/ipfs/QmVnMYPeMs5eBfvE14QGJB1TVg5FMRqww9puJZfyByCQfG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/libraries/LibAppStorage.sol":{"LibAppStorage":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212206d4795ba4f524307b9a26c61e5eb5c9acf3b13b2e425590c7699fb3e4e92994264736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x4795BA4F524307B9A26C61E5EB5C SWAP11 0xCF EXTCODESIZE SGT 0xB2 0xE4 0x25 MSIZE 0xC PUSH23 0x99FB3E4E92994264736F6C634300081C00330000000000 ","sourceMap":"172:1638:18:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212206d4795ba4f524307b9a26c61e5eb5c9acf3b13b2e425590c7699fb3e4e92994264736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x4795BA4F524307B9A26C61E5EB5C SWAP11 0xCF EXTCODESIZE SGT 0xB2 0xE4 0x25 MSIZE 0xC PUSH23 0x99FB3E4E92994264736F6C634300081C00330000000000 ","sourceMap":"172:1638:18:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/LibAppStorage.sol\":\"LibAppStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/QuizTypes.sol\":{\"keccak256\":\"0x6faecd3883faf25ec99b657d5972eec3f8c98fec4816ec363e86af44b7077c98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c290a2d82697aecaae04626da29adbe683dcdc75a3679ebe7c8e32e1519336\",\"dweb:/ipfs/QmPTEeLgjfTAsqzCDd9g6zHkByQgopYwGpd2FWcigmR9d9\"]},\"contracts/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xb568fb1d3827b5007e47d057e64bca1b938078ef4b747b4398effa28592cd9d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://813fcf9e80c8b702e2ea8aa901f90d143b7033508aa8db0e952c2445e2358359\",\"dweb:/ipfs/QmWK7wBKVzYAHUxxcwdHHjJdaCuivc9P2j35pQSvWCwFtF\"]},\"contracts/interfaces/IQuizCoin.sol\":{\"keccak256\":\"0x6734dd57dbb05157b8cbcdbc8f2fae2c7b539cdd523142aa6481b3ca66572ab8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cbc21dc80802bc9770c919f58c8bec8a5209fcd62897a48873b3f521914c749\",\"dweb:/ipfs/QmSDKuVqCuvzqKn12wrc77KDkMV4j3aehYn3XWDRuMd5NC\"]},\"contracts/libraries/LibAppStorage.sol\":{\"keccak256\":\"0x9c7f5d9fb0b29b97f6b5f83c97b49ddf6470f3c96299f397abe216b638c00989\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c5d9e1bd0fcbf87af8e5627813be0c56b84bc5c094806c64820cefe88584829\",\"dweb:/ipfs/QmVnMYPeMs5eBfvE14QGJB1TVg5FMRqww9puJZfyByCQfG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/libraries/LibMerkleStorage.sol":{"LibMerkleStorage":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203f2170e9c090e992b04263b94a21dbf48100b6023ddc0ca692a95af83fdaa16b64736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0x21 PUSH17 0xE9C090E992B04263B94A21DBF48100B602 RETURNDATASIZE 0xDC 0xC 0xA6 SWAP3 0xA9 GAS 0xF8 EXTCODEHASH 0xDA LOG1 PUSH12 0x64736F6C634300081C003300 ","sourceMap":"61:593:19:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212203f2170e9c090e992b04263b94a21dbf48100b6023ddc0ca692a95af83fdaa16b64736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0x21 PUSH17 0xE9C090E992B04263B94A21DBF48100B602 RETURNDATASIZE 0xDC 0xC 0xA6 SWAP3 0xA9 GAS 0xF8 EXTCODEHASH 0xDA LOG1 PUSH12 0x64736F6C634300081C003300 ","sourceMap":"61:593:19:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/LibMerkleStorage.sol\":\"LibMerkleStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/libraries/LibMerkleStorage.sol\":{\"keccak256\":\"0x39c36f321d39f4aea13bd86d7c7ad6874d66716beb53ecfb50e804d07f4b2608\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d656c53acba34930fafd80cac009a6445baf40f60b9d229a63814120b4e5591\",\"dweb:/ipfs/QmcsMr5S3JVrZUrPEFx6N9NDUJbpKni2AT1LjJ4m3kPnFg\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}}}}}